Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.NavOptions;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.text.util.Linkify;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.HorizontalScrollView;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.SearchView;\r\nimport android.widget.Spinner;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.TelloApplication;\r\nimport com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ChildCategory;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.AddNewProduct;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ProductList;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.SubCategoryBYParentCatID;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.AddNewProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ParentCategoryListResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ProductListResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ShopNameAndImageResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.SubCategoryBYParentCatIDResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.TotalProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.receiver.NetworkReceiver;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.settingprofileediting.SettingProfileEditingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.LoadingDialog;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.NoInternetDetection;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.ScheduledExecutorService;\r\nimport java.util.concurrent.ScheduledThreadPoolExecutor;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport javax.security.auth.login.LoginException;\r\n\r\n\r\npublic class ShopLandingActivity extends AppCompatActivity {\r\n\r\n    private static final int ALLOW_MULTIPLE_IMAGES = 1;\r\n    private NavHostFragment navHostFragment;\r\n    private ImageView setting, addProduct, arrowback, chooseMultipleProductsIV;\r\n    private ImageView iv_close, iv_back_addproduct, menuDots;\r\n    private Button getStarted_btn, uploadProduct;\r\n    private Dialog dialogCongratulation, dialogAddProduct;\r\n    private TextView productList, orderList, chat;\r\n    private LinearLayout Lineartabbar;\r\n    private HorizontalScrollView orderListtabbar;\r\n    private LinearLayout LLtabbar;\r\n    private RelativeLayout received, accepted, dispatched, delivered, paid, cancel, all;\r\n    private TextView deliveryStatus, number, deliveryStatus1, number1, deliveryStatus2, number2, deliveryStatus3, number3;\r\n    private TextView deliveryStatus4, number4, deliveryStatus5, number5, deliveryStatus6, number6;\r\n    private SearchView simpleSearchView;\r\n    private CurrentTab currentTab; //bydefault\r\n    private ShopLandingPageViewModel shopLandingPageViewModel;\r\n    private Spinner parentSpinner, childSpinner;\r\n    private List<String> parentCategories, childCategories;\r\n    private EditText et_OriginalPrice, et_DiscountedPrice, et_SKU, et_Description, et_ProductTitle, et_VideoUrl;\r\n    private String parentCategory = \"1\", childCategory = \"1\", productStatus = \"N\"; //by default\r\n    private LinearLayout LLimages, LL1;\r\n    private Switch isActiveproduct;\r\n    private String filepath;\r\n    private Uri imageUri;\r\n    private List<String> filePaths;\r\n    private List<ChildCategory> childCategoryList;\r\n\r\n    //these fields hide when onsearch is pressed\r\n    ImageView profileImage;\r\n    TextView shopName, totalProducts, tv_addproducts;\r\n    NetworkReceiver networkReceiver;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_shop_landing);\r\n\r\n        NoInternetDetection loadingDialog = new NoInternetDetection(this);\r\n        networkReceiver = new NetworkReceiver(loadingDialog);\r\n        IntentFilter intentFilter = new IntentFilter();\r\n        intentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);\r\n        registerReceiver(networkReceiver, intentFilter);\r\n\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        navHostFragment = (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.nav_host_fragment);\r\n        NavController navController = navHostFragment.getNavController();\r\n\r\n        setShopNameAndImage();\r\n        setTotalProductOnActionBar();\r\n        productList = findViewById(R.id.productList);\r\n        filePaths = new ArrayList<>();\r\n        currentTab = CurrentTab.RECEIVED;\r\n\r\n\r\n        simpleSearchView = findViewById(R.id.simpleSearchView);\r\n        Lineartabbar = findViewById(R.id.tabbar);\r\n        // orderListtabbar = findViewById(R.id.orderListtabbar);\r\n        LLtabbar = findViewById(R.id.LLtabbar);\r\n        // orderListtabbar.setVisibility(View.GONE);\r\n        LLtabbar.setVisibility(View.GONE);\r\n\r\n        deliveryStatus = findViewById(R.id.deliveryStatus);\r\n        deliveryStatus1 = findViewById(R.id.deliveryStatus1);\r\n        deliveryStatus2 = findViewById(R.id.deliveryStatus2);\r\n        deliveryStatus3 = findViewById(R.id.deliveryStatus3);\r\n        deliveryStatus4 = findViewById(R.id.deliveryStatus4);\r\n        deliveryStatus5 = findViewById(R.id.deliveryStatus5);\r\n        deliveryStatus6 = findViewById(R.id.deliveryStatus6);\r\n\r\n\r\n        number = findViewById(R.id.number);\r\n        number1 = findViewById(R.id.number1);\r\n        number2 = findViewById(R.id.number2);\r\n        number3 = findViewById(R.id.number3);\r\n        number4 = findViewById(R.id.number4);\r\n        number5 = findViewById(R.id.number5);\r\n        number6 = findViewById(R.id.number6);\r\n        LL1 = findViewById(R.id.linearTopsearch);\r\n        menuDots = findViewById(R.id.menuDots);\r\n\r\n        shopLandingPageViewModel.allStatusCount(ShopLandingActivity.this);\r\n        shopLandingPageViewModel.getAllStatusCount().observe(this, new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    number.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved()));\r\n                    number1.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getAccept()));\r\n                    number2.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getDispatch()));\r\n                    number3.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getDelieverd()));\r\n                    number4.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getPaid()));\r\n                    number5.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getCancel()));\r\n                    number6.setText(String.valueOf(getOrderStatusCountResponse.getData().getRequestList().get(0).getAll()));\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        profileImage = findViewById(R.id.profileImage);\r\n        shopName = findViewById(R.id.shopName);\r\n        totalProducts = findViewById(R.id.totalProducts);\r\n        tv_addproducts = findViewById(R.id.tv_addproducts);\r\n\r\n\r\n        dialogCongratulation = new Dialog(ShopLandingActivity.this);\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_congratulation);\r\n        dialogCongratulation.show();\r\n\r\n        iv_close = dialogCongratulation.findViewById(R.id.iv_close);\r\n        getStarted_btn = dialogCongratulation.findViewById(R.id.getStarted_btn);\r\n\r\n        ProductList productList1 = new ProductList();\r\n        productList1.setProfileId(Constant.PROFILE_ID);\r\n        hidecongratsdialog();\r\n\r\n        setTotalProductOnActionBar();\r\n\r\n        /* shopLandingPageViewModel.productList(productList1);\r\n        shopLandingPageViewModel.getProductList().observe(ShopLandingActivity.this, new Observer<ProductListResponse>() {\r\n            @Override\r\n            public void onChanged(ProductListResponse productListResponse) {\r\n                if (productListResponse != null) {\r\n                    totalProducts.setText(productListResponse.getData().getRequestList().size() + \" Product\");\r\n                }\r\n            }\r\n        });*/\r\n\r\n        menuDots.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //Creating the instance of PopupMenu\r\n                PopupMenu popup = new PopupMenu(ShopLandingActivity.this, menuDots);\r\n                //Inflating the Popup using xml file\r\n                popup.getMenuInflater().inflate(R.menu.menu, popup.getMenu());\r\n\r\n                //registering popup with OnMenuItemClickListener\r\n                popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                    public boolean onMenuItemClick(MenuItem item) {\r\n                        //Toast.makeText(ShopLandingActivity.this, \"You Clicked : \" + item.getTitle(), Toast.LENGTH_SHORT).show();\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                popup.show();//showing popup menu\r\n            }\r\n        });\r\n\r\n\r\n        iv_close.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n        getStarted_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n        setting = findViewById(R.id.setting);\r\n        setting.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(ShopLandingActivity.this, SettingProfileEditingActivity.class));\r\n            }\r\n        });\r\n\r\n        addProduct = findViewById(R.id.addProduct);\r\n        addProduct.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogAddProduct = new Dialog(ShopLandingActivity.this);\r\n                dialogAddProduct.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n                dialogAddProduct.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n                dialogAddProduct.setContentView(R.layout.dialog_add_product);\r\n\r\n                chooseMultipleProductsIV = dialogAddProduct.findViewById(R.id.chooseMultipleProductsIV);\r\n                LLimages = dialogAddProduct.findViewById(R.id.LLimages);\r\n                isActiveproduct = dialogAddProduct.findViewById(R.id.isActiveproduct);\r\n                isActiveproduct.setOnCheckedChangeListener(onCheckedChangeListener);\r\n\r\n\r\n                chooseMultipleProductsIV.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent intent = new Intent();\r\n                        intent.setType(\"image/*\");\r\n                        intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n                        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), ALLOW_MULTIPLE_IMAGES);\r\n                    }\r\n                });\r\n\r\n                et_OriginalPrice = dialogAddProduct.findViewById(R.id.et_OriginalPrice);\r\n                et_DiscountedPrice = dialogAddProduct.findViewById(R.id.et_DiscountedPrice);\r\n                et_SKU = dialogAddProduct.findViewById(R.id.et_SKU);\r\n                et_Description = dialogAddProduct.findViewById(R.id.et_Description);\r\n                et_ProductTitle = dialogAddProduct.findViewById(R.id.et_ProductTitle);\r\n                et_VideoUrl = dialogAddProduct.findViewById(R.id.et_VideoUrl);\r\n                et_VideoUrl.setText(\"https://www.youtube.com/watch?v=xsU14eHgmBg&t=1s&ab_channel=Electrostore\");\r\n\r\n                parentSpinner = dialogAddProduct.findViewById(R.id.parentSpinner);\r\n                childSpinner = dialogAddProduct.findViewById(R.id.childSpinner);\r\n                parentSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n                childSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n\r\n                uploadParentCategory(parentSpinner, childSpinner);\r\n\r\n                iv_back_addproduct = dialogAddProduct.findViewById(R.id.iv_back);\r\n                iv_back_addproduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        dialogAddProduct.dismiss();\r\n                    }\r\n                });\r\n\r\n                uploadProduct = dialogAddProduct.findViewById(R.id.uploadProduct);\r\n                uploadProduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        //Toast.makeText(ShopLandingActivity.this, \"clickedd...\", Toast.LENGTH_SHORT).show();\r\n\r\n                        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_Description.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_ProductTitle.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_SKU.getText().toString())\r\n                        ) {\r\n                            Toast.makeText(ShopLandingActivity.this, \"Some Fields are missing...\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n\r\n                            if (Integer.parseInt(et_DiscountedPrice.getText().toString()) > Integer.parseInt(et_OriginalPrice.getText().toString())) {\r\n                                Toast.makeText(ShopLandingActivity.this, \"Discounted price must be less than original price...\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            } else if (Integer.parseInt(et_DiscountedPrice.getText().toString()) == Integer.parseInt(et_OriginalPrice.getText().toString())) {\r\n                                Toast.makeText(ShopLandingActivity.this, \"Discounted price can not be same as original price...\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n\r\n\r\n                            AddNewProduct addNewProduct = new AddNewProduct();\r\n                            addNewProduct.setDiscount_Price(et_DiscountedPrice.getText().toString());\r\n                            addNewProduct.setPrice(et_OriginalPrice.getText().toString());\r\n                            addNewProduct.setProduct_Category_id(parentCategory); //parentCategory\r\n                            addNewProduct.setSub_Product_Category_id(childCategory); //childCategory\r\n                            addNewProduct.setSku(et_SKU.getText().toString());\r\n                            addNewProduct.setSummary(et_Description.getText().toString());\r\n                            addNewProduct.setProfileId(Constant.PROFILE_ID);\r\n                            addNewProduct.setProductStatus(productStatus); //work with toggle on and off\r\n                            addNewProduct.setProduct_Pic(filePaths); //here we send a picture path from device...\r\n                            addNewProduct.setTitle(et_ProductTitle.getText().toString());\r\n                            addNewProduct.setVideoName(et_VideoUrl.getText().toString());\r\n                            Linkify.addLinks(et_VideoUrl, Linkify.ALL);\r\n                            LoadingDialog loadingDialog = new LoadingDialog(ShopLandingActivity.this);\r\n                            loadingDialog.showDialog();\r\n                            shopLandingPageViewModel.addNewProduct(addNewProduct,ShopLandingActivity.this);\r\n                            shopLandingPageViewModel.getNewProduct().removeObservers(ShopLandingActivity.this);\r\n                            shopLandingPageViewModel.getNewProduct().observe(ShopLandingActivity.this, new Observer<AddNewProductResponse>() {\r\n                                @Override\r\n                                public void onChanged(AddNewProductResponse addNewProductResponse) {\r\n                                    shopLandingPageViewModel.getNewProduct().removeObservers(ShopLandingActivity.this);\r\n                                    if (addNewProductResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \" : \" + addNewProductResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                        try {\r\n                                            Thread.sleep(2000);\r\n                                        } catch (InterruptedException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        filePaths.clear();\r\n                                        loadingDialog.dismissDialog();\r\n                                        dialogAddProduct.dismiss();\r\n                                        setTotalProductOnActionBar();\r\n                                        navController.navigate(R.id.shopLandingFragment);\r\n\r\n                                    } else {\r\n                                        loadingDialog.dismissDialog();\r\n                                        Toast.makeText(ShopLandingActivity.this, \"Some thing went wrong...\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                    loadingDialog.dismissDialog();\r\n                                }\r\n                            });\r\n\r\n                            // navController.navigate(R.id.shopLandingFragment);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                Window window = dialogAddProduct.getWindow();\r\n                WindowManager.LayoutParams wlp = window.getAttributes();\r\n                window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n\r\n                window.setAttributes(wlp);\r\n                dialogAddProduct.show();\r\n            }\r\n        });\r\n\r\n\r\n        productList.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // orderListtabbar.setVisibility(View.GONE);\r\n                LLtabbar.setVisibility(View.GONE);\r\n\r\n                productList.setTextColor(Color.WHITE);\r\n                productList.setBackground(getResources().getDrawable(R.drawable.bg_text_left_rounded));\r\n\r\n                orderList.setTextColor(Color.BLACK);\r\n                orderList.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                chat.setTextColor(Color.BLACK);\r\n                chat.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                Lineartabbar.setBackground(getResources().getDrawable(R.drawable.bg_tab));\r\n\r\n\r\n                addProduct.setVisibility(View.VISIBLE);\r\n                setting.setVisibility(View.VISIBLE);\r\n                LL1.setVisibility(View.GONE);\r\n                profileImage.setVisibility(View.VISIBLE);\r\n                shopName.setVisibility(View.VISIBLE);\r\n                totalProducts.setVisibility(View.VISIBLE);\r\n                tv_addproducts.setVisibility(View.VISIBLE);\r\n\r\n                if (!simpleSearchView.isIconified()) {\r\n                    simpleSearchView.setIconified(true);\r\n                }\r\n\r\n                navController.navigate(R.id.shopLandingFragment);\r\n            }\r\n        });\r\n\r\n        orderList = findViewById(R.id.orderList);\r\n        orderList.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //  orderListtabbar.setVisibility(View.VISIBLE);\r\n                LLtabbar.setVisibility(View.VISIBLE);\r\n\r\n                productList.setTextColor(Color.BLACK);\r\n                productList.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                orderList.setTextColor(Color.WHITE);\r\n                orderList.setBackground(getResources().getDrawable(R.drawable.bg_text_center_grey));\r\n\r\n                chat.setTextColor(Color.BLACK);\r\n                chat.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                Lineartabbar.setBackground(getResources().getDrawable(R.drawable.bg_tab));\r\n\r\n                //addProduct.setImageDrawable(getResources().getDrawable(R.drawable.ic_search));\r\n                //setting.setImageDrawable(getResources().getDrawable(R.drawable.ic_menu));\r\n\r\n                addProduct.setVisibility(View.GONE);\r\n                setting.setVisibility(View.GONE);\r\n                LL1.setVisibility(View.VISIBLE);\r\n                tv_addproducts.setVisibility(View.GONE);\r\n\r\n                if (!simpleSearchView.isIconified()) {\r\n                    simpleSearchView.setIconified(true);\r\n                }\r\n\r\n\r\n                switch (currentTab) {\r\n                    case RECEIVED:\r\n                        navController.navigate(R.id.receivedFragment);\r\n                        break;\r\n                    case ACCEPTED:\r\n                        navController.navigate(R.id.acceptedFragment);\r\n                        break;\r\n                    case DISPATCHED:\r\n                        navController.navigate(R.id.dispatchedFragment);\r\n                        break;\r\n                    case DELIVERED:\r\n                        navController.navigate(R.id.deliveredFragment);\r\n                        break;\r\n                    case PAID:\r\n                        navController.navigate(R.id.paidFragment);\r\n                        break;\r\n                    case CANCEL:\r\n                        navController.navigate(R.id.cancelledFragment);\r\n                        break;\r\n                    case ALL:\r\n                        navController.navigate(R.id.allFragment);\r\n                        break;\r\n                }\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n        chat = findViewById(R.id.chat);\r\n        chat.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // orderListtabbar.setVisibility(View.GONE);\r\n                LLtabbar.setVisibility(View.GONE);\r\n\r\n                productList.setTextColor(Color.BLACK);\r\n                productList.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                orderList.setTextColor(Color.BLACK);\r\n                orderList.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n                chat.setTextColor(Color.WHITE);\r\n                chat.setBackground(getResources().getDrawable(R.drawable.bg_text_right_rounded));\r\n\r\n                Lineartabbar.setBackground(getResources().getDrawable(R.drawable.bg_tab));\r\n\r\n             /*   addProduct.setImageDrawable(getResources().getDrawable(R.drawable.ic_search));\r\n                setting.setImageDrawable(getResources().getDrawable(R.drawable.ic_menu));\r\n*/\r\n\r\n                addProduct.setVisibility(View.GONE);\r\n                setting.setVisibility(View.GONE);\r\n                LL1.setVisibility(View.VISIBLE);\r\n                tv_addproducts.setVisibility(View.GONE);\r\n\r\n                if (!simpleSearchView.isIconified()) {\r\n                    simpleSearchView.setIconified(true);\r\n                }\r\n\r\n              //  currentTab = CurrentTab.CHAT;\r\n                navController.navigate(R.id.chat);\r\n            }\r\n        });\r\n\r\n        arrowback = findViewById(R.id.arrowback);\r\n        arrowback.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        //received , accepted, dispatched, delivered, paid, cancel, all;\r\n\r\n        received = findViewById(R.id.received);\r\n        received.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Toast.makeText(ShopLandingActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                navController.navigate(R.id.receivedFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.WHITE);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.WHITE);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.RECEIVED;\r\n            }\r\n        });\r\n\r\n        accepted = findViewById(R.id.accepted);\r\n        accepted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                navController.navigate(R.id.acceptedFragment, null, new NavOptions.Builder()\r\n                        .setPopUpTo(R.id.received, true)\r\n                        .build());\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.WHITE);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.WHITE);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.ACCEPTED;\r\n                //  navController.navigate(R.id.acceptedFragment);\r\n            }\r\n        });\r\n\r\n        dispatched = findViewById(R.id.dispatched);\r\n        dispatched.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.dispatchedFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.WHITE);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.WHITE);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.DISPATCHED;\r\n\r\n            }\r\n        });\r\n\r\n        delivered = findViewById(R.id.delivered);\r\n        delivered.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.deliveredFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.WHITE);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.WHITE);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.DELIVERED;\r\n\r\n            }\r\n        });\r\n\r\n        paid = findViewById(R.id.paid);\r\n        paid.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.paidFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.WHITE);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.WHITE);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.PAID;\r\n            }\r\n        });\r\n\r\n        cancel = findViewById(R.id.cancel);\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.cancelledFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.WHITE);\r\n                deliveryStatus6.setTextColor(Color.BLACK);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.WHITE);\r\n                number6.setTextColor(Color.BLACK);\r\n\r\n                currentTab = CurrentTab.CANCEL;\r\n\r\n            }\r\n        });\r\n\r\n        all = findViewById(R.id.all);\r\n        all.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.allFragment);\r\n\r\n                received.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                accepted.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                dispatched.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                delivered.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                paid.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                cancel.setBackground(getResources().getDrawable(R.drawable.order_list_tabs_unselected));\r\n                all.setBackground(getResources().getDrawable(R.drawable.order_list_tabs));\r\n\r\n                deliveryStatus.setTextColor(Color.BLACK);\r\n                deliveryStatus1.setTextColor(Color.BLACK);\r\n                deliveryStatus2.setTextColor(Color.BLACK);\r\n                deliveryStatus3.setTextColor(Color.BLACK);\r\n                deliveryStatus4.setTextColor(Color.BLACK);\r\n                deliveryStatus5.setTextColor(Color.BLACK);\r\n                deliveryStatus6.setTextColor(Color.WHITE);\r\n\r\n                number.setTextColor(Color.BLACK);\r\n                number1.setTextColor(Color.BLACK);\r\n                number2.setTextColor(Color.BLACK);\r\n                number3.setTextColor(Color.BLACK);\r\n                number4.setTextColor(Color.BLACK);\r\n                number5.setTextColor(Color.BLACK);\r\n                number6.setTextColor(Color.WHITE);\r\n\r\n                currentTab = CurrentTab.ALL;\r\n            }\r\n        });\r\n\r\n        simpleSearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n\r\n                profileImage.setVisibility(View.GONE);\r\n                shopName.setVisibility(View.GONE);\r\n                totalProducts.setVisibility(View.GONE);\r\n                tv_addproducts.setVisibility(View.GONE);\r\n\r\n                /*switch (currentTab) {\r\n                    case RECEIVED:\r\n                        Bundle bundle = new Bundle();\r\n                        bundle.putString(\"query\", query);\r\n                        navController.navigate(R.id.receivedFragment, bundle);\r\n                        break;\r\n                    case ACCEPTED:\r\n                        Bundle bundle1 = new Bundle();\r\n                        bundle1.putString(\"query\", query);\r\n                        navController.navigate(R.id.acceptedFragment, bundle1);\r\n                        break;\r\n                    case DISPATCHED:\r\n                        Bundle bundle2 = new Bundle();\r\n                        bundle2.putString(\"query\", query);\r\n                        navController.navigate(R.id.dispatchedFragment, bundle2);\r\n                        break;\r\n                    case DELIVERED:\r\n                        Bundle bundle3 = new Bundle();\r\n                        bundle3.putString(\"query\", query);\r\n                        navController.navigate(R.id.deliveredFragment, bundle3);\r\n                        break;\r\n                    case PAID:\r\n                        Bundle bundle4 = new Bundle();\r\n                        bundle4.putString(\"query\", query);\r\n                        navController.navigate(R.id.paidFragment, bundle4);\r\n                        break;\r\n                    case CANCEL:\r\n                        Bundle bundle5 = new Bundle();\r\n                        bundle5.putString(\"query\", query);\r\n                        navController.navigate(R.id.cancelledFragment, bundle5);\r\n                        break;\r\n                    case ALL:\r\n                        Bundle bundle6 = new Bundle();\r\n                        bundle6.putString(\"query\", query);\r\n                        navController.navigate(R.id.allFragment, bundle6);\r\n                        break;\r\n                }*/\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                switch (currentTab) {\r\n                    case RECEIVED:\r\n                        Bundle bundle = new Bundle();\r\n                        bundle.putString(\"query\", newText);\r\n                        navController.navigate(R.id.receivedFragment, bundle);\r\n                        break;\r\n                    case ACCEPTED:\r\n                        Bundle bundle1 = new Bundle();\r\n                        bundle1.putString(\"query\", newText);\r\n                        navController.navigate(R.id.acceptedFragment, bundle1);\r\n                        break;\r\n                    case DISPATCHED:\r\n                        Bundle bundle2 = new Bundle();\r\n                        bundle2.putString(\"query\", newText);\r\n                        navController.navigate(R.id.dispatchedFragment, bundle2);\r\n                        break;\r\n                    case DELIVERED:\r\n                        Bundle bundle3 = new Bundle();\r\n                        bundle3.putString(\"query\", newText);\r\n                        navController.navigate(R.id.deliveredFragment, bundle3);\r\n                        break;\r\n                    case PAID:\r\n                        Bundle bundle4 = new Bundle();\r\n                        bundle4.putString(\"query\", newText);\r\n                        navController.navigate(R.id.paidFragment, bundle4);\r\n                        break;\r\n                    case CANCEL:\r\n                        Bundle bundle5 = new Bundle();\r\n                        bundle5.putString(\"query\", newText);\r\n                        navController.navigate(R.id.cancelledFragment, bundle5);\r\n                        break;\r\n                    case ALL:\r\n                        Bundle bundle6 = new Bundle();\r\n                        bundle6.putString(\"query\", newText);\r\n                        navController.navigate(R.id.allFragment, bundle6);\r\n                        break;\r\n                    case CHAT:\r\n                        Bundle bundle7 = new Bundle();\r\n                        bundle7.putString(\"query\", newText);\r\n                        navController.navigate(R.id.chat, bundle7);\r\n                        break;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n        });\r\n\r\n        simpleSearchView.setOnCloseListener(new SearchView.OnCloseListener() {\r\n            @Override\r\n            public boolean onClose() {\r\n                profileImage.setVisibility(View.VISIBLE);\r\n                shopName.setVisibility(View.VISIBLE);\r\n                totalProducts.setVisibility(View.VISIBLE);\r\n                //tv_addproducts.setVisibility(View.VISIBLE);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        simpleSearchView.setOnSearchClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                profileImage.setVisibility(View.GONE);\r\n                shopName.setVisibility(View.GONE);\r\n                totalProducts.setVisibility(View.GONE);\r\n                tv_addproducts.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void setShopNameAndImage() {\r\n        //LoadingDialog loadingDialog = new LoadingDialog(ShopLandingActivity.this);\r\n        //loadingDialog.showDialog();\r\n        shopLandingPageViewModel.shopImageAndName(ShopLandingActivity.this);\r\n        shopLandingPageViewModel.getShopNameAndImage().observe(ShopLandingActivity.this, new Observer<ShopNameAndImageResponse>() {\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void onChanged(ShopNameAndImageResponse shopNameAndImageResponse) {\r\n                if (shopNameAndImageResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, shopNameAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                    shopName.setText(shopNameAndImageResponse.getData().getRequestList().get(0).getShopName());\r\n                    if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                        shopName.setTooltipText(shopNameAndImageResponse.getData().getRequestList().get(0).getShopName());\r\n                    }\r\n                    Glide.with(ShopLandingActivity.this).load(shopNameAndImageResponse.getData().getRequestList().get(0).getShopProfile()).into(profileImage);\r\n                    // loadingDialog.dismissDialog();\r\n                    // shopLandingPageViewModel.getShopNameAndImage().removeObservers(ShopLandingActivity.this);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void hidecongratsdialog() {\r\n        dialogCongratulation.dismiss();\r\n    }\r\n\r\n    public void setTotalProductOnActionBar() {\r\n       /* ProductList productList1 = new ProductList();\r\n        productList1.setProfileId(TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getProfileId());\r\n        shopLandingPageViewModel.productList(productList1, \"0\");\r\n        shopLandingPageViewModel.getProductList().observe(ShopLandingActivity.this, new Observer<ProductListResponse>() {\r\n            @Override\r\n            public void onChanged(ProductListResponse productListResponse) {\r\n                if (productListResponse != null) {\r\n                    if (productListResponse.getData().getRequestList() != null) {\r\n                        totalProducts.setText(productListResponse.getData().getRequestList().size() + \" Products\");\r\n                    } else {\r\n                        totalProducts.setText(\"0\" + \" Product\");\r\n                    }\r\n                }\r\n            }\r\n        });*/\r\n\r\n        shopLandingPageViewModel.shopTotalProducts(ShopLandingActivity.this);\r\n        shopLandingPageViewModel.getShopTotalProducts().observe(ShopLandingActivity.this, new Observer<TotalProductResponse>() {\r\n            @Override\r\n            public void onChanged(TotalProductResponse totalProductResponse) {\r\n                if (totalProductResponse != null) {\r\n                    if (totalProductResponse.getData().getRequestList().getRequestList() != null) {\r\n                        totalProducts.setText(totalProductResponse.getData().getRequestList().getRequestList().get(0).getProductCount() + \" \" + \"Products\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void uploadParentCategory(Spinner parentSpinner, Spinner childSpinner) {\r\n        shopLandingPageViewModel.parentCategories(ShopLandingActivity.this);\r\n        shopLandingPageViewModel.getParentCategoryListResponseLiveData().observe(ShopLandingActivity.this, new Observer<ParentCategoryListResponse>() {\r\n            @Override\r\n            public void onChanged(ParentCategoryListResponse parentCategoryListResponse) {\r\n                if (parentCategoryListResponse != null) {\r\n                    //populate spinner here...\r\n                    parentCategories = new ArrayList<>();\r\n\r\n                    for (int i = 0; i < parentCategoryListResponse.getData().getRequestList().size(); i++) {\r\n                        parentCategories.add(parentCategoryListResponse.getData().getRequestList().get(i).getTitle());\r\n                    }\r\n\r\n                    ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(ShopLandingActivity.this, R.layout.spinner_text, parentCategories);\r\n                    spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                    parentSpinner.setAdapter(spinnerArrayAdapter);\r\n\r\n                    // Toast.makeText(ShopLandingActivity.this, \"product is : \" +  parentCategoryListResponse.getData().getRequestList().get(0).getColumn1(), Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Toast.makeText(ShopLandingActivity.this, \"Null\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void uploadChildCategory(String id, Spinner childSpinner) {\r\n        SubCategoryBYParentCatID subCategoryBYParentCatID = new SubCategoryBYParentCatID();\r\n        subCategoryBYParentCatID.setParentCategoryId(id);\r\n\r\n        shopLandingPageViewModel.childCategoryByParentId(subCategoryBYParentCatID,ShopLandingActivity.this);\r\n        shopLandingPageViewModel.getChildCategories().observe(this, new Observer<SubCategoryBYParentCatIDResponse>() {\r\n            @Override\r\n            public void onChanged(SubCategoryBYParentCatIDResponse subCategoryBYParentCatIDResponse) {\r\n                if (subCategoryBYParentCatIDResponse != null) {\r\n                    childCategories = new ArrayList<>();\r\n                    childCategoryList = new ArrayList<>();\r\n                    //  Toast.makeText(ShopLandingActivity.this, \"status : \" + subCategoryBYParentCatIDResponse.getData().getRequestList().size(), Toast.LENGTH_SHORT).show();\r\n                    childCategoryList.clear();\r\n                    if (subCategoryBYParentCatIDResponse.getData().getRequestList() != null && subCategoryBYParentCatIDResponse.getData().getRequestList().size() > 0) {\r\n\r\n                        for (int i = 0; i < subCategoryBYParentCatIDResponse.getData().getRequestList().size(); i++) {\r\n                            childCategoryList.add(new ChildCategory(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getId(), subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle()));\r\n                            childCategories.add(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle());\r\n                        }\r\n\r\n                        ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(ShopLandingActivity.this, R.layout.spinner_text, childCategories);\r\n                        spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                        childSpinner.setAdapter(spinnerArrayAdapter);\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        finish();\r\n    }\r\n\r\n    enum CurrentTab {\r\n        RECEIVED,\r\n        ACCEPTED,\r\n        DISPATCHED,\r\n        DELIVERED,\r\n        PAID,\r\n        CANCEL,\r\n        ALL,\r\n        CHAT\r\n    }\r\n\r\n    //listener for selecting parent and child category items...\r\n    AdapterView.OnItemSelectedListener onItemSelectedListener = new AdapterView.OnItemSelectedListener() {\r\n        @Override\r\n        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n            if (parent.getId() == parentSpinner.getId()) {\r\n                parentCategory = String.valueOf(parentSpinner.getSelectedItemPosition() + 1);\r\n                uploadChildCategory(parentCategory, childSpinner);\r\n            }\r\n\r\n            if (parent.getId() == childSpinner.getId()) {\r\n                // childCategory = String.valueOf(childSpinner.getSelectedItemPosition() + 1);\r\n                childCategory = String.valueOf(childCategoryList.get(childSpinner.getSelectedItemPosition()).getSubCategoryNumber());\r\n                //  Toast.makeText(ShopLandingActivity.this, \"\" + childCategory, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n        }\r\n    };\r\n\r\n\r\n    //for switch button on timings dialog...\r\n    CompoundButton.OnCheckedChangeListener onCheckedChangeListener = new CompoundButton.OnCheckedChangeListener() {\r\n        @Override\r\n        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n            if (buttonView.getId() == isActiveproduct.getId()) {\r\n                isActiveproduct.setChecked(isChecked);\r\n                productStatus = isActiveproduct.isChecked() ? \"Y\" : \"N\";\r\n                Toast.makeText(ShopLandingActivity.this, \"\" + isChecked, Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    //here we set multiple images from gallery\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == ALLOW_MULTIPLE_IMAGES && resultCode == RESULT_OK) {\r\n            if (data.getClipData() != null) {\r\n                ImageView iv;\r\n              /*  int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                for (int i = 0; i < count; i++) {\r\n                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                    iv = inflater.findViewById(R.id.iv);\r\n                    imageUri = data.getClipData().getItemAt(i).getUri();\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                    filepath = getImagePath(imageUri);\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                    filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                    iv.setImageURI(imageUri);\r\n                    LLimages.addView(inflater);\r\n                }*/\r\n\r\n                // filepath = getPath(ShopLandingActivity.this, imageUri);\r\n                // filepath = getFileNameByUri(ShopLandingActivity.this, imageUri);\r\n                // filepath = getRealPathFromURI(ShopLandingActivity.this, imageUri);\r\n                //do something with the image (save it to some directory or whatever you need to do with it here)\r\n\r\n                if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                    int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                    for (int i = 0; i < count; i++) {\r\n                        LayoutInflater inflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                        View view = inflater.inflate(R.layout.image_item_for_multiple_images, null);\r\n                        //  View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                        iv = view.findViewById(R.id.iv);\r\n                        Uri selectedImage = data.getClipData().getItemAt(i).getUri();\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + selectedImage.getPath());\r\n                        filepath = getImagePath(selectedImage);\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                        filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n\r\n                        Bitmap bitmap = null;\r\n                        try {\r\n                            bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), selectedImage);\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                        iv.setImageBitmap(resized);\r\n                        LLimages.addView(view);\r\n                    }\r\n                } /*else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {\r\n                    Toast.makeText(ShopLandingActivity.this, \" android 11 or greater...\", Toast.LENGTH_SHORT).show();\r\n                    int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                    for (int i = 0; i < count; i++) {\r\n                        View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                        iv = inflater.findViewById(R.id.iv);\r\n                        imageUri = data.getClipData().getItemAt(i).getUri();\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                        filepath = getPath(ShopLandingActivity.this,imageUri);\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                        filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                        iv.setImageURI(imageUri);\r\n                        LLimages.addView(inflater);\r\n                    }\r\n                }*/ else {\r\n                    int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                    for (int i = 0; i < count; i++) {\r\n                        View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                        iv = inflater.findViewById(R.id.iv);\r\n                        imageUri = data.getClipData().getItemAt(i).getUri();\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                        filepath = getImagePath(imageUri);\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                        filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                        iv.setImageURI(imageUri);\r\n                        LLimages.addView(inflater);\r\n                    }\r\n                }\r\n\r\n\r\n            } else if (data.getData() != null) {\r\n                //  String imagePath = data.getData().getPath();\r\n                // imageUri = data.getData();\r\n                // View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                // ImageView iv = inflater.findViewById(R.id.iv);\r\n                // filepath = getImagePath(imageUri);\r\n                // filePaths.add(filepath);\r\n                // iv.setImageURI(imageUri);\r\n                // LLimages.addView(inflater);\r\n\r\n                if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                    Uri selectedImage = data.getData();\r\n                    LayoutInflater inflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                    View view = inflater.inflate(R.layout.image_item_for_multiple_images, null);\r\n\r\n                    // View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images,null);\r\n                    // ImageView iv = inflater.findViewById(R.id.iv);\r\n                    ImageView iv = view.findViewById(R.id.iv);\r\n                    filepath = getImagePath(selectedImage);\r\n                    filePaths.add(filepath);\r\n\r\n                    Bitmap bitmap = null;\r\n                    try {\r\n                        bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), selectedImage);\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                    iv.setImageBitmap(resized);\r\n                    LLimages.addView(view);\r\n                } else {\r\n                    String imagePath = data.getData().getPath();\r\n                    imageUri = data.getData();\r\n                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                    ImageView iv = inflater.findViewById(R.id.iv);\r\n                    filepath = getImagePath(imageUri);\r\n                    // filepath = getPath(ShopLandingActivity.this,imageUri);\r\n                    filePaths.add(filepath);\r\n                    iv.setImageURI(imageUri);\r\n                    LLimages.addView(inflater);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public String getImagePath(Uri uri) {\r\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n        cursor.moveToFirst();\r\n        String document_id = cursor.getString(0);\r\n        document_id = document_id.substring(document_id.lastIndexOf(\":\") + 1);\r\n        cursor.close();\r\n\r\n        cursor = getContentResolver().query(\r\n                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n                null, MediaStore.Images.Media._ID + \" = ? \", new String[]{document_id}, null);\r\n        cursor.moveToFirst();\r\n        String path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));\r\n        cursor.close();\r\n\r\n        return path;\r\n    }\r\n\r\n    //This method return file path when we choose image from gallery\r\n    public static String getPath(Context context, Uri uri) {\r\n        String result = null;\r\n        String[] proj = {MediaStore.Images.Media.DATA};\r\n        Cursor cursor = context.getContentResolver().query(uri, proj, null, null, null);\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                int column_index = cursor.getColumnIndexOrThrow(proj[0]);\r\n                result = cursor.getString(column_index);\r\n            }\r\n            cursor.close();\r\n        }\r\n        if (result == null) {\r\n            result = \"Not found\";\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static String getFileNameByUri(Context context, Uri uri) {\r\n        String fileName = \"unknown\";//default fileName\r\n        Uri filePathUri = uri;\r\n        if (uri.getScheme().toString().compareTo(\"content\") == 0) {\r\n            Cursor cursor = context.getContentResolver().query(uri, null, null, null, null);\r\n            if (cursor.moveToFirst()) {\r\n                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);//Instead of \"MediaStore.Images.Media.DATA\" can be used \"_data\"\r\n                filePathUri = Uri.parse(cursor.getString(column_index));\r\n                fileName = filePathUri.getLastPathSegment().toString();\r\n            }\r\n        } else if (uri.getScheme().compareTo(\"file\") == 0) {\r\n            fileName = filePathUri.getLastPathSegment().toString();\r\n        } else {\r\n            fileName = fileName + \"_\" + filePathUri.getLastPathSegment();\r\n        }\r\n        return fileName;\r\n    }\r\n\r\n    public String getRealPathFromURI(Context context, Uri contentUri) {\r\n        Cursor cursor = null;\r\n        try {\r\n            String[] proj = {MediaStore.Images.Media.DATA};\r\n            cursor = context.getContentResolver().query(contentUri, proj, null,\r\n                    null, null);\r\n            int column_index = cursor\r\n                    .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\r\n            cursor.moveToFirst();\r\n            return cursor.getString(column_index);\r\n        } finally {\r\n            if (cursor != null) {\r\n                cursor.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setOrderStatus(List<GetOrderStatusCountResponse.Request> requestList) {\r\n        // Toast.makeText(this, \"\" + requestList.get(0).getRecieved() , Toast.LENGTH_SHORT).show();\r\n        number.setText(String.valueOf(requestList.get(0).getRecieved()));\r\n        number1.setText(String.valueOf(requestList.get(0).getAccept()));\r\n        number2.setText(String.valueOf(requestList.get(0).getDispatch()));\r\n        number3.setText(String.valueOf(requestList.get(0).getDelieverd()));\r\n        number4.setText(String.valueOf(requestList.get(0).getPaid()));\r\n        number5.setText(String.valueOf(requestList.get(0).getCancel()));\r\n        number6.setText(String.valueOf(requestList.get(0).getAll()));\r\n    }\r\n\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingActivity.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingActivity.java	(date 1628494542534)
@@ -25,6 +25,7 @@
 import android.os.Bundle;
 import android.os.CountDownTimer;
 import android.os.Handler;
+import android.os.StrictMode;
 import android.provider.MediaStore;
 import android.text.TextUtils;
 import android.text.util.Linkify;
@@ -51,6 +52,8 @@
 import android.widget.Toast;
 
 import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.bumptech.glide.request.RequestOptions;
 import com.tilismtech.tellotalk_shopping_sdk.R;
 import com.tilismtech.tellotalk_shopping_sdk.TelloApplication;
 import com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;
@@ -70,6 +73,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
 import com.tilismtech.tellotalk_shopping_sdk.utils.LoadingDialog;
 import com.tilismtech.tellotalk_shopping_sdk.utils.NoInternetDetection;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -309,28 +313,28 @@
                 uploadProduct.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {
-                        //Toast.makeText(ShopLandingActivity.this, "clickedd...", Toast.LENGTH_SHORT).show();
 
-                        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString()) ||
-                                TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ||
-                                TextUtils.isEmpty(et_Description.getText().toString()) ||
-                                TextUtils.isEmpty(et_ProductTitle.getText().toString()) ||
-                                TextUtils.isEmpty(et_SKU.getText().toString())
+                        if (!Utility.isNetworkAvailable(ShopLandingActivity.this)) {
+                            Toast.makeText(ShopLandingActivity.this, getResources().getString(R.string.internet_connection), Toast.LENGTH_SHORT).show();
+                            return;
+                        }
+
+                        if (checkAddProductValidation()
                         ) {
-                            Toast.makeText(ShopLandingActivity.this, "Some Fields are missing...", Toast.LENGTH_SHORT).show();
-                        } else {
 
-                            if (Integer.parseInt(et_DiscountedPrice.getText().toString()) > Integer.parseInt(et_OriginalPrice.getText().toString())) {
-                                Toast.makeText(ShopLandingActivity.this, "Discounted price must be less than original price...", Toast.LENGTH_SHORT).show();
-                                return;
-                            } else if (Integer.parseInt(et_DiscountedPrice.getText().toString()) == Integer.parseInt(et_OriginalPrice.getText().toString())) {
-                                Toast.makeText(ShopLandingActivity.this, "Discounted price can not be same as original price...", Toast.LENGTH_SHORT).show();
-                                return;
+                            if (!et_DiscountedPrice.getText().toString().equals("")) {
+                                if (Double.parseDouble(et_DiscountedPrice.getText().toString()) > Double.parseDouble(et_OriginalPrice.getText().toString())) {
+                                    Toast.makeText(ShopLandingActivity.this, "Discounted price must be less than original price...", Toast.LENGTH_SHORT).show();
+                                    return;
+                                } else if (Double.parseDouble(et_DiscountedPrice.getText().toString()) == Double.parseDouble(et_OriginalPrice.getText().toString())) {
+                                    Toast.makeText(ShopLandingActivity.this, "Discounted price can not be same as original price...", Toast.LENGTH_SHORT).show();
+                                    return;
+                                }
                             }
 
 
                             AddNewProduct addNewProduct = new AddNewProduct();
-                            addNewProduct.setDiscount_Price(et_DiscountedPrice.getText().toString());
+                            addNewProduct.setDiscount_Price(TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ? "0" : et_DiscountedPrice.getText().toString());
                             addNewProduct.setPrice(et_OriginalPrice.getText().toString());
                             addNewProduct.setProduct_Category_id(parentCategory); //parentCategory
                             addNewProduct.setSub_Product_Category_id(childCategory); //childCategory
@@ -344,7 +348,7 @@
                             Linkify.addLinks(et_VideoUrl, Linkify.ALL);
                             LoadingDialog loadingDialog = new LoadingDialog(ShopLandingActivity.this);
                             loadingDialog.showDialog();
-                            shopLandingPageViewModel.addNewProduct(addNewProduct,ShopLandingActivity.this);
+                            shopLandingPageViewModel.addNewProduct(addNewProduct, ShopLandingActivity.this);
                             shopLandingPageViewModel.getNewProduct().removeObservers(ShopLandingActivity.this);
                             shopLandingPageViewModel.getNewProduct().observe(ShopLandingActivity.this, new Observer<AddNewProductResponse>() {
                                 @Override
@@ -476,7 +480,6 @@
                 }
 
 
-
             }
         });
 
@@ -484,8 +487,57 @@
         chat.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                // orderListtabbar.setVisibility(View.GONE);
-                LLtabbar.setVisibility(View.GONE);
+
+                LLtabbar.setVisibility(View.VISIBLE);
+
+                productList.setTextColor(Color.BLACK);
+                productList.setBackgroundColor(Color.TRANSPARENT);
+
+                orderList.setTextColor(Color.BLACK);
+                orderList.setBackgroundColor(Color.TRANSPARENT);
+
+                chat.setTextColor(Color.WHITE);
+                chat.setBackground(getResources().getDrawable(R.drawable.bg_text_right_rounded));
+
+                Lineartabbar.setBackground(getResources().getDrawable(R.drawable.bg_tab));
+
+                addProduct.setVisibility(View.GONE);
+                setting.setVisibility(View.GONE);
+                LL1.setVisibility(View.VISIBLE);
+                tv_addproducts.setVisibility(View.GONE);
+
+                if (!simpleSearchView.isIconified()) {
+                    simpleSearchView.setIconified(true);
+                }
+
+
+                switch (currentTab) {
+                    case RECEIVED:
+                        navController.navigate(R.id.receivedFragment);
+                        break;
+                    case ACCEPTED:
+                        navController.navigate(R.id.acceptedFragment);
+                        break;
+                    case DISPATCHED:
+                        navController.navigate(R.id.dispatchedFragment);
+                        break;
+                    case DELIVERED:
+                        navController.navigate(R.id.deliveredFragment);
+                        break;
+                    case PAID:
+                        navController.navigate(R.id.paidFragment);
+                        break;
+                    case CANCEL:
+                        navController.navigate(R.id.cancelledFragment);
+                        break;
+                    case ALL:
+                        navController.navigate(R.id.allFragment);
+                        break;
+                }
+
+
+                //ye waley api chat
+               /* LLtabbar.setVisibility(View.GONE);
 
                 productList.setTextColor(Color.BLACK);
                 productList.setBackgroundColor(Color.TRANSPARENT);
@@ -498,9 +550,9 @@
 
                 Lineartabbar.setBackground(getResources().getDrawable(R.drawable.bg_tab));
 
-             /*   addProduct.setImageDrawable(getResources().getDrawable(R.drawable.ic_search));
+             *//*   addProduct.setImageDrawable(getResources().getDrawable(R.drawable.ic_search));
                 setting.setImageDrawable(getResources().getDrawable(R.drawable.ic_menu));
-*/
+*//*
 
                 addProduct.setVisibility(View.GONE);
                 setting.setVisibility(View.GONE);
@@ -511,8 +563,8 @@
                     simpleSearchView.setIconified(true);
                 }
 
-              //  currentTab = CurrentTab.CHAT;
-                navController.navigate(R.id.chat);
+                //  currentTab = CurrentTab.CHAT;
+                navController.navigate(R.id.chat);*/
             }
         });
 
@@ -910,7 +962,29 @@
                     if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                         shopName.setTooltipText(shopNameAndImageResponse.getData().getRequestList().get(0).getShopName());
                     }
-                    Glide.with(ShopLandingActivity.this).load(shopNameAndImageResponse.getData().getRequestList().get(0).getShopProfile()).into(profileImage);
+
+
+                 /*   RequestOptions myOptions = new RequestOptions()
+                            .centerCrop();
+*/
+
+     /*               Glide.with(ShopLandingActivity.this)
+                            .load(shopNameAndImageResponse.getData().getRequestList().get(0).getShopProfile())
+                            .centerCrop()
+                            .into(profileImage);*/
+
+                    Glide.with(ShopLandingActivity.this)
+                            .load(shopNameAndImageResponse.getData().getRequestList().get(0).getShopProfile())
+                            .apply(RequestOptions.circleCropTransform())
+                            .into(profileImage);
+
+            /*        Glide.with(ShopLandingActivity.this).
+                            asBitmap()
+                            .circleCrop()
+                            .load(shopNameAndImageResponse.getData().getRequestList().get(0).getShopProfile()).placeholder(R.drawable.banner_img).
+                            into(profileImage);*/
+
+
                     // loadingDialog.dismissDialog();
                     // shopLandingPageViewModel.getShopNameAndImage().removeObservers(ShopLandingActivity.this);
                 }
@@ -944,8 +1018,8 @@
             @Override
             public void onChanged(TotalProductResponse totalProductResponse) {
                 if (totalProductResponse != null) {
-                    if (totalProductResponse.getData().getRequestList().getRequestList() != null) {
-                        totalProducts.setText(totalProductResponse.getData().getRequestList().getRequestList().get(0).getProductCount() + " " + "Products");
+                    if (totalProductResponse.getData().getRequestList() != null) {
+                        totalProducts.setText(totalProductResponse.getData().getRequestList().get(0).getProductCount() + " " + "Products");
                     }
                 }
             }
@@ -982,7 +1056,7 @@
         SubCategoryBYParentCatID subCategoryBYParentCatID = new SubCategoryBYParentCatID();
         subCategoryBYParentCatID.setParentCategoryId(id);
 
-        shopLandingPageViewModel.childCategoryByParentId(subCategoryBYParentCatID,ShopLandingActivity.this);
+        shopLandingPageViewModel.childCategoryByParentId(subCategoryBYParentCatID, ShopLandingActivity.this);
         shopLandingPageViewModel.getChildCategories().observe(this, new Observer<SubCategoryBYParentCatIDResponse>() {
             @Override
             public void onChanged(SubCategoryBYParentCatIDResponse subCategoryBYParentCatIDResponse) {
@@ -1267,5 +1341,38 @@
         number6.setText(String.valueOf(requestList.get(0).getAll()));
     }
 
+    private boolean checkAddProductValidation() {
+
+        if (TextUtils.isEmpty(et_ProductTitle.getText().toString())) {
+            Toast.makeText(ShopLandingActivity.this, "Product Title is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+
+        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString())) {
+            Toast.makeText(ShopLandingActivity.this, "Original Price is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+       /* if(TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ){
+            Toast.makeText(getActivity(), "Discounted Price is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+*/
+
+        if (TextUtils.isEmpty(et_SKU.getText().toString())) {
+            Toast.makeText(ShopLandingActivity.this, "Product Qty is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        if (TextUtils.isEmpty(et_Description.getText().toString())) {
+            Toast.makeText(ShopLandingActivity.this, "Description is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+
+        return true;
+    }
+
 
 }
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_client.homescreen;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\nimport android.widget.Toolbar;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\n\r\npublic class ClientHomeFragment extends Fragment {\r\n\r\n    com.google.android.material.tabs.TabLayout tabLayout;\r\n    NavController navController;\r\n    NavHostFragment navHostFragment;\r\n\r\n    public ClientHomeFragment() {\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_client, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        tabLayout = view.findViewById(R.id.tabLayout);\r\n\r\n        navHostFragment = (NavHostFragment) getChildFragmentManager().findFragmentById(R.id.nav_host_fragment);\r\n        navController = navHostFragment.getNavController();\r\n    //    navController.navigate(R.id.subCategoryFragment);\r\n\r\n      //  navController = Navigation.findNavController(view);\r\n\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Deals\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"HardDisk\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Laptop\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Gaming PC\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"ProBook\"));\r\n        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n\r\n        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                if(tab.getPosition() == 0){\r\n                    Toast.makeText(getActivity(), \"da\", Toast.LENGTH_SHORT).show();\r\n                  //  navController.navigate(R.id.nav_graph_client_sub_categories);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeFragment.java	(date 1627898974566)
@@ -47,9 +47,8 @@
 
         navHostFragment = (NavHostFragment) getChildFragmentManager().findFragmentById(R.id.nav_host_fragment);
         navController = navHostFragment.getNavController();
-    //    navController.navigate(R.id.subCategoryFragment);
 
-      //  navController = Navigation.findNavController(view);
+        Toast.makeText(getActivity(), "Coming From dadada", Toast.LENGTH_SHORT).show();
 
         tabLayout.addTab(tabLayout.newTab().setText("Deals"));
         tabLayout.addTab(tabLayout.newTab().setText("HardDisk"));
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_client.homescreen;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\n\r\npublic class ClientHomeActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    NavHostFragment navHostFragment;\r\n    DrawerLayout drawerLayout;\r\n    ActionBarDrawerToggle actionBarDrawerToggle;\r\n    androidx.appcompat.widget.Toolbar toolbar;\r\n    ImageView drawerOpenClose;\r\n    NavController navController;\r\n    NavigationView navigationView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_client_home);\r\n\r\n        navHostFragment = (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.nav_host_fragment);\r\n        navController = navHostFragment.getNavController();\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        drawerOpenClose = findViewById(R.id.drawerOpenClose);\r\n        navigationView = findViewById(R.id.nav_view);\r\n\r\n        if (navigationView != null) {\r\n            navigationView.setNavigationItemSelectedListener(this);\r\n        }\r\n\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(actionBarDrawerToggle);\r\n\r\n        drawerOpenClose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        if (item.getItemId() == R.id.computer) {\r\n            navController.navigate(R.id.clientHomeFragment);\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        } else if (item.getItemId() == R.id.computer) {\r\n\r\n        } else if (item.getItemId() == R.id.tv_smart_box) {\r\n\r\n        } else if (item.getItemId() == R.id.camera_photography) {\r\n\r\n        } else if (item.getItemId() == R.id.headphones) {\r\n\r\n        } else if (item.getItemId() == R.id.musical_instrument) {\r\n\r\n        } else if (item.getItemId() == R.id.smart_phone_and_tablets) {\r\n\r\n        } else if (item.getItemId() == R.id.accessories) {\r\n\r\n        } else if (item.getItemId() == R.id.home_audio_theatre) {\r\n\r\n        } else if (item.getItemId() == R.id.faxmachine) {\r\n\r\n        } else if (item.getItemId() == R.id.household_goods) {\r\n\r\n        } else if (item.getItemId() == R.id.watch) {\r\n\r\n        } else if (item.getItemId() == R.id.others) {\r\n\r\n        }\r\n        return true;\r\n    }\r\n}
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeActivity.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/homescreen/ClientHomeActivity.java	(date 1627898926517)
@@ -9,6 +9,7 @@
 import androidx.navigation.fragment.NavHostFragment;
 
 import android.os.Bundle;
+import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ImageView;
@@ -52,6 +53,12 @@
             }
         });
 
+        final Menu menu = navigationView.getMenu();
+        for (int i = 1; i <= 10; i++) {
+
+            menu.add(i, R.id.computer, 0, "sharjeel");
+
+        }
 
     }
 
Index: shoppingsdk/src/main/res/layout/rv_product_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/viewProductDetail\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"5dp\"\r\n    android:layout_weight=\"1\"\r\n    app:cardCornerRadius=\"20dp\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/LL1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"5dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/productTitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"left\"\r\n                android:layout_marginLeft=\"4dp\"\r\n\r\n                android:ellipsize=\"end\"\r\n                android:maxLines=\"1\"\r\n                android:text=\"Samsung Galaxy S8 specs\"\r\n                android:textColor=\"@android:color/black\"\r\n                android:textSize=\"12sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n\r\n            <FrameLayout\r\n                android:id=\"@+id/fl\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n\r\n                <androidx.cardview.widget.CardView\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"130dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    app:cardCornerRadius=\"8dp\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/productImage\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:background=\"@drawable/four_corner_rounded_image\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:src=\"@drawable/ic_bbq\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/discountLabel\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"left|top\"\r\n                        android:layout_marginStart=\"-2dp\"\r\n                        android:layout_marginTop=\"-0.5dp\"\r\n                        android:src=\"@drawable/ic_label\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/discount_percentage\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"-13%\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:textColor=\"@android:color/white\"\r\n                        android:textStyle=\"bold\"\r\n                        android:textSize=\"9.5sp\"\r\n                        android:layout_marginStart=\"7dp\"\r\n                        />\r\n\r\n\r\n                </androidx.cardview.widget.CardView>\r\n\r\n\r\n            </FrameLayout>\r\n\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/LL1\"\r\n                android:layout_marginTop=\"5dp\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/shareOne\"\r\n                    android:layout_width=\"22dp\"\r\n                    android:layout_height=\"22dp\"\r\n                    android:layout_alignParentStart=\"true\"\r\n                    android:padding=\"2dp\"\r\n                    android:src=\"@drawable/ic_share_two\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/shareProductLink\"\r\n                    android:layout_width=\"22dp\"\r\n                    android:layout_height=\"22dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:padding=\"2dp\"\r\n                    android:src=\"@drawable/ic_share_one\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/open_edit_details\"\r\n                    android:layout_width=\"22dp\"\r\n                    android:layout_height=\"22dp\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:padding=\"2dp\"\r\n                    android:src=\"@drawable/ic_edit_three\" />\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/ruppe\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentStart=\"true\"\r\n                    android:layout_marginStart=\"10dp\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"Rs.\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"12sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/discountedprice\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_toRightOf=\"@+id/ruppe\"\r\n                    android:ellipsize=\"end\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"780\"\r\n                    android:textColor=\"@android:color/darker_gray\"\r\n                    android:textSize=\"12sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/originalprice\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginEnd=\"10dp\"\r\n                    android:ellipsize=\"end\"\r\n                    android:maxLines=\"1\"\r\n                    android:shadowColor=\"#673AB7\"\r\n                    android:text=\"Rs. 900\"\r\n                    android:textColor=\"@android:color/darker_gray\"\r\n                    android:textSize=\"11sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/productcategory\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentStart=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginStart=\"10dp\"\r\n                    android:layout_toLeftOf=\"@+id/isActive\"\r\n                    android:ellipsize=\"end\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"sdsadas\"\r\n                    android:textAlignment=\"textStart\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"12sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Switch\r\n                    android:id=\"@+id/isActive\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"24dp\"\r\n                    android:layout_alignParentEnd=\"true\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <RatingBar\r\n                    android:id=\"@+id/ratingBar\"\r\n                    style=\"?android:attr/ratingBarStyleSmall\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"10dp\"\r\n                    android:numStars=\"5\"\r\n                    android:stepSize=\"1\"\r\n                    android:theme=\"@style/RatingBar\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/ratingNUmber\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginBottom=\"10dp\"\r\n                    android:layout_toRightOf=\"@+id/ratingBar\"\r\n                    android:text=\"(3.5)\"\r\n                    android:visibility=\"gone\" />\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
===================================================================
--- shoppingsdk/src/main/res/layout/rv_product_items.xml	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/res/layout/rv_product_items.xml	(date 1627881622718)
@@ -22,12 +22,13 @@
                 android:id="@+id/productTitle"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_gravity="left"
+                android:layout_gravity="center"
                 android:layout_marginLeft="4dp"
 
+                android:layout_marginTop="10dp"
                 android:ellipsize="end"
                 android:maxLines="1"
-                android:text="Samsung Galaxy S8 specs"
+                android:text="Samsung Galaxy S8 specs..."
                 android:textColor="@android:color/black"
                 android:textSize="12sp"
                 android:textStyle="bold" />
@@ -42,8 +43,8 @@
                 <androidx.cardview.widget.CardView
                     android:layout_width="match_parent"
                     android:layout_height="130dp"
-                    android:layout_marginTop="5dp"
-                    app:cardCornerRadius="8dp">
+                    android:layout_marginTop="10dp"
+                    app:cardCornerRadius="16dp">
 
                     <ImageView
                         android:id="@+id/productImage"
@@ -85,7 +86,7 @@
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_below="@+id/LL1"
-                android:layout_marginTop="5dp">
+                android:layout_marginTop="8dp">
 
                 <ImageView
                     android:id="@+id/shareOne"
@@ -173,7 +174,7 @@
                     android:layout_toLeftOf="@+id/isActive"
                     android:ellipsize="end"
                     android:maxLines="1"
-                    android:text="sdsadas"
+                    android:text="Unit"
                     android:textAlignment="textStart"
                     android:textColor="@android:color/black"
                     android:textSize="12sp"
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/WebViewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\nimport android.widget.Toolbar;\r\n\r\npublic class WebViewActivity extends AppCompatActivity {\r\n\r\n    WebView webView1;\r\n    ImageView back;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_web_view);\r\n        webView1 = findViewById(R.id.webView1);\r\n        Intent intent = getIntent();\r\n        String id = intent.getStringExtra(\"videoUrl\");\r\n        back = findViewById(R.id.back);\r\n       // Toast.makeText(this, \"\" + id, Toast.LENGTH_SHORT).show();\r\n       // webView1.loadUrl(id);\r\n      //  https://www.youtube.com/watch?v=xsU14eHgmBg&t=1s&ab_channel=Electrostore\r\n        String str = id;\r\n        //Toast.makeText(this, \"\" + str, Toast.LENGTH_SHORT).show();\r\n        String result = str.substring(str.indexOf(\"=\") + 1, str.indexOf(\"&\"));\r\n\r\n        String myYouTubeVideoUrl = \"https://www.youtube.com/embed/\"+result+\"?autoplay=1\";\r\n        //String myYouTubeVideoUrl = \"https://www.youtube.com/embed/bGkd90PIMcQ\";\r\n\r\n        String dataUrl =\r\n                \"<html>\" +\r\n                        \"<body>\" +\r\n                        \"<br>\" +\r\n                        \"<iframe width=\\\"100%\\\" height=\\\"100%\\\" src=\\\"\"+myYouTubeVideoUrl+\"\\\" frameborder=\\\"0\\\" allowfullscreen/>\" +\r\n                        \"</body>\" +\r\n                        \"</html>\";\r\n\r\n        WebSettings webSettings = webView1.getSettings();\r\n\r\n        webSettings.setJavaScriptEnabled(true);\r\n        webView1.getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);\r\n        webView1.getSettings().setLoadWithOverviewMode(true);\r\n        webView1.getSettings().setUseWideViewPort(true);\r\n        webView1.loadData(dataUrl, \"text/html\", \"utf-8\");\r\n\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n    }\r\n}
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/WebViewActivity.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/WebViewActivity.java	(date 1627886529858)
@@ -20,25 +20,25 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_web_view);
+
         webView1 = findViewById(R.id.webView1);
         Intent intent = getIntent();
         String id = intent.getStringExtra("videoUrl");
         back = findViewById(R.id.back);
-       // Toast.makeText(this, "" + id, Toast.LENGTH_SHORT).show();
-       // webView1.loadUrl(id);
-      //  https://www.youtube.com/watch?v=xsU14eHgmBg&t=1s&ab_channel=Electrostore
+
         String str = id;
-        //Toast.makeText(this, "" + str, Toast.LENGTH_SHORT).show();
-        String result = str.substring(str.indexOf("=") + 1, str.indexOf("&"));
 
-        String myYouTubeVideoUrl = "https://www.youtube.com/embed/"+result+"?autoplay=1";
-        //String myYouTubeVideoUrl = "https://www.youtube.com/embed/bGkd90PIMcQ";
+
+        //String result = str.substring(str.indexOf("=") + 1, str.indexOf("&"));
+        String result = str.substring(str.indexOf("=") + 1, 43);
+        //Toast.makeText(this, "" + str.indexOf("&"), Toast.LENGTH_SHORT).show();
+        String myYouTubeVideoUrl = "https://www.youtube.com/embed/" + result + "?autoplay=1";
 
         String dataUrl =
                 "<html>" +
                         "<body>" +
                         "<br>" +
-                        "<iframe width=\"100%\" height=\"100%\" src=\""+myYouTubeVideoUrl+"\" frameborder=\"0\" allowfullscreen/>" +
+                        "<iframe width=\"100%\" height=\"100%\" src=\"" + myYouTubeVideoUrl + "\" frameborder=\"0\" allowfullscreen/>" +
                         "</body>" +
                         "</html>";
 
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/pojos/responsebody/TotalProductResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\nimport java.util.List;\r\n\r\npublic class TotalProductResponse {\r\n\r\n    public class Data {\r\n\r\n        @SerializedName(\"requestList\")\r\n        @Expose\r\n        private RequestList requestList;\r\n\r\n        public RequestList getRequestList() {\r\n            return requestList;\r\n        }\r\n\r\n        public void setRequestList(RequestList requestList) {\r\n            this.requestList = requestList;\r\n        }\r\n\r\n    }\r\n\r\n\r\n        @SerializedName(\"status\")\r\n        @Expose\r\n        private String status;\r\n        @SerializedName(\"statusDetail\")\r\n        @Expose\r\n        private String statusDetail;\r\n        @SerializedName(\"profileId\")\r\n        @Expose\r\n        private Object profileId;\r\n        @SerializedName(\"oTP\")\r\n        @Expose\r\n        private Object oTP;\r\n        @SerializedName(\"data\")\r\n        @Expose\r\n        private Data data;\r\n\r\n        public String getStatus() {\r\n            return status;\r\n        }\r\n\r\n        public void setStatus(String status) {\r\n            this.status = status;\r\n        }\r\n\r\n        public String getStatusDetail() {\r\n            return statusDetail;\r\n        }\r\n\r\n        public void setStatusDetail(String statusDetail) {\r\n            this.statusDetail = statusDetail;\r\n        }\r\n\r\n        public Object getProfileId() {\r\n            return profileId;\r\n        }\r\n\r\n        public void setProfileId(Object profileId) {\r\n            this.profileId = profileId;\r\n        }\r\n\r\n        public Object getoTP() {\r\n            return oTP;\r\n        }\r\n\r\n        public void setoTP(Object oTP) {\r\n            this.oTP = oTP;\r\n        }\r\n\r\n        public Data getData() {\r\n            return data;\r\n        }\r\n\r\n        public void setData(Data data) {\r\n            this.data = data;\r\n        }\r\n\r\n\r\n\r\n    public class Request {\r\n\r\n        @SerializedName(\"productCount\")\r\n        @Expose\r\n        private Integer productCount;\r\n\r\n        public Integer getProductCount() {\r\n            return productCount;\r\n        }\r\n\r\n        public void setProductCount(Integer productCount) {\r\n            this.productCount = productCount;\r\n        }\r\n\r\n    }\r\n\r\n    public class RequestList {\r\n\r\n        @SerializedName(\"requestList\")\r\n        @Expose\r\n        private List<Request> requestList = null;\r\n\r\n        public List<Request> getRequestList() {\r\n            return requestList;\r\n        }\r\n\r\n        public void setRequestList(List<Request> requestList) {\r\n            this.requestList = requestList;\r\n        }\r\n\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/pojos/responsebody/TotalProductResponse.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/pojos/responsebody/TotalProductResponse.java	(date 1628494316208)
@@ -11,77 +11,76 @@
 
         @SerializedName("requestList")
         @Expose
-        private RequestList requestList;
+        private List<Request> requestList = null;
 
-        public RequestList getRequestList() {
+        public List<Request> getRequestList() {
             return requestList;
         }
 
-        public void setRequestList(RequestList requestList) {
+        public void setRequestList(List<Request> requestList) {
             this.requestList = requestList;
         }
 
     }
 
 
-        @SerializedName("status")
-        @Expose
-        private String status;
-        @SerializedName("statusDetail")
-        @Expose
-        private String statusDetail;
-        @SerializedName("profileId")
-        @Expose
-        private Object profileId;
-        @SerializedName("oTP")
-        @Expose
-        private Object oTP;
-        @SerializedName("data")
-        @Expose
-        private Data data;
+    @SerializedName("status")
+    @Expose
+    private String status;
+    @SerializedName("statusDetail")
+    @Expose
+    private String statusDetail;
+    @SerializedName("profileId")
+    @Expose
+    private Object profileId;
+    @SerializedName("oTP")
+    @Expose
+    private Object oTP;
+    @SerializedName("data")
+    @Expose
+    private Data data;
 
-        public String getStatus() {
-            return status;
-        }
+    public String getStatus() {
+        return status;
+    }
 
-        public void setStatus(String status) {
-            this.status = status;
-        }
+    public void setStatus(String status) {
+        this.status = status;
+    }
 
-        public String getStatusDetail() {
-            return statusDetail;
-        }
+    public String getStatusDetail() {
+        return statusDetail;
+    }
 
-        public void setStatusDetail(String statusDetail) {
-            this.statusDetail = statusDetail;
-        }
+    public void setStatusDetail(String statusDetail) {
+        this.statusDetail = statusDetail;
+    }
 
-        public Object getProfileId() {
-            return profileId;
-        }
+    public Object getProfileId() {
+        return profileId;
+    }
 
-        public void setProfileId(Object profileId) {
-            this.profileId = profileId;
-        }
+    public void setProfileId(Object profileId) {
+        this.profileId = profileId;
+    }
 
-        public Object getoTP() {
-            return oTP;
-        }
+    public Object getoTP() {
+        return oTP;
+    }
 
-        public void setoTP(Object oTP) {
-            this.oTP = oTP;
-        }
+    public void setoTP(Object oTP) {
+        this.oTP = oTP;
+    }
 
-        public Data getData() {
-            return data;
-        }
+    public Data getData() {
+        return data;
+    }
 
-        public void setData(Data data) {
-            this.data = data;
-        }
+    public void setData(Data data) {
+        this.data = data;
+    }
 
 
-
     public class Request {
 
         @SerializedName("productCount")
@@ -96,21 +95,5 @@
             this.productCount = productCount;
         }
 
-    }
-
-    public class RequestList {
-
-        @SerializedName("requestList")
-        @Expose
-        private List<Request> requestList = null;
-
-        public List<Request> getRequestList() {
-            return requestList;
-        }
-
-        public void setRequestList(List<Request> requestList) {
-            this.requestList = requestList;
-        }
-
     }
 }
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/all/AllFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.all;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.AllAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetAllOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class AllFragment extends Fragment implements AllAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_all_orders;\r\n    AllAdapter allAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    ShopLandingPageViewModel shopLandingPageViewModel;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_all_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        //this will update the order list all tabs status counts\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (getArguments() != null) {\r\n            // Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_all_orders = view.findViewById(R.id.recycler_all_orders);\r\n        initReceivedItems();\r\n\r\n    }\r\n\r\n    private void initReceivedItems() {\r\n\r\n        orderListViewModel.AllOrders(Constant.PROFILE_ID,getActivity());\r\n        orderListViewModel.getOrders().observe(getActivity(), new Observer<GetAllOrderResponse>() {\r\n            @Override\r\n            public void onChanged(GetAllOrderResponse getAllOrderResponse) {\r\n                if (getAllOrderResponse != null) {\r\n                    // Toast.makeText(getActivity(), \"\" + getAllOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                    allAdapter = new AllAdapter(getAllOrderResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_all_orders.setAdapter(allAdapter);\r\n\r\n                    if (getArguments() != null) {\r\n                        if (allAdapter != null) {\r\n                            allAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"All Adapter is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n                horizontalProgressBar.clearAnimation();\r\n                horizontalProgressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId, int orderStatus) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n\r\n        //Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n        LinearLayout productDetailLL, flash;\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_SellerAddress);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n        flash = dialog.findViewById(R.id.linear);\r\n        flash.setVisibility(View.GONE);\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n                // screenShot.setImageBitmap(bitmap);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap,flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(String.valueOf(orderStatus));\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder,getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                //  Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"1\")) {\r\n                        et_orderStatus.setText(\"Received\");\r\n                    } else if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"2\")) {\r\n                        et_orderStatus.setText(\"Accepted\");\r\n                    } else if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"3\")) {\r\n                        et_orderStatus.setText(\"Dispatched\");\r\n                    } else if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"4\")) {\r\n                        et_orderStatus.setText(\"Delivered\");\r\n                    } else if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"5\")) {\r\n                        et_orderStatus.setText(\"Paid\");\r\n                    } else if (viewFullOrderResponse.getData().getRequestList().getOrderStatus().equals(\"6\")) {\r\n                        et_orderStatus.setText(\"Cancel\");\r\n                    }\r\n\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAccountTitle());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code refresh gallery\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position) {\r\n        // Toast.makeText(getActivity(), \"position \" + position, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public AllAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/all/AllFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/all/AllFragment.java	(date 1628245265924)
@@ -48,6 +48,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -185,9 +186,11 @@
                 Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());
                 // screenShot.setImageBitmap(bitmap);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap,flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
             }
         });
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/paid/PaidFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.paid;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.AcceptedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.PaidAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.OrderByStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateOrderStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateRiderInfo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateOrderStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateRiderInfoResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class PaidFragment extends Fragment implements PaidAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_paid_orders;\r\n    PaidAdapter paidAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    ShopLandingPageViewModel shopLandingPageViewModel;\r\n    EditText etRiderName, etRiderNumber, etRiderTracking;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    Dialog dialogCongratulation;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_paid_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        //this will update the order list all tabs status counts\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (getArguments() != null) {\r\n            //     Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_paid_orders = view.findViewById(R.id.recycler_paid_orders);\r\n        initReceivedItems();\r\n    }\r\n\r\n    private void initReceivedItems() {\r\n\r\n        OrderByStatus orderByStatus = new OrderByStatus();\r\n        orderByStatus.setProfileId(Constant.PROFILE_ID);\r\n        orderByStatus.setStatus(\"5\"); //for received order list\r\n\r\n        orderListViewModel.orderByStatus(orderByStatus,getActivity());\r\n        orderListViewModel.getOrderByStatusResponse().observe(getActivity(), new Observer<GetOrderByStatusResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderByStatusResponse getOrderByStatusResponse) {\r\n                if (getOrderByStatusResponse != null) {\r\n                    paidAdapter = new PaidAdapter(getOrderByStatusResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_paid_orders.setAdapter(paidAdapter);\r\n\r\n                    if (getArguments() != null) {\r\n                        if (paidAdapter != null) {\r\n                            paidAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Accepted Adapter is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n                horizontalProgressBar.clearAnimation();\r\n                horizontalProgressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n        LinearLayout flash, productDetailLL;\r\n        // Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        //  dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_SellerAddress);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n\r\n        flash = dialog.findViewById(R.id.linear);\r\n        flash.setVisibility(View.GONE);\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n               // Toast.makeText(getActivity(), \"dsadadsadsa\", Toast.LENGTH_SHORT).show();\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap,flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(\"5\");\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder,getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                // Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_order.setText(viewFullOrderResponse.getData().getRequestList().getOrderNo());\r\n                    et_orderStatus.setText(\"Paid\");\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAccountTitle());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int orderId) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(orderId));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                //Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position, GetOrderByStatusResponse.Request request) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n        etRiderName.setText(request.getRiderName().toString());\r\n        etRiderNumber.setText(request.getRiderContact().toString());\r\n        etRiderTracking.setText(request.getOrderTrackingId().toString());\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(position));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                // Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnStatusChange(int status, int OrderID) {\r\n\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_order_status_confirmation);\r\n        dialogCongratulation.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialogCongratulation.show();\r\n\r\n        Button continue_status = dialogCongratulation.findViewById(R.id.continue_status);\r\n        Button cancel_status = dialogCongratulation.findViewById(R.id.cancel_status);\r\n        TextView dialogMessage = dialogCongratulation.findViewById(R.id.dialogMsg);\r\n        EditText editText = dialogCongratulation.findViewById(R.id.reasonForCancellation);\r\n        editText.setVisibility(View.VISIBLE);\r\n\r\n        if (status == 2) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Accept...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 3) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Dispatch...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 4) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Delover...\");\r\n            editText.setVisibility(View.GONE);\r\n        }\r\n\r\n        continue_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n                updateOrderStatus.setOrderId(String.valueOf(OrderID));\r\n                updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n                updateOrderStatus.setStatus(String.valueOf(status));\r\n                updateOrderStatus.setContent(TextUtils.isEmpty(editText.getText().toString()) ? \"\" : editText.getText().toString());\r\n\r\n\r\n                orderListViewModel.updateOrderStatus(updateOrderStatus,getActivity());\r\n                orderListViewModel.updateOrderStatusResponse().observe(getActivity(), new Observer<UpdateOrderStatusResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                        if (updateOrderStatusResponse != null) {\r\n                            Toast.makeText(getActivity(), \"Order Has been moved...\", Toast.LENGTH_SHORT).show();\r\n                            initReceivedItems();\r\n\r\n                            shopLandingPageViewModel.allStatusCount(getActivity());\r\n                            shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                @Override\r\n                                public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                    if (getOrderStatusCountResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                        ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        dialogCongratulation.dismiss();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancel_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public PaidAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n\r\n    //validation for rider info dialog box fields.\r\n    public boolean checkValidation() {\r\n        if (etRiderName.getText().toString() == null || TextUtils.isEmpty(etRiderName.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Name is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        /*if (etRiderNumber.getText().toString() == null || TextUtils.isEmpty(etRiderNumber.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Number is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (etRiderTracking.getText().toString() == null || TextUtils.isEmpty(etRiderTracking.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Tracking ID is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }*/\r\n\r\n        return true;\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/paid/PaidFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/paid/PaidFragment.java	(date 1628245265933)
@@ -56,6 +56,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -199,9 +200,11 @@
                 Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());
                // Toast.makeText(getActivity(), "dsadadsadsa", Toast.LENGTH_SHORT).show();
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap,flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
             }
         });
@@ -282,7 +285,7 @@
         dialog.show();
     }
 
-    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {
+  /*  private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {
         OutputStream fos;
 
         try {
@@ -351,7 +354,7 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-    }
+    }*/
 
     //screen shot whole receipt...
     private Bitmap getBitmapFromView(View view, int height, int width) {
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/received/ReceivedFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.received;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.StrictMode;\r\nimport android.print.PrintAttributes;\r\nimport android.print.PrintDocumentAdapter;\r\nimport android.print.PrintJob;\r\nimport android.print.PrintManager;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.AcceptedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.ReceivedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.OrderByStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateOrderStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateOrderStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class ReceivedFragment extends Fragment implements ReceivedAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_received_orders;\r\n    ReceivedAdapter receivedAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    ShopLandingPageViewModel shopLandingPageViewModel;\r\n    Dialog dialogCongratulation;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_received_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        //this will update the order list all tabs status counts\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (getArguments() != null) {\r\n            //  Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_received_orders = view.findViewById(R.id.recycler_received_orders);\r\n        initReceivedItems();\r\n\r\n    }\r\n\r\n    private void initReceivedItems() {\r\n\r\n        OrderByStatus orderByStatus = new OrderByStatus();\r\n        orderByStatus.setProfileId(Constant.PROFILE_ID);\r\n        orderByStatus.setStatus(\"1\"); //for received order list\r\n\r\n        orderListViewModel.orderByStatus(orderByStatus, getActivity());\r\n        orderListViewModel.getOrderByStatusResponse().observe(getActivity(), new Observer<GetOrderByStatusResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderByStatusResponse getOrderByStatusResponse) {\r\n                if (getOrderByStatusResponse != null) {\r\n                    receivedAdapter = new ReceivedAdapter(getOrderByStatusResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_received_orders.setAdapter(receivedAdapter);\r\n\r\n                    if (getArguments() != null) {\r\n                        if (receivedAdapter != null) {\r\n                            receivedAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Received Adapter is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        horizontalProgressBar.clearAnimation();\r\n                        horizontalProgressBar.setVisibility(View.GONE);\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n        LinearLayout flash, productDetailLL;\r\n        // Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        //dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        ImageView printer = dialog.findViewById(R.id.printer);\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_order);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        flash = dialog.findViewById(R.id.linear);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n                // screenShot.setImageBitmap(bitmap);\r\n                // captureScreenShot(bitmap, flash);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap, flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n            }\r\n        });\r\n\r\n        printer.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                doWebViewPrint();\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(\"1\");\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder, getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                //Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_order.setText(viewFullOrderResponse.getData().getRequestList().getOrderNo());\r\n                    et_orderStatus.setText(\"Received\");\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getLastName());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code refresh gallery\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position) {\r\n        //Toast.makeText(getActivity(), \"position \" + position, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onOrderUpdateListener(String status) {\r\n        Toast.makeText(getActivity(), \"\" + status, Toast.LENGTH_SHORT).show();\r\n\r\n        UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n        updateOrderStatus.setOrderId(\"1\");\r\n        updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n        updateOrderStatus.setStatus(status);\r\n\r\n        orderListViewModel.updateOrderStatus(updateOrderStatus, getActivity());\r\n        orderListViewModel.updateOrderStatusResponse().observe(getActivity(), new Observer<UpdateOrderStatusResponse>() {\r\n            @Override\r\n            public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                if (updateOrderStatusResponse != null) {\r\n                    Toast.makeText(getActivity(), \"\" + updateOrderStatus.getProfileId(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnStatusChange(int status, int OrderID) {\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_order_status_confirmation);\r\n        dialogCongratulation.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialogCongratulation.show();\r\n\r\n        Button continue_status = dialogCongratulation.findViewById(R.id.continue_status);\r\n        Button cancel_status = dialogCongratulation.findViewById(R.id.cancel_status);\r\n\r\n        continue_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n                updateOrderStatus.setOrderId(String.valueOf(OrderID));\r\n                updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n                updateOrderStatus.setStatus(String.valueOf(status));\r\n                updateOrderStatus.setContent(\"\");\r\n\r\n\r\n                orderListViewModel.updateOrderStatus(updateOrderStatus, getActivity());\r\n                orderListViewModel.updateOrderStatusResponse().observe(getActivity(), new Observer<UpdateOrderStatusResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                        if (updateOrderStatusResponse != null) {\r\n                            Toast.makeText(getActivity(), \"Order Has been moved...\", Toast.LENGTH_SHORT).show();\r\n                            initReceivedItems();\r\n\r\n                            shopLandingPageViewModel.allStatusCount(getActivity());\r\n                            shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                @Override\r\n                                public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                    if (getOrderStatusCountResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                        ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        dialogCongratulation.dismiss();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancel_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public ReceivedAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n\r\n    //wifi printing coding\r\n\r\n    private void doWebViewPrint() {\r\n\r\n        WebView webView = new WebView(getActivity());\r\n        webView.setWebViewClient(new WebViewClient() {\r\n\r\n            public boolean shouldOverrideUrlLoading(WebView view, String url) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public void onPageFinished(WebView view, String url) {\r\n                Log.i(\"TAG\", \"page finished loading \" + url);\r\n                createWebPrintJob(view);\r\n\r\n            }\r\n        });\r\n\r\n        webView.loadUrl(\"https://www.webfx.com/blog/images/assets/cdn.sixrevisions.com/0435-01_html5_download_attribute_demo/samp/htmldoc.html\");\r\n\r\n        //  mWebView = webView;\r\n    }\r\n\r\n    private void createWebPrintJob(WebView webView) {\r\n\r\n        // Get a PrintManager instance\r\n        PrintManager printManager = (PrintManager) getActivity().getSystemService(Context.PRINT_SERVICE);\r\n\r\n        String jobName = getString(R.string.app_name) + \" Document\";\r\n\r\n        // Get a print adapter instance\r\n        PrintDocumentAdapter printAdapter = webView.createPrintDocumentAdapter(jobName);\r\n\r\n        // Create a print job with name and adapter instance\r\n        PrintJob printJob = printManager.print(jobName, printAdapter,\r\n                new PrintAttributes.Builder().build());\r\n\r\n        // Save the job object for later status checking\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/received/ReceivedFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/received/ReceivedFragment.java	(date 1628245265928)
@@ -62,6 +62,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -207,9 +208,11 @@
                 // screenShot.setImageBitmap(bitmap);
                 // captureScreenShot(bitmap, flash);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap, flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
             }
         });
@@ -297,7 +300,7 @@
         dialog.show();
     }
 
-    private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {
+/*    private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {
         OutputStream fos;
 
         try {
@@ -367,7 +370,7 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-    }
+    }*/
 
     //screen shot whole receipt...
     private Bitmap getBitmapFromView(View view, int height, int width) {
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/cancelled/CancelledFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.cancelled;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.CancelledAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.OrderByStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateOrderStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateRiderInfo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateOrderStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateRiderInfoResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class CancelledFragment extends Fragment implements CancelledAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_cancelled_orders;\r\n    CancelledAdapter cancelledAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    private ShopLandingPageViewModel shopLandingPageViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    EditText etRiderName, etRiderNumber, etRiderTracking;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    Dialog dialogCongratulation;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_cancelled_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        //this will update the order list all tabs status counts\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n       /* if (getArguments() != null) {\r\n            Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n*/\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_cancelled_orders = view.findViewById(R.id.recycler_cancelled_orders);\r\n        initReceivedItems();\r\n\r\n    }\r\n\r\n\r\n    private void initReceivedItems() {\r\n\r\n\r\n        OrderByStatus orderByStatus = new OrderByStatus();\r\n        orderByStatus.setProfileId(Constant.PROFILE_ID);\r\n        orderByStatus.setStatus(\"6\"); //for received order list\r\n\r\n        orderListViewModel.orderByStatus(orderByStatus, getActivity());\r\n        orderListViewModel.getOrderByStatusResponse().observe(getActivity(), new Observer<GetOrderByStatusResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderByStatusResponse getOrderByStatusResponse) {\r\n                if (getOrderByStatusResponse != null) {\r\n                    //  Toast.makeText(getActivity(), \"\" + getOrderByStatusResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                    cancelledAdapter = new CancelledAdapter(getOrderByStatusResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_cancelled_orders.setAdapter(cancelledAdapter);\r\n\r\n                    if (getArguments() != null) {\r\n                        if (cancelledAdapter != null) {\r\n                            cancelledAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                            //  Toast.makeText(getActivity(), \" cancelled fragment  : \" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"cancelled fragment is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n                horizontalProgressBar.clearAnimation();\r\n                horizontalProgressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n        LinearLayout flash, productDetailLL;\r\n        //Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        //dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_SellerAddress);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n\r\n        flash = dialog.findViewById(R.id.linear);\r\n        flash.setVisibility(View.GONE);\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n                // screenShot.setImageBitmap(bitmap);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap, flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(\"6\");\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder, getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                // Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_order.setText(viewFullOrderResponse.getData().getRequestList().getOrderNo());\r\n                    et_orderStatus.setText(\"Cancelled\");\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAccountTitle());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int orderId) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (TextUtils.isEmpty(etRiderName.getText().toString()) &&\r\n                        TextUtils.isEmpty(etRiderNumber.getText().toString()) &&\r\n                        TextUtils.isEmpty(etRiderTracking.getText().toString())\r\n                ) {\r\n                    Toast.makeText(getActivity(), \"Some Fields are missing...\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(orderId));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo, getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                                shopLandingPageViewModel.allStatusCount(getActivity());\r\n                                shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                    @Override\r\n                                    public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                        if (getOrderStatusCountResponse != null) {\r\n                                            //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                            ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position, GetOrderByStatusResponse.Request request) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n        etRiderName.setText(request.getRiderName().toString());\r\n        etRiderNumber.setText(request.getRiderContact().toString());\r\n        etRiderTracking.setText(request.getOrderTrackingId().toString());\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(position));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo, getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                // Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnStatusChange(int status, int OrderID) {\r\n        //Toast.makeText(getActivity(), \"hello \" + status, Toast.LENGTH_SHORT).show();\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_order_status_confirmation);\r\n        dialogCongratulation.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialogCongratulation.show();\r\n\r\n        Button continue_status = dialogCongratulation.findViewById(R.id.continue_status);\r\n        Button cancel_status = dialogCongratulation.findViewById(R.id.cancel_status);\r\n        TextView dialogMessage = dialogCongratulation.findViewById(R.id.dialogMsg);\r\n        EditText editText = dialogCongratulation.findViewById(R.id.reasonForCancellation);\r\n        editText.setVisibility(View.VISIBLE);\r\n\r\n        if (status == 2) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Accept...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 3) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Dispatch...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 4) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Deliver...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 5) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Paid...\");\r\n            editText.setVisibility(View.GONE);\r\n        }\r\n\r\n        continue_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Toast.makeText(getActivity(), \"dsada\", Toast.LENGTH_SHORT).show();\r\n                UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n                updateOrderStatus.setOrderId(String.valueOf(OrderID));\r\n                updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n                updateOrderStatus.setStatus(String.valueOf(status));\r\n                updateOrderStatus.setContent(\"\");\r\n\r\n                orderListViewModel.updateOrderStatus(updateOrderStatus, getActivity());\r\n                orderListViewModel.updateOrderStatusResponse().observe(getActivity(), new Observer<UpdateOrderStatusResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                        if (updateOrderStatusResponse != null) {\r\n                            Toast.makeText(getActivity(), \"Order Has been moved...\", Toast.LENGTH_SHORT).show();\r\n                            initReceivedItems();\r\n                            shopLandingPageViewModel.allStatusCount(getActivity());\r\n                            shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                @Override\r\n                                public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                    if (getOrderStatusCountResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                        ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        dialogCongratulation.dismiss();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancel_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public CancelledAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n\r\n\r\n    //validation for rider info dialog box fields.\r\n    public boolean checkValidation() {\r\n        if (etRiderName.getText().toString() == null || TextUtils.isEmpty(etRiderName.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Name is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n       /* if (etRiderNumber.getText().toString() == null || TextUtils.isEmpty(etRiderNumber.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Number is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (etRiderTracking.getText().toString() == null || TextUtils.isEmpty(etRiderTracking.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Tracking ID is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }*/\r\n\r\n        return true;\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/cancelled/CancelledFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/cancelled/CancelledFragment.java	(date 1628245265920)
@@ -56,6 +56,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -204,9 +205,11 @@
                 Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());
                 // screenShot.setImageBitmap(bitmap);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap, flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
 
             }
@@ -299,7 +302,7 @@
         return bitmap;
     }
 
-    private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {
+ /*   private void CaptureScreenShot(Bitmap bitmap, LinearLayout flash) {
         OutputStream fos;
 
         try {
@@ -368,7 +371,7 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-    }
+    }*/
 
 
     @Override
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/delivered/DeliveredFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.delivered;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.AcceptedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.DeliveredAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.OrderByStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateOrderStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateRiderInfo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateOrderStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateRiderInfoResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class DeliveredFragment extends Fragment implements DeliveredAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_delivered_orders;\r\n    DeliveredAdapter deliveredAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    ShopLandingPageViewModel shopLandingPageViewModel;\r\n    EditText etRiderName, etRiderNumber, etRiderTracking;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    Dialog dialogCongratulation;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_delivered_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        //this will update the order list all tabs status counts\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (getArguments() != null) {\r\n            //  Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_delivered_orders = view.findViewById(R.id.recycler_delivered_orders);\r\n        initReceivedItems();\r\n\r\n    }\r\n\r\n    private void initReceivedItems() {\r\n        OrderByStatus orderByStatus = new OrderByStatus();\r\n        orderByStatus.setProfileId(Constant.PROFILE_ID);\r\n        orderByStatus.setStatus(\"4\"); //for received order list\r\n\r\n        orderListViewModel.orderByStatus(orderByStatus,getActivity());\r\n        orderListViewModel.getOrderByStatusResponse().observe(getActivity(), new Observer<GetOrderByStatusResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderByStatusResponse getOrderByStatusResponse) {\r\n                if (getOrderByStatusResponse != null) {\r\n                    deliveredAdapter = new DeliveredAdapter(getOrderByStatusResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_delivered_orders.setAdapter(deliveredAdapter);\r\n                    if (getArguments() != null) {\r\n                        if (deliveredAdapter != null) {\r\n                            deliveredAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Accepted Adapter is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n                horizontalProgressBar.clearAnimation();\r\n                horizontalProgressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n        LinearLayout flash, productDetailLL;\r\n        //  Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        //  dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_SellerAddress);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n        flash = dialog.findViewById(R.id.linear);\r\n        flash.setVisibility(View.GONE);\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n                // screenShot.setImageBitmap(bitmap);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap,flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(\"4\");\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder,getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                // Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_order.setText(viewFullOrderResponse.getData().getRequestList().getOrderNo());\r\n                    et_orderStatus.setText(\"Delivered\");\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAccountTitle());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code refresh gallery\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int orderId) {\r\n        //  Toast.makeText(getActivity(), \"position \" + position, Toast.LENGTH_SHORT).show();\r\n\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(orderId));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                //    Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                                shopLandingPageViewModel.allStatusCount(getActivity());\r\n                                shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                    @Override\r\n                                    public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                        if (getOrderStatusCountResponse != null) {\r\n                                            //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                            ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position, GetOrderByStatusResponse.Request request) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n        etRiderName.setText(request.getRiderName().toString());\r\n        etRiderNumber.setText(request.getRiderContact().toString());\r\n        etRiderTracking.setText(request.getOrderTrackingId().toString());\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(position));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                // Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnStatusChange(int status, int OrderID) {\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_order_status_confirmation);\r\n        dialogCongratulation.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialogCongratulation.show();\r\n\r\n        Button continue_status = dialogCongratulation.findViewById(R.id.continue_status);\r\n        Button cancel_status = dialogCongratulation.findViewById(R.id.cancel_status);\r\n        TextView dialogMessage = dialogCongratulation.findViewById(R.id.dialogMsg);\r\n        EditText editText = dialogCongratulation.findViewById(R.id.reasonForCancellation);\r\n        editText.setVisibility(View.VISIBLE);\r\n\r\n        if (status == 5) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Paid...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 2) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Accept...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if(status == 3 ) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Dispatch...\");\r\n            editText.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n\r\n\r\n        continue_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n                updateOrderStatus.setOrderId(String.valueOf(OrderID));\r\n                updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n                updateOrderStatus.setStatus(String.valueOf(status));\r\n                updateOrderStatus.setContent(TextUtils.isEmpty(editText.getText().toString()) ? \"\" : editText.getText().toString());\r\n\r\n\r\n                orderListViewModel.updateOrderStatus(updateOrderStatus,getActivity());\r\n                orderListViewModel.updateOrderStatusResponse().observe(getActivity(), new Observer<UpdateOrderStatusResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                        if (updateOrderStatusResponse != null) {\r\n                            Toast.makeText(getActivity(), \"Order Has been moved...\", Toast.LENGTH_SHORT).show();\r\n                            initReceivedItems();\r\n                            shopLandingPageViewModel.allStatusCount(getActivity());\r\n                            shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                @Override\r\n                                public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                    if (getOrderStatusCountResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                        ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        dialogCongratulation.dismiss();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancel_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public DeliveredAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n\r\n\r\n    //validation for rider info dialog box fields.\r\n    public boolean checkValidation() {\r\n        if (etRiderName.getText().toString() == null || TextUtils.isEmpty(etRiderName.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Name is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n    /*    if (etRiderNumber.getText().toString() == null || TextUtils.isEmpty(etRiderNumber.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Number is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (etRiderTracking.getText().toString() == null || TextUtils.isEmpty(etRiderTracking.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Tracking ID is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n*/\r\n        return true;\r\n    }\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/delivered/DeliveredFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/delivered/DeliveredFragment.java	(date 1628245265937)
@@ -56,6 +56,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -196,9 +197,11 @@
                 Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());
                 // screenShot.setImageBitmap(bitmap);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap,flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
             }
         });
@@ -276,7 +279,7 @@
         dialog.setCanceledOnTouchOutside(true);
         dialog.show();
     }
-
+/*
     private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {
         OutputStream fos;
 
@@ -347,7 +350,7 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-    }
+    }*/
 
     //screen shot whole receipt...
     private Bitmap getBitmapFromView(View view, int height, int width) {
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/dispatched/DispatchedFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.dispatched;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaScannerConnection;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.AcceptedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters.DispatchedAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.OrderByStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateOrderStatus;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateRiderInfo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ViewFullOrder;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderStatusCountResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateOrderStatusResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateRiderInfoResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ViewFullOrderResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.orderlist.OrderListViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class DispatchedFragment extends Fragment implements DispatchedAdapter.OnOrderClickListener {\r\n\r\n    RecyclerView recycler_dispatched_orders;\r\n    DispatchedAdapter dispatchedAdapter;\r\n    List<ReceivedItemPojo> receivedItemPojos;\r\n    OrderListViewModel orderListViewModel;\r\n    ImageView screenShot;\r\n    ScrollView scroller;\r\n    ShopLandingPageViewModel shopLandingPageViewModel;\r\n    EditText etRiderName, etRiderNumber, etRiderTracking;\r\n    Dialog dialogCongratulation;\r\n    public com.tilismtech.tellotalk_shopping_sdk.customviews.HorizontalDottedProgress horizontalProgressBar;\r\n    private int totalSumofAllOrderAmount = 0;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_dispatched_order_list, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        //this will update the order list all tabs status counts\r\n        horizontalProgressBar = view.findViewById(R.id.horizontalProgressBar);\r\n\r\n        shopLandingPageViewModel.allStatusCount(getActivity());\r\n        shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                if (getOrderStatusCountResponse != null) {\r\n                    //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                    ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (getArguments() != null) {\r\n            //   Toast.makeText(getActivity(), \"\" + getArguments().getString(\"query\"), Toast.LENGTH_SHORT).show();\r\n        }\r\n        orderListViewModel = new ViewModelProvider(this).get(OrderListViewModel.class);\r\n        recycler_dispatched_orders = view.findViewById(R.id.recycler_dispatched_orders);\r\n        initReceivedItems();\r\n    }\r\n\r\n\r\n    private void initReceivedItems() {\r\n\r\n        OrderByStatus orderByStatus = new OrderByStatus();\r\n        orderByStatus.setProfileId(Constant.PROFILE_ID);\r\n        orderByStatus.setStatus(\"3\"); //for dispatched order list\r\n\r\n        orderListViewModel.orderByStatus(orderByStatus,getActivity());\r\n        orderListViewModel.getOrderByStatusResponse().observe(getActivity(), new Observer<GetOrderByStatusResponse>() {\r\n            @Override\r\n            public void onChanged(GetOrderByStatusResponse getOrderByStatusResponse) {\r\n                if (getOrderByStatusResponse != null) {\r\n                    dispatchedAdapter = new DispatchedAdapter(getOrderByStatusResponse.getData().getRequestList(), getActivity(), getReference());\r\n                    recycler_dispatched_orders.setAdapter(dispatchedAdapter);\r\n\r\n                    if (getArguments() != null) {\r\n                        if (dispatchedAdapter != null) {\r\n                            dispatchedAdapter.getFilter().filter(getArguments().getString(\"query\"));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Dispatched Adapter is null ...\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    horizontalProgressBar.clearAnimation();\r\n                    horizontalProgressBar.setVisibility(View.GONE);\r\n                }\r\n                horizontalProgressBar.clearAnimation();\r\n                horizontalProgressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnViewFullOrderListener(int orderId) {\r\n        EditText et_order, et_orderStatus, et_orderDate, et_ProductName, et_ProductPrice, et_ProductDiscountedPrice, et_qty, et_payableAmount, et_SellerName, et_SellerMobileNumber, et_SellerAddress, et_SellerIBAN, et_BuyerName, et_BuyerMobile, et_BuyerAddress, et_BuyerIBAN;\r\n        LinearLayout flash, productDetailLL;\r\n        // Dialog dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        // dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_order_list);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        screenShot = dialog.findViewById(R.id.screenShot);\r\n        scroller = dialog.findViewById(R.id.scroller);\r\n        et_order = dialog.findViewById(R.id.et_order);\r\n        et_orderDate = dialog.findViewById(R.id.et_orderDate);\r\n        et_orderStatus = dialog.findViewById(R.id.et_orderStatus);\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductPrice = dialog.findViewById(R.id.et_ProductPrice);\r\n        et_ProductDiscountedPrice = dialog.findViewById(R.id.et_ProductDiscountedPrice);\r\n        et_qty = dialog.findViewById(R.id.et_qty);\r\n        et_payableAmount = dialog.findViewById(R.id.et_payableAmount);\r\n        et_SellerName = dialog.findViewById(R.id.et_SellerName);\r\n        et_SellerMobileNumber = dialog.findViewById(R.id.et_SellerMobileNumber);\r\n        et_SellerAddress = dialog.findViewById(R.id.et_SellerAddress);\r\n        et_SellerIBAN = dialog.findViewById(R.id.et_SellerIBAN);\r\n        et_BuyerName = dialog.findViewById(R.id.et_BuyerName);\r\n        et_BuyerMobile = dialog.findViewById(R.id.et_BuyerMobile);\r\n        et_BuyerAddress = dialog.findViewById(R.id.et_BuyerAddress);\r\n        et_BuyerIBAN = dialog.findViewById(R.id.et_BuyerIBAN);\r\n        productDetailLL = dialog.findViewById(R.id.productDetailLL);\r\n\r\n        flash = dialog.findViewById(R.id.linear);\r\n        flash.setVisibility(View.GONE);\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        screenShot.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());\r\n                // screenShot.setImageBitmap(bitmap);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n                    CaptureScreenShot(bitmap,flash);\r\n                } else {\r\n                    captureScreenShot(bitmap, flash);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        ViewFullOrder viewFullOrder = new ViewFullOrder();\r\n        viewFullOrder.setOrderId(String.valueOf(orderId));\r\n        viewFullOrder.setProfileId(Constant.PROFILE_ID);\r\n        viewFullOrder.setOrderStatus(\"3\");\r\n\r\n        orderListViewModel.viewFullOrder(viewFullOrder,getActivity());\r\n        orderListViewModel.getViewFullOrderResponse().observe(getActivity(), new Observer<ViewFullOrderResponse>() {\r\n            @Override\r\n            public void onChanged(ViewFullOrderResponse viewFullOrderResponse) {\r\n                // Toast.makeText(getActivity(), \"order : \" + viewFullOrderResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n\r\n                if (viewFullOrderResponse.getData().getRequestList() != null) {\r\n                    et_order.setText(viewFullOrderResponse.getData().getRequestList().getOrderNo());\r\n                    et_orderStatus.setText(\"Dispatched\");\r\n                    et_orderDate.setText(\" \" + viewFullOrderResponse.getData().getRequestList().getOrderDate());\r\n\r\n                    productDetailLL.removeAllViews();\r\n                    if (viewFullOrderResponse.getData().getRequestList().getProductsDetails() != null) {\r\n                        for (int i = 0; i < viewFullOrderResponse.getData().getRequestList().getProductsDetails().size(); i++) {\r\n                            //productDetailLL.addView();\r\n                            View inflater = getLayoutInflater().inflate(R.layout.product_detail, null);\r\n                            totalSumofAllOrderAmount += Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n\r\n                            EditText et_ProductName = inflater.findViewById(R.id.et_ProductName);\r\n                            EditText et_ProductPrice = inflater.findViewById(R.id.et_ProductPrice);\r\n                            EditText et_ProductDiscountedPrice = inflater.findViewById(R.id.et_ProductDiscountedPrice);\r\n                            EditText et_qty = inflater.findViewById(R.id.et_qty);\r\n                            EditText et_payableAmount = inflater.findViewById(R.id.et_payableAmount);\r\n\r\n\r\n                            et_ProductName.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getTitle());\r\n                            et_ProductPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getPrice());\r\n                            et_ProductDiscountedPrice.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount());\r\n                            et_qty.setText(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n\r\n                            //payabale amount = discount * qty of product\r\n                            int payableAmount = Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getDiscount()) * Integer.parseInt(viewFullOrderResponse.getData().getRequestList().getProductsDetails().get(i).getQuantity());\r\n                            et_payableAmount.setText(String.valueOf(payableAmount));\r\n                            productDetailLL.addView(inflater);\r\n                        }\r\n                        View inflater1 = getLayoutInflater().inflate(R.layout.product_total, null);\r\n                        TextView totalAmount = inflater1.findViewById(R.id.totalAmount);\r\n                        totalAmount.setText(String.valueOf(totalSumofAllOrderAmount));\r\n                        productDetailLL.addView(inflater1);\r\n                        totalSumofAllOrderAmount = 0;\r\n                    }\r\n\r\n\r\n                    et_SellerName.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAccountTitle());\r\n                    et_SellerMobileNumber.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getMobile());\r\n                    et_SellerAddress.setText(viewFullOrderResponse.getData().getRequestList().getSellerDetails().get(0).getAddress());\r\n                    et_SellerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                    et_BuyerName.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getFirstName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMiddleName() + \" \" + viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getLastName());\r\n                    et_BuyerMobile.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getMobile());\r\n                    et_BuyerAddress.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getCompleteAddress());\r\n                    et_BuyerIBAN.setText(viewFullOrderResponse.getData().getRequestList().getBuyerDetails().get(0).getAccountNumber());\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {\r\n        OutputStream fos;\r\n\r\n        try {\r\n            ContentResolver contentResolver = getActivity().getContentResolver();\r\n            ContentValues contentValues = new ContentValues();\r\n            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, \"IMAGE_\" + \".jpg\");\r\n            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\");\r\n            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + \"TelloShopping\");\r\n            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);\r\n\r\n            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\r\n            Objects.requireNonNull(fos);\r\n\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getActivity(), \"Some thing went wrong try again...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void captureScreenShot(Bitmap bitmap, LinearLayout flash) {\r\n        String root = Environment.getExternalStorageDirectory().toString();\r\n        File myDir = new File(root + \"/TelloShopping\");\r\n        myDir.mkdirs();\r\n        Random generator = new Random();\r\n        int n = 10000;\r\n        n = generator.nextInt(n);\r\n        String fname = \"Image-\" + n + \".jpg\";\r\n        File file = new File(myDir, fname);\r\n        Log.i(\"TAG\", \"\" + file);\r\n        if (file.exists())\r\n            file.delete();\r\n        try {\r\n            FileOutputStream out = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);\r\n            out.flush();\r\n            out.close();\r\n            Toast.makeText(getActivity(), \"Screen Shot Captured...\", Toast.LENGTH_SHORT).show();\r\n\r\n            flash.setVisibility(View.VISIBLE);\r\n            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);\r\n            animation1.setDuration(500);\r\n            //  animation1.setStartOffset(5000);\r\n            animation1.setFillAfter(true);\r\n            flash.startAnimation(animation1);\r\n\r\n            //this code refresh gallery\r\n            MediaScannerConnection.scanFile(getActivity(), new String[]{file.getPath()}, null,\r\n                    new MediaScannerConnection.OnScanCompletedListener() {\r\n                        @Override\r\n                        public void onScanCompleted(String path, Uri uri) {\r\n                            Log.i(\"TAG\", \"Scanned \" + path);\r\n                        }\r\n                    });\r\n\r\n            getActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //screen shot whole receipt...\r\n    private Bitmap getBitmapFromView(View view, int height, int width) {\r\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        Drawable bgDrawable = view.getBackground();\r\n        if (bgDrawable != null)\r\n            bgDrawable.draw(canvas);\r\n        else\r\n            canvas.drawColor(Color.WHITE);\r\n        view.draw(canvas);\r\n        return bitmap;\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int orderId) {\r\n        // Toast.makeText(getActivity(), \"position \" + position, Toast.LENGTH_SHORT).show();\r\n\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(orderId));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                // Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnRiderInfoUpdateListener(int position, GetOrderByStatusResponse.Request request) {\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_add_rider_info);\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n\r\n        etRiderName = dialog.findViewById(R.id.etRiderName);\r\n        etRiderNumber = dialog.findViewById(R.id.etRiderContact);\r\n        etRiderTracking = dialog.findViewById(R.id.etRiderTracking);\r\n\r\n        etRiderName.setText(request.getRiderName().toString());\r\n        etRiderNumber.setText(request.getRiderContact().toString());\r\n        etRiderTracking.setText(request.getOrderTrackingId().toString());\r\n\r\n        Button done = dialog.findViewById(R.id.confirmRiderbtn);\r\n        done.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (checkValidation()\r\n                ) {\r\n                    UpdateRiderInfo updateRiderInfo = new UpdateRiderInfo();\r\n                    updateRiderInfo.setRiderName(etRiderName.getText().toString());\r\n                    updateRiderInfo.setRiderContact(etRiderNumber.getText().toString());\r\n                    updateRiderInfo.setOrderTrackingId(etRiderTracking.getText().toString());\r\n                    updateRiderInfo.setOrderId(String.valueOf(position));\r\n                    updateRiderInfo.setProfileId(Constant.PROFILE_ID);\r\n\r\n                    orderListViewModel.updateRiderInfo(updateRiderInfo,getActivity());\r\n                    orderListViewModel.getupdateRiderInfoResponse().observe(getActivity(), new Observer<UpdateRiderInfoResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateRiderInfoResponse updateRiderInfoResponse) {\r\n                            if (updateRiderInfoResponse != null) {\r\n                                // Toast.makeText(getActivity(), \"\" + updateRiderInfoResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                                initReceivedItems();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnStatusChange(int status, int OrderID) {\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialogCongratulation.setContentView(R.layout.dialog_order_status_confirmation);\r\n        dialogCongratulation.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialogCongratulation.show();\r\n\r\n        Button continue_status = dialogCongratulation.findViewById(R.id.continue_status);\r\n        Button cancel_status = dialogCongratulation.findViewById(R.id.cancel_status);\r\n        TextView dialogMessage = dialogCongratulation.findViewById(R.id.dialogMsg);\r\n        EditText editText = dialogCongratulation.findViewById(R.id.reasonForCancellation);\r\n        editText.setVisibility(View.VISIBLE);\r\n\r\n        if (status == 4) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Deliver...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else if (status == 2) {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Accept...\");\r\n            editText.setVisibility(View.GONE);\r\n        } else {\r\n            dialogMessage.setText(\"After clicking on continue button the order status will be changed to Cancel...\");\r\n            editText.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        continue_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                UpdateOrderStatus updateOrderStatus = new UpdateOrderStatus();\r\n                updateOrderStatus.setOrderId(String.valueOf(OrderID));\r\n                updateOrderStatus.setProfileId(Constant.PROFILE_ID);\r\n                updateOrderStatus.setStatus(String.valueOf(status));\r\n                updateOrderStatus.setContent(TextUtils.isEmpty(editText.getText().toString()) ? \"\" : editText.getText().toString());\r\n\r\n                orderListViewModel.updateOrderStatus(updateOrderStatus,getActivity());\r\n                orderListViewModel.updateOrderStatusResponse().observe(getViewLifecycleOwner(), new Observer<UpdateOrderStatusResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateOrderStatusResponse updateOrderStatusResponse) {\r\n                        if (updateOrderStatusResponse != null) {\r\n                            Toast.makeText(getActivity(), \"Order Has been moved...\", Toast.LENGTH_SHORT).show();\r\n                            initReceivedItems();\r\n\r\n                            shopLandingPageViewModel.allStatusCount(getActivity());\r\n                            shopLandingPageViewModel.getAllStatusCount().observe(getActivity(), new Observer<GetOrderStatusCountResponse>() {\r\n                                @Override\r\n                                public void onChanged(GetOrderStatusCountResponse getOrderStatusCountResponse) {\r\n                                    if (getOrderStatusCountResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \":\" + getOrderStatusCountResponse.getData().getRequestList().get(0).getRecieved(), Toast.LENGTH_SHORT).show();\r\n                                        ((ShopLandingActivity) getActivity()).setOrderStatus(getOrderStatusCountResponse.getData().getRequestList());\r\n                                        dialogCongratulation.dismiss();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancel_status.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogCongratulation.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void OnSpinnerItem(int position, Spinner spinner) {\r\n\r\n    }\r\n\r\n    public DispatchedAdapter.OnOrderClickListener getReference() {\r\n        return this;\r\n    }\r\n\r\n    //validation for rider info dialog box fields.\r\n    public boolean checkValidation() {\r\n        if (etRiderName.getText().toString() == null || TextUtils.isEmpty(etRiderName.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Name is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n   /*     if (etRiderNumber.getText().toString() == null || TextUtils.isEmpty(etRiderNumber.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Rider Number is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (etRiderTracking.getText().toString() == null || TextUtils.isEmpty(etRiderTracking.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Tracking ID is Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }*/\r\n\r\n        return true;\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/dispatched/DispatchedFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/orderlist/dispatched/DispatchedFragment.java	(date 1628245265909)
@@ -57,6 +57,7 @@
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;
 import com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingPageViewModel;
 import com.tilismtech.tellotalk_shopping_sdk.utils.Constant;
+import com.tilismtech.tellotalk_shopping_sdk.utils.Utility;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -199,9 +200,11 @@
                 Bitmap bitmap = getBitmapFromView(scroller, scroller.getChildAt(0).getHeight(), scroller.getChildAt(0).getWidth());
                 // screenShot.setImageBitmap(bitmap);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-                    CaptureScreenShot(bitmap,flash);
+                    //CaptureScreenShot(bitmap, flash);
+                    Utility.CaptureScreenShot(bitmap, flash,getActivity());
                 } else {
-                    captureScreenShot(bitmap, flash);
+                    //captureScreenShot(bitmap, flash);
+                    Utility.captureScreenShot(bitmap,flash,getActivity());
                 }
             }
         });
@@ -281,7 +284,7 @@
         dialog.show();
     }
 
-    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {
+/*    private void CaptureScreenShot(Bitmap bitmap,LinearLayout flash) {
         OutputStream fos;
 
         try {
@@ -351,7 +354,7 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-    }
+    }*/
 
     //screen shot whole receipt...
     private Bitmap getBitmapFromView(View view, int height, int width) {
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.text.util.Linkify;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.tbuonomo.viewpagerdotsindicator.DotsIndicator;\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.TelloApplication;\r\nimport com.tilismtech.tellotalk_shopping_sdk.WebViewActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.ProductListAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.ViewPagerAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ChildCategory;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.AddNewProduct;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.DeleteProduct;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.DeleteProductImage;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.IsProductActive;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.IsProductActiveResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ProductForEdit;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ProductList;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.SubCategoryBYParentCatID;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateProduct;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.AddNewProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.DeleteProductImageResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.DeleteProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ParentCategoryListResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ProductForEditResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ProductListResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ShopNameAndImageResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.SubCategoryBYParentCatIDResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.TotalProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateProductResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.LoadingDialog;\r\n\r\nimport org.w3c.dom.Document;\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\nimport okhttp3.ResponseBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static com.tilismtech.tellotalk_shopping_sdk.api.RetrofitClient.getRetrofitClient;\r\n\r\n\r\npublic class ShopLandingFragment extends Fragment implements ProductListAdapter.OnProductEditorClickDialog {\r\n\r\n    private static final int ALLOW_MULTIPLE_IMAGES = 1;\r\n    private static final int ALLOW_MULTIPLE_IMAGES_EDIT = 2;\r\n    private ProductListAdapter.OnProductEditorClickDialog onProductEditorClickDialog;\r\n    private NavController navController;\r\n    private ImageView setting, open_edit_details, iv_back_addproduct, chooseMultipleProductsIV;\r\n    private Dialog dialog_edit_details, dialogCongratulation;\r\n    private LinearLayout outerRL;\r\n    public Button addProduct_btn, uploadProduct, post_product_btn;\r\n    private Dialog dialogAddProduct;\r\n    private LinearLayout productList;\r\n    private RecyclerView recycler_add_product;\r\n    private ProductListAdapter productListAdapter;\r\n    private LinearLayout LLimages, LLimages_edit;\r\n    private EditText productName, productCategory, originalPrice, discountedPrice, skucodeoptional, product_description;\r\n    private ShopLandingPageViewModel shopLandingPageViewModel, shopLandingPageViewModel1;\r\n    private Switch edit_switch;\r\n    private List<Uri> uriList;\r\n    private Switch isActiveproduct;\r\n    private String parentCategoryId = \"1\", childCategoryId = \"1\";\r\n    private Uri imageUri;\r\n    private String filepath;\r\n    private List<String> filePaths;\r\n    private TextView tv_deleteProduct, et_Category, et_SubCategory, et_YoutubeLink, et_productDescription;\r\n    private LoadingDialog loadingDialog;\r\n    private EditText et_OriginalPrice, et_DiscountedPrice, et_SKU, et_Description, et_ProductTitle;\r\n    private Spinner parentSpinner, childSpinner, parentSpinneredit, childSpinneredit;\r\n    private String parentCategory = \"1\", childCategory = \"1\", productStatus = \"N\"; //by default\r\n    private List<String> parentCategories, childCategories;\r\n    private List<ChildCategory> childCategoryList;\r\n    private Dialog dialog;\r\n    private String lastProductId = \"0\", parentCat_maintain, childCat_maintain; //maintain word is used for maintaining parent and child last selection whenever edit dialog is open...\r\n    private EditText et_VideoUrl;\r\n    private ProgressBar progressBar;\r\n    List<ProductListResponse.Request> productListAppend, dummy;\r\n    List<String> imageIds;\r\n    String video, document;\r\n    ArrayAdapter<String> spinnerArrayAdapter;\r\n    ArrayAdapter<String> spinnerArrayAdapter2;\r\n    private boolean isForEditMaintaince;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_shop_landing_page, container, false);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        navController = Navigation.findNavController(view);\r\n        productListAppend = new ArrayList<>();\r\n        dummy = new ArrayList<>();\r\n        imageIds = new ArrayList<>();\r\n        loadingDialog = new LoadingDialog(getActivity());\r\n        loadingDialog.dismissDialog();\r\n        productList = view.findViewById(R.id.productList);\r\n        recycler_add_product = view.findViewById(R.id.recycler_add_product);\r\n        shopLandingPageViewModel = new ViewModelProvider(this).get(ShopLandingPageViewModel.class);\r\n        addProduct_btn = view.findViewById(R.id.addProduct_btn);\r\n        setShopNameAndImage();\r\n        initRV(); // this recycler view set product list on screen\r\n        uriList = new ArrayList<>();\r\n        filePaths = new ArrayList<>();\r\n        dialogCongratulation = new Dialog(getActivity());\r\n        progressBar = view.findViewById(R.id.progressBar);\r\n\r\n        //this button show only first time when there is np product list\r\n        addProduct_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialogAddProduct = new Dialog(getActivity());\r\n                dialogAddProduct.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n                dialogAddProduct.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n                dialogAddProduct.setContentView(R.layout.dialog_add_product);\r\n\r\n                chooseMultipleProductsIV = dialogAddProduct.findViewById(R.id.chooseMultipleProductsIV);\r\n                LLimages = dialogAddProduct.findViewById(R.id.LLimages);\r\n                isActiveproduct = dialogAddProduct.findViewById(R.id.isActiveproduct);\r\n                isActiveproduct.setOnCheckedChangeListener(onCheckedChangeListener);\r\n\r\n                chooseMultipleProductsIV.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent intent = new Intent();\r\n                        intent.setType(\"image/*\");\r\n                        intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n                        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), ALLOW_MULTIPLE_IMAGES);\r\n                    }\r\n                });\r\n\r\n                et_OriginalPrice = dialogAddProduct.findViewById(R.id.et_OriginalPrice);\r\n                et_DiscountedPrice = dialogAddProduct.findViewById(R.id.et_DiscountedPrice);\r\n                et_SKU = dialogAddProduct.findViewById(R.id.et_SKU);\r\n                et_Description = dialogAddProduct.findViewById(R.id.et_Description);\r\n                et_ProductTitle = dialogAddProduct.findViewById(R.id.et_ProductTitle);\r\n                parentSpinner = dialogAddProduct.findViewById(R.id.parentSpinner);\r\n                childSpinner = dialogAddProduct.findViewById(R.id.childSpinner);\r\n                parentSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n                childSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n\r\n                et_VideoUrl = dialogAddProduct.findViewById(R.id.et_VideoUrl);\r\n                et_VideoUrl.setText(\"https://www.youtube.com/watch?v=xsU14eHgmBg&t=1s&ab_channel=Electrostore\");\r\n\r\n\r\n                uploadParentCategory(parentSpinner, childSpinner);\r\n\r\n                iv_back_addproduct = dialogAddProduct.findViewById(R.id.iv_back);\r\n                iv_back_addproduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        dialogAddProduct.dismiss();\r\n                    }\r\n                });\r\n\r\n                uploadProduct = dialogAddProduct.findViewById(R.id.uploadProduct);\r\n                uploadProduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        //Toast.makeText(ShopLandingActivity.this, \"clickedd...\", Toast.LENGTH_SHORT).show();\r\n\r\n                        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_Description.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_ProductTitle.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_SKU.getText().toString())\r\n                        ) {\r\n                            Toast.makeText(getActivity(), \"Some Fields are missing...\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n\r\n                            if (Integer.parseInt(et_DiscountedPrice.getText().toString()) > Integer.parseInt(et_OriginalPrice.getText().toString())) {\r\n                                Toast.makeText(getActivity(), \"Discounted price must be less than original price...\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            } else if (Integer.parseInt(et_DiscountedPrice.getText().toString()) == Integer.parseInt(et_OriginalPrice.getText().toString())) {\r\n                                Toast.makeText(getActivity(), \"Discounted price can not be same as original price...\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n\r\n\r\n                            AddNewProduct addNewProduct = new AddNewProduct();\r\n                            addNewProduct.setDiscount_Price(et_DiscountedPrice.getText().toString());\r\n                            addNewProduct.setPrice(et_OriginalPrice.getText().toString());\r\n                            addNewProduct.setProduct_Category_id(parentCategory); //parentCategory\r\n                            addNewProduct.setSub_Product_Category_id(childCategory); //childCategory\r\n                            addNewProduct.setSku(et_SKU.getText().toString());\r\n                            addNewProduct.setSummary(et_Description.getText().toString());\r\n                            addNewProduct.setProfileId(Constant.PROFILE_ID);\r\n                            addNewProduct.setProductStatus(productStatus); //work with toggle on and off\r\n                            addNewProduct.setProduct_Pic(filePaths); //here we send a picture path from device...\r\n                            addNewProduct.setTitle(et_ProductTitle.getText().toString());\r\n                            addNewProduct.setVideoName(et_VideoUrl.getText().toString());\r\n                            Linkify.addLinks(et_VideoUrl, Linkify.ALL);\r\n\r\n                            LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n                            loadingDialog.showDialog();\r\n                            shopLandingPageViewModel.addNewProduct(addNewProduct, getActivity());\r\n                            // shopLandingPageViewModel.getNewProduct().removeObservers(getActivity());\r\n                            shopLandingPageViewModel.getNewProduct().observe(getActivity(), new Observer<AddNewProductResponse>() {\r\n                                @Override\r\n                                public void onChanged(AddNewProductResponse addNewProductResponse) {\r\n                                    // shopLandingPageViewModel.getNewProduct().removeObservers(getActivity());\r\n                                    if (addNewProductResponse != null) {\r\n                                        //Toast.makeText(ShopLandingActivity.this, \" : \" + addNewProductResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                        try {\r\n                                            Thread.sleep(2000);\r\n                                        } catch (InterruptedException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        filePaths.clear();\r\n                                        loadingDialog.dismissDialog();\r\n                                        dialogAddProduct.dismiss();\r\n                                        shopLandingPageViewModel.shopTotalProducts(getActivity());\r\n                                        // ShopLandingActivity shopLandingActivity = new ShopLandingActivity();\r\n                                        // shopLandingActivity.setTotalProductOnActionBar();\r\n                                        navController.navigate(R.id.action_shopLandingFragment_to_shopLandingFragment2);\r\n\r\n                                    } else {\r\n                                        loadingDialog.dismissDialog();\r\n                                        Toast.makeText(getActivity(), \"Some thing went wrong...\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                    loadingDialog.dismissDialog();\r\n                                }\r\n                            });\r\n\r\n                            // navController.navigate(R.id.shopLandingFragment);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                Window window = dialogAddProduct.getWindow();\r\n                WindowManager.LayoutParams wlp = window.getAttributes();\r\n                window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n\r\n                window.setAttributes(wlp);\r\n                dialogAddProduct.show();\r\n         /*       dialogAddProduct = new Dialog(getActivity());\r\n                dialogAddProduct.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n                dialogAddProduct.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n                dialogAddProduct.setContentView(R.layout.dialog_add_product);\r\n\r\n                chooseMultipleProductsIV = dialogAddProduct.findViewById(R.id.chooseMultipleProductsIV);\r\n                LLimages = dialogAddProduct.findViewById(R.id.LLimages);\r\n                isActiveproduct = dialogAddProduct.findViewById(R.id.isActiveproduct);\r\n\r\n\r\n                chooseMultipleProductsIV.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent intent = new Intent();\r\n                        intent.setType(\"image/*\");\r\n                        intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n                        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), ALLOW_MULTIPLE_IMAGES);\r\n                    }\r\n                });\r\n\r\n                et_OriginalPrice = dialogAddProduct.findViewById(R.id.et_OriginalPrice);\r\n                et_DiscountedPrice = dialogAddProduct.findViewById(R.id.et_DiscountedPrice);\r\n                et_SKU = dialogAddProduct.findViewById(R.id.et_SKU);\r\n                et_Description = dialogAddProduct.findViewById(R.id.et_Description);\r\n                et_ProductTitle = dialogAddProduct.findViewById(R.id.et_ProductTitle);\r\n\r\n                parentSpinner = dialogAddProduct.findViewById(R.id.parentSpinner);\r\n                childSpinner = dialogAddProduct.findViewById(R.id.childSpinner);\r\n                parentSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n                childSpinner.setOnItemSelectedListener(onItemSelectedListener);\r\n\r\n                uploadParentCategory(parentSpinner, childSpinner);\r\n                //    uploadChildCategory(\"1\", childSpinner);\r\n\r\n\r\n                iv_back_addproduct = dialogAddProduct.findViewById(R.id.iv_back);\r\n                iv_back_addproduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        dialogAddProduct.dismiss();\r\n                    }\r\n                });\r\n\r\n                uploadProduct = dialogAddProduct.findViewById(R.id.uploadProduct);\r\n                uploadProduct.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n\r\n                        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_Description.getText().toString()) ||\r\n                                TextUtils.isEmpty(et_ProductTitle.getText().toString()) ||\r\n                                TextUtils.isEmpty(imageUri.toString())\r\n                        ) {\r\n                            Toast.makeText(getActivity(), \"Some Fields are missing...\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            AddNewProduct addNewProduct = new AddNewProduct();\r\n                            addNewProduct.setDiscount_Price(et_DiscountedPrice.getText().toString());\r\n                            addNewProduct.setPrice(et_OriginalPrice.getText().toString());\r\n                            addNewProduct.setProduct_Category_id(parentCategory); //parentCategory\r\n                            addNewProduct.setSub_Product_Category_id(childCategory); //childCategory\r\n                            addNewProduct.setSku(et_SKU.getText().toString());\r\n                            addNewProduct.setSummary(et_Description.getText().toString());\r\n                            addNewProduct.setProfileId(Constant.PROFILE_ID);\r\n                            addNewProduct.setProductStatus(productStatus); //work with toggle on and off\r\n                            addNewProduct.setProduct_Pic(filePaths); //here we send a picture path from device...\r\n                            addNewProduct.setTitle(et_ProductTitle.getText().toString());\r\n\r\n                            LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n                            loadingDialog.showDialog();\r\n                            shopLandingPageViewModel.addNewProduct(addNewProduct);\r\n                            shopLandingPageViewModel.getNewProduct().observe(getActivity(), new Observer<AddNewProductResponse>() {\r\n                                @Override\r\n                                public void onChanged(AddNewProductResponse addNewProductResponse) {\r\n                                    if (addNewProductResponse != null) {\r\n                                        // Toast.makeText(getActivity(), \" : \" + addNewProductResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                        filePaths.clear();\r\n                                        dialogAddProduct.dismiss();\r\n                                        filePaths.clear();\r\n                                        loadingDialog.dismissDialog();\r\n                                        dialogAddProduct.dismiss();\r\n                                        ((ShopLandingActivity) getActivity()).setTotalProductOnActionBar();\r\n                                        navController.navigate(R.id.shopLandingFragment);\r\n                                    } else {\r\n                                        Toast.makeText(getActivity(), \"Null...\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n                Window window = dialogAddProduct.getWindow();\r\n                WindowManager.LayoutParams wlp = window.getAttributes();\r\n                window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                window.setAttributes(wlp);\r\n                dialogAddProduct.show();*/\r\n            }\r\n        });\r\n\r\n        //append recycler view on scroll via pagination...\r\n        recycler_add_product.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {\r\n                    // Toast.makeText(getActivity(), \"end of recycler ...\", Toast.LENGTH_SHORT).show();\r\n                    //initRV();\r\n                    progressBar.setVisibility(View.GONE);\r\n                    updateRecyclerView();\r\n                }\r\n            }\r\n        });\r\n\r\n       /* Intent intent = getActivity().getIntent();\r\n        boolean congrats = intent.getBooleanExtra(\"congrats_dialog_to_show\", false);\r\n      */\r\n\r\n        if (TelloPreferenceManager.getInstance(getActivity()).getcongratsStatus() == false) {\r\n            dialogCongratulation.dismiss();\r\n        } else {\r\n\r\n            dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n            dialogCongratulation.setContentView(R.layout.dialog_congratulation);\r\n            dialogCongratulation.show();\r\n\r\n            ImageView iv_close = dialogCongratulation.findViewById(R.id.iv_close);\r\n            Button getStarted_btn = dialogCongratulation.findViewById(R.id.getStarted_btn);\r\n\r\n            iv_close.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    dialogCongratulation.dismiss();\r\n                }\r\n            });\r\n\r\n            getStarted_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    dialogCongratulation.dismiss();\r\n                }\r\n            });\r\n\r\n            TelloPreferenceManager.getInstance(getActivity()).savecongratsStatus(false);\r\n            loadingDialog.dismissDialog();\r\n        }\r\n\r\n    }\r\n\r\n    private void setShopNameAndImage() {\r\n        shopLandingPageViewModel.shopImageAndName(getActivity());\r\n        shopLandingPageViewModel.getShopNameAndImage().observe(getActivity(), new Observer<ShopNameAndImageResponse>() {\r\n            @Override\r\n            public void onChanged(ShopNameAndImageResponse shopNameAndImageResponse) {\r\n                if (shopNameAndImageResponse != null) {\r\n                    //  Toast.makeText(getActivity(), shopNameAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateRecyclerView() {\r\n        ProductList productList = new ProductList();\r\n        productList.setProfileId(Constant.PROFILE_ID);\r\n        getRetrofitClient().getProductList(\"Bearer \" + TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getAccessToken(), productList.getProfileId(), lastProductId).enqueue(new Callback<ProductListResponse>() {\r\n            @Override\r\n            public void onResponse(Call<ProductListResponse> call, Response<ProductListResponse> response) {\r\n                if (response != null) {\r\n                    if (response.body() != null) {\r\n                        ProductListResponse productListResponse = response.body();\r\n                        addProduct_btn.setVisibility(View.GONE);\r\n                        if (productListResponse.getData().getRequestList() != null) {\r\n                            productListAppend.addAll(productListResponse.getData().getRequestList());\r\n                            productListAdapter.notifyDataSetChanged();\r\n                            lastProductId = String.valueOf(productListResponse.getData().getRequestList().get(productListResponse.getData().getRequestList().size() - 1).getProductId());\r\n                            progressBar.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ProductListResponse> call, Throwable t) {\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initRV() {\r\n        ProductList productList = new ProductList();\r\n        productList.setProfileId(Constant.PROFILE_ID);\r\n        LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n\r\n        shopLandingPageViewModel.productList(productList, lastProductId, getActivity()); //initially first set of product will be fecthed\r\n        shopLandingPageViewModel.getProductList().observe(getViewLifecycleOwner(), new Observer<ProductListResponse>() {\r\n            @Override\r\n            public void onChanged(ProductListResponse productListResponse) {\r\n                if (productListResponse != null) {\r\n                    if (productListResponse.getData().getRequestList() != null) {\r\n\r\n                        addProduct_btn.setVisibility(View.GONE);\r\n                        productListAppend.addAll(productListResponse.getData().getRequestList());\r\n                        productListAdapter = new ProductListAdapter(productListAppend, getActivity(), getReference());\r\n                        GridLayoutManager gridLayoutManager = new GridLayoutManager(getActivity(), 2, LinearLayoutManager.VERTICAL, false);\r\n                        recycler_add_product.setLayoutManager(gridLayoutManager); // set LayoutManager to RecyclerView\r\n                        recycler_add_product.setAdapter(productListAdapter);\r\n                        productListAdapter.notifyDataSetChanged();\r\n                        lastProductId = String.valueOf(productListResponse.getData().getRequestList().get(productListResponse.getData().getRequestList().size() - 1).getProductId());\r\n                        loadingDialog.dismissDialog();\r\n                        shopLandingPageViewModel.getProductList().removeObservers(getActivity());\r\n\r\n                    } else {\r\n\r\n\r\n                           /* dialogCongratulation = new Dialog(getActivity());\r\n                            dialogCongratulation.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n                            dialogCongratulation.setContentView(R.layout.dialog_congratulation);\r\n                            dialogCongratulation.show();\r\n\r\n                            ImageView iv_close = dialogCongratulation.findViewById(R.id.iv_close);\r\n                            Button getStarted_btn = dialogCongratulation.findViewById(R.id.getStarted_btn);\r\n\r\n                            iv_close.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View v) {\r\n                                    dialogCongratulation.dismiss();\r\n                                }\r\n                            });\r\n\r\n                            getStarted_btn.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View v) {\r\n                                    dialogCongratulation.dismiss();\r\n                                }\r\n                            });\r\n\r\n                            loadingDialog.dismissDialog();*/\r\n                        loadingDialog.dismissDialog();\r\n                        addProduct_btn.setVisibility(View.VISIBLE);\r\n\r\n                    }\r\n                }\r\n                loadingDialog.dismissDialog();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void uploadParentCategory(Spinner parentSpinner, Spinner childSpinner) {\r\n        shopLandingPageViewModel.parentCategories(getActivity());\r\n        shopLandingPageViewModel.getParentCategoryListResponseLiveData().observe(getActivity(), new Observer<ParentCategoryListResponse>() {\r\n            @Override\r\n            public void onChanged(ParentCategoryListResponse parentCategoryListResponse) {\r\n                if (parentCategoryListResponse != null) {\r\n                    //populate spinner here...\r\n                    parentCategories = new ArrayList<>();\r\n\r\n                    for (int i = 0; i < parentCategoryListResponse.getData().getRequestList().size(); i++) {\r\n                        parentCategories.add(parentCategoryListResponse.getData().getRequestList().get(i).getTitle());\r\n                    }\r\n\r\n                    spinnerArrayAdapter = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, parentCategories);\r\n                    spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                    parentSpinner.setAdapter(spinnerArrayAdapter);\r\n//                    parentSpinneredit.setAdapter(spinnerArrayAdapter);\r\n\r\n                    // Toast.makeText(ShopLandingActivity.this, \"product is : \" +  parentCategoryListResponse.getData().getRequestList().get(0).getColumn1(), Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Null\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void uploadParentCategory(Spinner parentSpinner, Spinner childSpinner, String parentName, String childName) {\r\n        shopLandingPageViewModel.parentCategories(getActivity());\r\n        shopLandingPageViewModel.getParentCategoryListResponseLiveData().observe(getActivity(), new Observer<ParentCategoryListResponse>() {\r\n            @Override\r\n            public void onChanged(ParentCategoryListResponse parentCategoryListResponse) {\r\n                if (parentCategoryListResponse != null) {\r\n                    //populate spinner here...\r\n                    parentCategories = new ArrayList<>();\r\n\r\n                    for (int i = 0; i < parentCategoryListResponse.getData().getRequestList().size(); i++) {\r\n                        parentCategories.add(parentCategoryListResponse.getData().getRequestList().get(i).getTitle());\r\n                    }\r\n\r\n                    spinnerArrayAdapter = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, parentCategories);\r\n                    spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                    parentSpinner.setAdapter(spinnerArrayAdapter);\r\n//                    parentSpinneredit.setAdapter(spinnerArrayAdapter);\r\n\r\n                    int parent_Spinner = spinnerArrayAdapter.getPosition(parentName);\r\n                    parentSpinneredit.setSelection(parent_Spinner);\r\n\r\n                         /*\r\n\r\n\r\n                            int child_Spinner = spinnerArrayAdapter2.getPosition(childCat_maintain);\r\n                            childSpinneredit.setSelection(child_Spinner);*/\r\n\r\n                    // Toast.makeText(ShopLandingActivity.this, \"product is : \" +  parentCategoryListResponse.getData().getRequestList().get(0).getColumn1(), Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Null\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void uploadChildCategory(String id, Spinner childSpinner, boolean isForEdit) {\r\n        SubCategoryBYParentCatID subCategoryBYParentCatID = new SubCategoryBYParentCatID();\r\n        subCategoryBYParentCatID.setParentCategoryId(id);\r\n\r\n        shopLandingPageViewModel.childCategoryByParentId(subCategoryBYParentCatID, getActivity());\r\n        shopLandingPageViewModel.getChildCategories().observe(this, new Observer<SubCategoryBYParentCatIDResponse>() {\r\n            @Override\r\n            public void onChanged(SubCategoryBYParentCatIDResponse subCategoryBYParentCatIDResponse) {\r\n                if (subCategoryBYParentCatIDResponse != null) {\r\n                    childCategories = new ArrayList<>();\r\n                    childCategoryList = new ArrayList<>();\r\n\r\n                    //  Toast.makeText(ShopLandingActivity.this, \"status : \" + subCategoryBYParentCatIDResponse.getData().getRequestList().size(), Toast.LENGTH_SHORT).show();\r\n                    childCategoryList.clear();\r\n                    if (subCategoryBYParentCatIDResponse.getData().getRequestList() != null && subCategoryBYParentCatIDResponse.getData().getRequestList().size() > 0) {\r\n\r\n                        for (int i = 0; i < subCategoryBYParentCatIDResponse.getData().getRequestList().size(); i++) {\r\n                            childCategoryList.add(new ChildCategory(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getId(), subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle()));\r\n                            childCategories.add(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle());\r\n                        }\r\n\r\n                        spinnerArrayAdapter2 = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, childCategories);\r\n                        spinnerArrayAdapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                        if (isForEdit) { // load child categories when edit dialog open\r\n                            childSpinneredit.setAdapter(spinnerArrayAdapter2);\r\n                        } else {   // load child category when add new product diualog is open\r\n                            childSpinner.setAdapter(spinnerArrayAdapter2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void uploadChildCategory(String id, Spinner childSpinneredit, boolean isForEdit, String childName) {\r\n        SubCategoryBYParentCatID subCategoryBYParentCatID = new SubCategoryBYParentCatID();\r\n        subCategoryBYParentCatID.setParentCategoryId(id);\r\n\r\n        shopLandingPageViewModel.childCategoryByParentId(subCategoryBYParentCatID, getActivity());\r\n        shopLandingPageViewModel.getChildCategories().observe(getViewLifecycleOwner(), new Observer<SubCategoryBYParentCatIDResponse>() {\r\n            @Override\r\n            public void onChanged(SubCategoryBYParentCatIDResponse subCategoryBYParentCatIDResponse) {\r\n                if (subCategoryBYParentCatIDResponse != null) {\r\n                    childCategories = new ArrayList<>();\r\n                    childCategoryList = new ArrayList<>();\r\n\r\n                    //  Toast.makeText(ShopLandingActivity.this, \"status : \" + subCategoryBYParentCatIDResponse.getData().getRequestList().size(), Toast.LENGTH_SHORT).show();\r\n                    childCategoryList.clear();\r\n                    if (subCategoryBYParentCatIDResponse.getData().getRequestList() != null && subCategoryBYParentCatIDResponse.getData().getRequestList().size() > 0) {\r\n\r\n                        for (int i = 0; i < subCategoryBYParentCatIDResponse.getData().getRequestList().size(); i++) {\r\n                            childCategoryList.add(new ChildCategory(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getId(), subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle()));\r\n                            childCategories.add(subCategoryBYParentCatIDResponse.getData().getRequestList().get(i).getTitle());\r\n                        }\r\n\r\n                        spinnerArrayAdapter2 = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, childCategories);\r\n                        spinnerArrayAdapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n                        childSpinneredit.setAdapter(spinnerArrayAdapter2);\r\n                        int parent_Spinner = spinnerArrayAdapter2.getPosition(childName);\r\n                        childSpinneredit.setSelection(parent_Spinner);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        //FOR ADD PRODUCT DIALOG this will run on a Add Product button when there is No product in shop\r\n        if (requestCode == ALLOW_MULTIPLE_IMAGES && resultCode == RESULT_OK) {\r\n            if (data.getClipData() != null) {\r\n                ImageView iv;\r\n                int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                for (int i = 0; i < count; i++) {\r\n                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                    iv = inflater.findViewById(R.id.iv);\r\n                    imageUri = data.getClipData().getItemAt(i).getUri();\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                    filepath = getImagePath(imageUri);\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                    filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                    iv.setImageURI(imageUri);\r\n                    LLimages.addView(inflater);\r\n                }\r\n\r\n                // filepath = getPath(ShopLandingActivity.this, imageUri);\r\n                // filepath = getFileNameByUri(ShopLandingActivity.this, imageUri);\r\n                // filepath = getRealPathFromURI(ShopLandingActivity.this, imageUri);\r\n                //do something with the image (save it to some directory or whatever you need to do with it here)\r\n            } else if (data.getData() != null) {\r\n                String imagePath = data.getData().getPath();\r\n                imageUri = data.getData();\r\n                View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                ImageView iv = inflater.findViewById(R.id.iv);\r\n                filepath = getImagePath(imageUri);\r\n                filePaths.add(filepath);\r\n                iv.setImageURI(imageUri);\r\n                LLimages.addView(inflater);\r\n            }\r\n        }\r\n\r\n        //FOR EDIT PRODUCT DIALOG\r\n\r\n        if (requestCode == ALLOW_MULTIPLE_IMAGES_EDIT && resultCode == RESULT_OK) {\r\n            //===\r\n            if (data.getClipData() != null) {\r\n                if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                    int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                    for (int i = 0; i < count; i++) {\r\n                        LayoutInflater inflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                        View view = inflater.inflate(R.layout.image_item_for_multiple_images, null);\r\n                        //  View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                        ImageView iv = view.findViewById(R.id.iv);\r\n                        Uri selectedImage = data.getClipData().getItemAt(i).getUri();\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + selectedImage.getPath());\r\n                        filepath = getImagePath(selectedImage);\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                        filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n\r\n                        Bitmap bitmap = null;\r\n                        try {\r\n                            bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                        iv.setImageBitmap(resized);\r\n                        LLimages_edit.addView(view);\r\n                    }\r\n                } else {\r\n                    int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n                    for (int i = 0; i < count; i++) {\r\n                        View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                        ImageView iv = inflater.findViewById(R.id.iv);\r\n                        imageUri = data.getClipData().getItemAt(i).getUri();\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                        filepath = getImagePath(imageUri);\r\n                        Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                        filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                        iv.setImageURI(imageUri);\r\n                        LLimages_edit.addView(inflater);\r\n                    }\r\n                }\r\n\r\n\r\n            } else if (data.getData() != null) {\r\n\r\n                if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                    Uri selectedImage = data.getData();\r\n                    LayoutInflater inflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                    View view = inflater.inflate(R.layout.image_item_for_multiple_images, null);\r\n\r\n                    // View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images,null);\r\n                    // ImageView iv = inflater.findViewById(R.id.iv);\r\n                    ImageView iv = view.findViewById(R.id.iv);\r\n                    filepath = getImagePath(selectedImage);\r\n                    filePaths.add(filepath);\r\n\r\n                    Bitmap bitmap = null;\r\n                    try {\r\n                        bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                    iv.setImageBitmap(resized);\r\n                    LLimages_edit.addView(view);\r\n                } else {\r\n                    String imagePath = data.getData().getPath();\r\n                    imageUri = data.getData();\r\n                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                    ImageView iv = inflater.findViewById(R.id.iv);\r\n                    filepath = getImagePath(imageUri);\r\n                    filePaths.add(filepath);\r\n                    iv.setImageURI(imageUri);\r\n                    LLimages_edit.addView(inflater);\r\n                }\r\n\r\n            }\r\n            //===\r\n\r\n            //old\r\n            /*      if (data.getClipData() != null) {\r\n\r\n                ImageView iv;\r\n                int count = data.getClipData().getItemCount(); //evaluate the count before the for loop --- otherwise, the count is evaluated every loop.\r\n\r\n                for (int i = 0; i < count; i++) {\r\n                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                    iv = inflater.findViewById(R.id.iv);\r\n                    imageUri = data.getClipData().getItemAt(i).getUri();\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + imageUri.getPath());\r\n                    String filepath = getImagePath(imageUri);\r\n                    Log.i(\"TAG\", \"onActivityResult: \" + filepath);\r\n                    filePaths.add(filepath); //getting multiple image file path and save all selected image path in string array\r\n                    iv.setImageURI(imageUri);\r\n                    LLimages_edit.addView(inflater);\r\n                }\r\n\r\n                //do something with the image (save it to some directory or whatever you need to do with it here)\r\n            } else if (data.getData() != null) {\r\n                String imagePath = data.getData().getPath();\r\n                imageUri = data.getData();\r\n                View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                ImageView iv = inflater.findViewById(R.id.iv);\r\n                filepath = getImagePath(imageUri);\r\n                filePaths.add(filepath);\r\n                iv.setImageURI(imageUri);\r\n                LLimages_edit.addView(inflater);\r\n            }*/\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //rececler product view edit icons action\r\n    @Override\r\n    public void onOpenProductEditor(int productID, int adapterPosition) {\r\n        //  Toast.makeText(getActivity(), \"\" + productID, Toast.LENGTH_SHORT).show();\r\n\r\n        Dialog dialog = new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation; //style id\r\n        dialog.setContentView(R.layout.dialog_edit_product);\r\n\r\n        outerRL = dialog.findViewById(R.id.outerRL);\r\n        chooseMultipleProductsIV = dialog.findViewById(R.id.chooseMultipleProducts);\r\n        LLimages_edit = dialog.findViewById(R.id.LLimages);\r\n        productName = dialog.findViewById(R.id.productName);\r\n        et_VideoUrl = dialog.findViewById(R.id.et_VideoUrl);\r\n        productCategory = dialog.findViewById(R.id.productCategory);\r\n        originalPrice = dialog.findViewById(R.id.originalPrice);\r\n        discountedPrice = dialog.findViewById(R.id.discountedPrice);\r\n        skucodeoptional = dialog.findViewById(R.id.skucodeoptional);\r\n        product_description = dialog.findViewById(R.id.product_description);\r\n        post_product_btn = dialog.findViewById(R.id.post_product_btn);\r\n        isActiveproduct = dialog.findViewById(R.id.edit_switch);\r\n        tv_deleteProduct = dialog.findViewById(R.id.tv_deleteProduct);\r\n        isActiveproduct.setOnCheckedChangeListener(onCheckedChangeListener);\r\n        parentSpinneredit = dialog.findViewById(R.id.parentSpinner);\r\n        childSpinneredit = dialog.findViewById(R.id.childSpinner);\r\n\r\n        uploadParentCategory(parentSpinneredit, childSpinneredit);\r\n        parentSpinneredit.setOnItemSelectedListener(onItemSelectedListenerEDit);\r\n        childSpinneredit.setOnItemSelectedListener(onItemSelectedListenerEDit);\r\n\r\n\r\n        chooseMultipleProductsIV.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent();\r\n                intent.setType(\"image/*\");\r\n                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), ALLOW_MULTIPLE_IMAGES_EDIT);\r\n            }\r\n        });\r\n\r\n        outerRL.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //shopLandingPageViewModel.getProductForEdit().removeObservers(getActivity());\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n        //this will trigger update api\r\n        post_product_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (checkEditDialogFieldsValidation()) {\r\n                    {\r\n                        //every thing fine post edit api\r\n\r\n                        if (!TextUtils.isEmpty(et_VideoUrl.getText().toString())) {\r\n                            String path = et_VideoUrl.getText().toString();\r\n                            String segments[] = path.split(\".com/\");\r\n\r\n                            if (segments.length > 1) {\r\n                                document = segments[1];\r\n                            } else {\r\n                                document = \"\";\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (!TextUtils.isEmpty(discountedPrice.getText().toString())) {\r\n                            if (Integer.parseInt(discountedPrice.getText().toString()) > Integer.parseInt(originalPrice.getText().toString())) {\r\n                                Toast.makeText(getActivity(), \"Discounted Price must be less than original price...\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n\r\n                        if (!TextUtils.isEmpty(et_VideoUrl.getText().toString())) {\r\n                            if (!URLUtil.isValidUrl(et_VideoUrl.getText().toString())) {\r\n                                Toast.makeText(getActivity(), \"URL is not valid\", Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n\r\n                        if ((et_VideoUrl.getText().toString().contains(\"www.youtube.com\") && !document.equals(\"\")) || TextUtils.isEmpty(et_VideoUrl.getText().toString())) {\r\n                            UpdateProduct updateProduct = new UpdateProduct();\r\n                            updateProduct.setTitle(productName.getText().toString());\r\n                            updateProduct.setDiscountPrice(!TextUtils.isEmpty(discountedPrice.getText().toString()) ? discountedPrice.getText().toString()  : \"0\");\r\n                            updateProduct.setPrice(originalPrice.getText().toString());\r\n                            updateProduct.setProductId(String.valueOf(productID));\r\n                            updateProduct.setProfileId(Constant.PROFILE_ID);\r\n                            updateProduct.setParentProductCategoryId(parentCategoryId);\r\n                            updateProduct.setProductCategoryId(childCategoryId);\r\n                            updateProduct.setProduct_Pic(filePaths);\r\n                            updateProduct.setSku(skucodeoptional.getText().toString());\r\n                            updateProduct.setSummary(product_description.getText().toString());\r\n                            updateProduct.setProductStatus(productStatus);\r\n                            updateProduct.setProfileId(Constant.PROFILE_ID);\r\n                            updateProduct.setVideoLink(TextUtils.isEmpty(et_VideoUrl.getText().toString()) ? \"\" : et_VideoUrl.getText().toString());\r\n\r\n\r\n                            // loadingDialog.showDialog();\r\n                            shopLandingPageViewModel.updateproduct(updateProduct, getActivity());\r\n                            shopLandingPageViewModel.getProductUpdateResponse().observe(getActivity(), new Observer<UpdateProductResponse>() {\r\n                                @Override\r\n                                public void onChanged(UpdateProductResponse updateProductResponse) {\r\n                                    if (updateProductResponse != null) {\r\n                                        //Toast.makeText(getActivity(), \"\" + updateProductResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                        filePaths.clear();\r\n\r\n                                        if (dialog != null) {\r\n                                            dialog.dismiss();\r\n                                        }\r\n                                        navController.navigate(R.id.action_shopLandingFragment_to_shopLandingFragment2);\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Only Proper YouTube Link is allowed\", Toast.LENGTH_SHORT).show();\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            private boolean checkEditDialogFieldsValidation() {\r\n\r\n                if (TextUtils.isEmpty(originalPrice.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"Original Price Field is empty...\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }\r\n\r\n          /*      if (TextUtils.isEmpty(discountedPrice.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"Discounted Price Field is empty...\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }*/\r\n\r\n          /*      if (TextUtils.isEmpty(skucodeoptional.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"SKU Code Field is empty...\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }\r\n*/\r\n                if (TextUtils.isEmpty(originalPrice.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"Original Price Field is empty...\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }\r\n\r\n                if (TextUtils.isEmpty(product_description.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"Product Description is empty...\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        tv_deleteProduct.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                deleteProduct(productID, dialog, adapterPosition);\r\n            }\r\n        });\r\n\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;f\r\n        window.setAttributes(wlp);\r\n\r\n        ProductForEdit productForEdit = new ProductForEdit();\r\n        productForEdit.setProfileId(Constant.PROFILE_ID);\r\n        productForEdit.setProductId(String.valueOf(productID));\r\n       /* shopLandingPageViewModel.getProductForEdit().removeObservers(this);\r\n        shopLandingPageViewModel.productForEdit(productForEdit);\r\n        shopLandingPageViewModel.getProductForEdit().observe(this, new Observer<ProductForEditResponse>() {\r\n            @Override\r\n            public void onChanged(ProductForEditResponse productForEditResponse) {\r\n                if (productForEditResponse != null) {\r\n                    shopLandingPageViewModel.dPResponse().removeObservers(getActivity());\r\n                    Log.i(\"TAG\", \"trigger :::\");\r\n\r\n                    parentCategoryId = productForEditResponse.getData().getRequestList().getParentProductCategoryId();\r\n                    childCategoryId = productForEditResponse.getData().getRequestList().getProductCategoryid();\r\n\r\n                    productName.setText(productForEditResponse.getData().getRequestList().getTitle());\r\n                    productCategory.setText(productForEditResponse.getData().getRequestList().getProductCategoryName());\r\n                    originalPrice.setText(productForEditResponse.getData().getRequestList().getPrice());\r\n                    discountedPrice.setText(productForEditResponse.getData().getRequestList().getDiscount());\r\n                    skucodeoptional.setText(productForEditResponse.getData().getRequestList().getSku());\r\n                    isActiveproduct.setChecked(productForEditResponse.getData().getRequestList().getProductStatus().equals(\"Y\") ? true : false);\r\n                    product_description.setText(productForEditResponse.getData().getRequestList().getSummary());\r\n                    imageIds.clear();\r\n                    //when url provided this will work for sure...\r\n                    if (productForEditResponse.getData().getRequestList().getProductImageDTO() != null) {\r\n                        for (int i = 0; i < productForEditResponse.getData().getRequestList().getProductImageDTO().size(); i++) {\r\n                            View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                            ImageView iv = inflater.findViewById(R.id.iv);\r\n                            imageIds.add(productForEditResponse.getData().getRequestList().getProductImageDTO().get(i).getImageId());\r\n                            Glide.with(getActivity()).load(productForEditResponse.getData().getRequestList().getProductImageDTO().get(i).getImageURL()).into(iv);\r\n                            ImageView ic_delete = inflater.findViewById(R.id.ic_delete);\r\n                            //this will delete image\r\n                            ic_delete.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View v) {\r\n                                    //Toast.makeText(getActivity(), \"Deleted.....\" +imageIds.get(LLimages_edit.indexOfChild(inflater) - 1) , Toast.LENGTH_SHORT).show();\r\n                                    DeleteProductImage deleteProductImage = new DeleteProductImage();\r\n                                    deleteProductImage.setImageId(imageIds.get(LLimages_edit.indexOfChild(inflater) - 1).toString());\r\n                                    deleteProductImage.setProductId(String.valueOf(productID));\r\n                                    deleteProductImage.setProfileId(Constant.PROFILE_ID);\r\n\r\n                                    shopLandingPageViewModel.deleteProduct(deleteProductImage);\r\n                                    shopLandingPageViewModel.dPResponse().observe(getActivity(), new Observer<DeleteProductImageResponse>() {\r\n                                        @Override\r\n                                        public void onChanged(DeleteProductImageResponse responseBody) {\r\n                                            if (responseBody != null) {\r\n                                                Toast.makeText(getActivity(), \"Image Removed Successfully...\", Toast.LENGTH_SHORT).show();\r\n                                                LLimages_edit.removeView(inflater);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            LLimages_edit.addView(inflater);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });*/\r\n\r\n        getRetrofitClient().getProductForEdit(\"Bearer \" + TelloPreferenceManager.getInstance(getActivity()).getAccessToken(), productForEdit.getProfileId(), productForEdit.getProductId()).enqueue(new Callback<ProductForEditResponse>() {\r\n            @Override\r\n            public void onResponse(Call<ProductForEditResponse> call, Response<ProductForEditResponse> response) {\r\n                if (response != null) {\r\n                    if (response.isSuccessful()) {\r\n                        ProductForEditResponse productForEditResponse = response.body();\r\n                        if (productForEditResponse != null) {\r\n\r\n                            parentCategoryId = productForEditResponse.getData().getRequestList().getParentProductCategoryId();\r\n                            childCategoryId = productForEditResponse.getData().getRequestList().getProductCategoryid();\r\n                            parentCat_maintain = productForEditResponse.getData().getRequestList().getParentCategoryName();\r\n                            childCat_maintain = productForEditResponse.getData().getRequestList().getProductCategoryName();\r\n\r\n                            Log.i(\"TAG\", \"onResponse: \" + parentCat_maintain);\r\n                            Log.i(\"TAG\", \"onResponse: \" + childCat_maintain);\r\n\r\n                            isForEditMaintaince = true;\r\n                            uploadParentCategory(parentSpinneredit, childSpinneredit, parentCat_maintain, childCat_maintain);\r\n                            //   uploadChildCategory(parentCategoryId, childSpinneredit, true, childCat_maintain);\r\n\r\n                            productName.setText(productForEditResponse.getData().getRequestList().getTitle());\r\n                            productCategory.setText(productForEditResponse.getData().getRequestList().getProductCategoryName());\r\n                            originalPrice.setText(productForEditResponse.getData().getRequestList().getPrice());\r\n                            discountedPrice.setText(productForEditResponse.getData().getRequestList().getDiscount());\r\n                            skucodeoptional.setText(productForEditResponse.getData().getRequestList().getSku());\r\n                            isActiveproduct.setChecked(productForEditResponse.getData().getRequestList().getProductStatus().equals(\"Y\") ? true : false);\r\n                            product_description.setText(productForEditResponse.getData().getRequestList().getSummary());\r\n                            // et_VideoUrl.setText(productForEditResponse.getData().getRequestList().getVideoLink());\r\n                            et_VideoUrl.setText(productForEditResponse.getData().getRequestList().getVideoLink());\r\n                            imageIds.clear();\r\n                            //when url provided this will work for sure...\r\n                            if (productForEditResponse.getData().getRequestList().getProductImageDTO() != null) {\r\n                                for (int i = 0; i < productForEditResponse.getData().getRequestList().getProductImageDTO().size(); i++) {\r\n                                    View inflater = getLayoutInflater().inflate(R.layout.image_item_for_multiple_images, null);\r\n                                    ImageView iv = inflater.findViewById(R.id.iv);\r\n                                    imageIds.add(productForEditResponse.getData().getRequestList().getProductImageDTO().get(i).getImageId());\r\n                                    Glide.with(getActivity()).load(productForEditResponse.getData().getRequestList().getProductImageDTO().get(i).getImageURL()).into(iv);\r\n                                    ImageView ic_delete = inflater.findViewById(R.id.ic_delete);\r\n                                    //this will delete image\r\n                                    ic_delete.setOnClickListener(new View.OnClickListener() {\r\n                                        @Override\r\n                                        public void onClick(View v) {\r\n                                            //Toast.makeText(getActivity(), \"Deleted.....\" +imageIds.get(LLimages_edit.indexOfChild(inflater) - 1) , Toast.LENGTH_SHORT).show();\r\n                                            loadingDialog.showDialog();\r\n                                            DeleteProductImage deleteProductImage = new DeleteProductImage();\r\n                                            deleteProductImage.setImageId(imageIds.get(LLimages_edit.indexOfChild(inflater) - 1).toString());\r\n                                            deleteProductImage.setProductId(String.valueOf(productID));\r\n                                            deleteProductImage.setProfileId(Constant.PROFILE_ID);\r\n\r\n                                            shopLandingPageViewModel.deleteProduct(deleteProductImage, getActivity());\r\n                                            shopLandingPageViewModel.dPResponse().removeObservers(getViewLifecycleOwner());\r\n                                            shopLandingPageViewModel.dPResponse().observe(getViewLifecycleOwner(), new Observer<DeleteProductImageResponse>() {\r\n                                                @Override\r\n                                                public void onChanged(DeleteProductImageResponse responseBody) {\r\n                                                    if (responseBody != null) {\r\n                                                        Toast.makeText(getActivity(), \"Image Removed Successfully...\", Toast.LENGTH_SHORT).show();\r\n                                                        LLimages_edit.removeView(inflater);\r\n                                                        loadingDialog.dismissDialog();\r\n                                                    } else {\r\n                                                        Toast.makeText(getActivity(), \"Image Not Removed.Please Try Again\", Toast.LENGTH_SHORT).show();\r\n                                                        loadingDialog.dismissDialog();\r\n                                                    }\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n\r\n                                    LLimages_edit.addView(inflater);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else { //incase response is null\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ProductForEditResponse> call, Throwable t) {\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    private void deleteProduct(int productID, Dialog dialog, int adapterPosition) {\r\n\r\n        loadingDialog.showDialog();\r\n        DeleteProduct deleteProduct = new DeleteProduct();\r\n        deleteProduct.setProductId(String.valueOf(productID));\r\n        deleteProduct.setProfileId(Constant.PROFILE_ID);\r\n        shopLandingPageViewModel.deleteProduct(deleteProduct, getActivity());\r\n        shopLandingPageViewModel.deleteProductResponse().observe(getActivity(), new Observer<DeleteProductResponse>() {\r\n            @Override\r\n            public void onChanged(DeleteProductResponse deleteProductResponse) {\r\n                if (deleteProductResponse != null) {\r\n                    if (deleteProductResponse.getStatus().equals(\"0\")) {\r\n                        ((ShopLandingActivity) getActivity()).setTotalProductOnActionBar();\r\n                        dialog.dismiss();\r\n                        loadingDialog.dismissDialog();\r\n                        navController.navigate(R.id.action_shopLandingFragment_to_shopLandingFragment2);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void isActiveproduct(int position, boolean isActive) {\r\n        //  Toast.makeText(getActivity(), \" Position : \" + position + \" Product Status is : \" + isActive, Toast.LENGTH_SHORT).show();\r\n        IsProductActive isProductActive = new IsProductActive();\r\n        isProductActive.setProductId(String.valueOf(position));\r\n        isProductActive.setProductStatus(isActive ? \"Y\" : \"N\");\r\n        isProductActive.setProfileId(Constant.PROFILE_ID);\r\n        shopLandingPageViewModel.isProductActive(isProductActive, getActivity());\r\n        shopLandingPageViewModel.getProductActiveResponse().observe(getActivity(), new Observer<IsProductActiveResponse>() {\r\n            @Override\r\n            public void onChanged(IsProductActiveResponse isProductActiveResponse) {\r\n                if (isProductActiveResponse != null) {\r\n                  /*  if (isProductActiveResponse.getStatus().equals(\"0\")) {\r\n                        if (productListAppend.get(position).getProductStatus().equals(\"N\")) {\r\n                            productListAppend.get(position).setProductStatus(\"Y\");\r\n                        } else {\r\n                            productListAppend.get(position).setProductStatus(\"N\");\r\n                        }\r\n                    }*/\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onOpenProductDetailDialog(int productID) {\r\n        TextView et_ProductName, et_ProductID, et_OriginalPrice, et_DiscountedPrice;\r\n        androidx.viewpager.widget.ViewPager viewPager2;\r\n        DotsIndicator dotsIndicator;\r\n\r\n        dialog = new Dialog(getActivity(), android.R.style.Theme_Black_NoTitleBar_Fullscreen);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        dialog.setContentView(R.layout.dialog_product_detail_new);\r\n        Button button = dialog.findViewById(R.id.open);\r\n\r\n\r\n        et_ProductName = dialog.findViewById(R.id.et_ProductName);\r\n        et_ProductID = dialog.findViewById(R.id.et_ProductID);\r\n        et_OriginalPrice = dialog.findViewById(R.id.et_OriginalPrice);\r\n        et_DiscountedPrice = dialog.findViewById(R.id.et_DiscountedPrice);\r\n        et_Category = dialog.findViewById(R.id.et_Category);\r\n        et_SubCategory = dialog.findViewById(R.id.et_SubCategory);\r\n        et_YoutubeLink = dialog.findViewById(R.id.et_YoutubeLink);\r\n        et_productDescription = dialog.findViewById(R.id.et_productDescription);\r\n        viewPager2 = dialog.findViewById(R.id.viewPager);\r\n\r\n        dotsIndicator = dialog.findViewById(R.id.dots_indicator);\r\n\r\n        ImageView iv_back = dialog.findViewById(R.id.iv_back);\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        // wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n\r\n        ProductForEdit productForEdit = new ProductForEdit();\r\n        productForEdit.setProfileId(Constant.PROFILE_ID);\r\n        productForEdit.setProductId(String.valueOf(productID));\r\n\r\n        shopLandingPageViewModel.productForEdit(productForEdit, getActivity());\r\n        shopLandingPageViewModel.getProductForEdit().observe(getActivity(), new Observer<ProductForEditResponse>() {\r\n            @Override\r\n            public void onChanged(ProductForEditResponse productForEditResponse) {\r\n                if (productForEditResponse != null) {\r\n                    List<String> images = new ArrayList<>();\r\n\r\n                    video = productForEditResponse.getData().getRequestList().getVideoLink();\r\n                    button.setVisibility(View.GONE);\r\n\r\n                    if (video.contains(\"www.youtube.com\")) {\r\n                        images.add(\"https://images.unsplash.com/photo-1611162616475-46b635cb6868?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1934&q=80\");\r\n                        // button.setVisibility(View.GONE);\r\n                    }\r\n\r\n\r\n                    if (productForEditResponse.getData().getRequestList().getProductImageDTO() != null) {\r\n                        for (int i = 0; i < productForEditResponse.getData().getRequestList().getProductImageDTO().size(); i++) {\r\n                            images.add(productForEditResponse.getData().getRequestList().getProductImageDTO().get(i).getImageURL());\r\n                        }\r\n                    }\r\n\r\n                    // Creating Object of ViewPagerAdapter\r\n                    ViewPagerAdapter mViewPagerAdapter = new ViewPagerAdapter(getActivity(), images);\r\n\r\n                    // Adding the Adapter to the ViewPager\r\n                    viewPager2.setAdapter(mViewPagerAdapter);\r\n                    dotsIndicator.setViewPager(viewPager2);\r\n\r\n                    et_ProductName.setText(String.valueOf(productForEditResponse.getData().getRequestList().getTitle()));\r\n                    et_ProductID.setText(String.valueOf(productForEditResponse.getData().getRequestList().getId()));\r\n                    et_OriginalPrice.setText(String.valueOf(productForEditResponse.getData().getRequestList().getPrice()));\r\n                    et_DiscountedPrice.setText(String.valueOf(productForEditResponse.getData().getRequestList().getDiscount()));\r\n                    et_Category.setText(productForEditResponse.getData().getRequestList().getParentCategoryName());\r\n                    et_SubCategory.setText(productForEditResponse.getData().getRequestList().getProductCategoryName());\r\n                    et_YoutubeLink.setText(productForEditResponse.getData().getRequestList().getVideoLink());\r\n                    et_productDescription.setText(productForEditResponse.getData().getRequestList().getSummary());\r\n                    video = productForEditResponse.getData().getRequestList().getVideoLink();\r\n\r\n                    if (video.contains(\"www.youtube.com\")) {\r\n                        if (!URLUtil.isValidUrl(video)) {\r\n                            button.setVisibility(View.GONE);\r\n                        } else {\r\n                            button.setVisibility(View.VISIBLE);\r\n                        }\r\n                    } else {\r\n                        button.setVisibility(View.GONE);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        viewPager2.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                if (position != 0)\r\n                    button.setVisibility(View.GONE);\r\n                else\r\n                    button.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n\r\n            }\r\n        });\r\n\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(getActivity(), WebViewActivity.class);\r\n                i.putExtra(\"videoUrl\", video);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        dialog.setCanceledOnTouchOutside(true);\r\n        dialog.show();\r\n    }\r\n\r\n    @Override\r\n    public void onShareProductLink(String productLink) {\r\n        //Toast.makeText(getActivity(), \"\" + productLink, Toast.LENGTH_SHORT).show();\r\n\r\n        Intent sendIntent = new Intent();\r\n        sendIntent.setAction(Intent.ACTION_SEND);\r\n        sendIntent.putExtra(Intent.EXTRA_TEXT, productLink);\r\n        sendIntent.setType(\"text/plain\");\r\n\r\n        Intent shareIntent = Intent.createChooser(sendIntent, null);\r\n        startActivity(shareIntent);\r\n    }\r\n\r\n    public ProductListAdapter.OnProductEditorClickDialog getReference() {\r\n        return this;\r\n    }\r\n\r\n    CompoundButton.OnCheckedChangeListener onCheckedChangeListener = new CompoundButton.OnCheckedChangeListener() {\r\n        @Override\r\n        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n            if (buttonView.getId() == isActiveproduct.getId()) {\r\n                isActiveproduct.setChecked(isChecked);\r\n                productStatus = isActiveproduct.isChecked() ? \"Y\" : \"N\";\r\n                //  Toast.makeText(getActivity(), \"\" + isChecked, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    };\r\n\r\n    public String getImagePath(Uri uri) {\r\n        Cursor cursor = getActivity().getContentResolver().query(uri, null, null, null, null);\r\n        cursor.moveToFirst();\r\n        String document_id = cursor.getString(0);\r\n        document_id = document_id.substring(document_id.lastIndexOf(\":\") + 1);\r\n        cursor.close();\r\n\r\n        cursor = getActivity().getContentResolver().query(\r\n                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n                null, MediaStore.Images.Media._ID + \" = ? \", new String[]{document_id}, null);\r\n        cursor.moveToFirst();\r\n        String path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));\r\n        cursor.close();\r\n\r\n        return path;\r\n    }\r\n\r\n    //listener for selecting parent and child category items...\r\n    AdapterView.OnItemSelectedListener onItemSelectedListener = new AdapterView.OnItemSelectedListener() {\r\n        @Override\r\n        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n            if (parent.getId() == parentSpinner.getId()) {\r\n                parentCategory = String.valueOf(parentSpinner.getSelectedItemPosition() + 1);\r\n                uploadChildCategory(parentCategory, childSpinner, false);\r\n            }\r\n\r\n            if (parent.getId() == childSpinner.getId()) {\r\n                // childCategory = String.valueOf(childSpinner.getSelectedItemPosition() + 1);\r\n                childCategory = String.valueOf(childCategoryList.get(childSpinner.getSelectedItemPosition()).getSubCategoryNumber());\r\n                //Toast.makeText(getActivity(), \"\" + childCategory, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n        }\r\n    };\r\n\r\n\r\n    AdapterView.OnItemSelectedListener onItemSelectedListenerEDit = new AdapterView.OnItemSelectedListener() {\r\n        @Override\r\n        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n            if (parent.getId() == parentSpinneredit.getId()) {\r\n                parentCategoryId = String.valueOf(parentSpinneredit.getSelectedItemPosition() + 1);\r\n                if (isForEditMaintaince) {\r\n                    uploadChildCategory(parentCategoryId, childSpinneredit, true, childCat_maintain);\r\n                } else {\r\n                    uploadChildCategory(parentCategoryId, childSpinneredit, true);\r\n                }\r\n\r\n            }\r\n\r\n            if (parent.getId() == childSpinneredit.getId()) {\r\n                // childCategory = String.valueOf(childSpinner.getSelectedItemPosition() + 1);\r\n                childCategoryId = String.valueOf(childCategoryList.get(childSpinneredit.getSelectedItemPosition()).getSubCategoryNumber());\r\n                //Toast.makeText(getActivity(), \"\" + childCategory, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n        }\r\n    };\r\n\r\n    /* Returns true if url is valid */\r\n    public static boolean isValid(String url) {\r\n        /* Try creating a valid URL */\r\n        return URLUtil.isValidUrl(url);\r\n    }\r\n\r\n}\r\n\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shoplandingpage/ShopLandingFragment.java	(date 1628233958946)
@@ -227,14 +227,7 @@
                     public void onClick(View v) {
                         //Toast.makeText(ShopLandingActivity.this, "clickedd...", Toast.LENGTH_SHORT).show();
 
-                        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString()) ||
-                                TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ||
-                                TextUtils.isEmpty(et_Description.getText().toString()) ||
-                                TextUtils.isEmpty(et_ProductTitle.getText().toString()) ||
-                                TextUtils.isEmpty(et_SKU.getText().toString())
-                        ) {
-                            Toast.makeText(getActivity(), "Some Fields are missing...", Toast.LENGTH_SHORT).show();
-                        } else {
+                        if (checkAddProductValidation()) {
 
                             if (Integer.parseInt(et_DiscountedPrice.getText().toString()) > Integer.parseInt(et_OriginalPrice.getText().toString())) {
                                 Toast.makeText(getActivity(), "Discounted price must be less than original price...", Toast.LENGTH_SHORT).show();
@@ -246,7 +239,7 @@
 
 
                             AddNewProduct addNewProduct = new AddNewProduct();
-                            addNewProduct.setDiscount_Price(et_DiscountedPrice.getText().toString());
+                            addNewProduct.setDiscount_Price(TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ? "0" : et_DiscountedPrice.getText().toString());
                             addNewProduct.setPrice(et_OriginalPrice.getText().toString());
                             addNewProduct.setProduct_Category_id(parentCategory); //parentCategory
                             addNewProduct.setSub_Product_Category_id(childCategory); //childCategory
@@ -452,6 +445,39 @@
 
     }
 
+    private boolean checkAddProductValidation() {
+
+        if (TextUtils.isEmpty(et_ProductTitle.getText().toString())) {
+            Toast.makeText(getActivity(), "Product Title is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+
+        if (TextUtils.isEmpty(et_OriginalPrice.getText().toString())) {
+            Toast.makeText(getActivity(), "Original Price is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+       /* if(TextUtils.isEmpty(et_DiscountedPrice.getText().toString()) ){
+            Toast.makeText(getActivity(), "Discounted Price is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+*/
+
+        if (TextUtils.isEmpty(et_SKU.getText().toString())) {
+            Toast.makeText(getActivity(), "Product Qty is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        if (TextUtils.isEmpty(et_Description.getText().toString())) {
+            Toast.makeText(getActivity(), "Description is empty...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+
+        return true;
+    }
+
     private void setShopNameAndImage() {
         shopLandingPageViewModel.shopImageAndName(getActivity());
         shopLandingPageViewModel.getShopNameAndImage().observe(getActivity(), new Observer<ShopNameAndImageResponse>() {
@@ -904,7 +930,7 @@
 
 
                         if (!TextUtils.isEmpty(discountedPrice.getText().toString())) {
-                            if (Integer.parseInt(discountedPrice.getText().toString()) > Integer.parseInt(originalPrice.getText().toString())) {
+                            if (Double.parseDouble(discountedPrice.getText().toString()) > Double.parseDouble(originalPrice.getText().toString())) {
                                 Toast.makeText(getActivity(), "Discounted Price must be less than original price...", Toast.LENGTH_SHORT).show();
                                 return;
                             }
@@ -922,7 +948,7 @@
                         if ((et_VideoUrl.getText().toString().contains("www.youtube.com") && !document.equals("")) || TextUtils.isEmpty(et_VideoUrl.getText().toString())) {
                             UpdateProduct updateProduct = new UpdateProduct();
                             updateProduct.setTitle(productName.getText().toString());
-                            updateProduct.setDiscountPrice(!TextUtils.isEmpty(discountedPrice.getText().toString()) ? discountedPrice.getText().toString()  : "0");
+                            updateProduct.setDiscountPrice(!TextUtils.isEmpty(discountedPrice.getText().toString()) ? discountedPrice.getText().toString() : "0");
                             updateProduct.setPrice(originalPrice.getText().toString());
                             updateProduct.setProductId(String.valueOf(productID));
                             updateProduct.setProfileId(Constant.PROFILE_ID);
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shopregistration/ShopRegistrationFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.shopregistration;\r\n\r\nimport android.Manifest;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.TelloApplication;\r\nimport com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ShopRegister;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateUserAndImage;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.ShopRegisterResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateUserAndImageResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.VerifyOtpResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.settingprofileediting.SettingProfileEditingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shoplandingpage.ShopLandingActivity;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shopsetting.ShopSettingFragment;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.LoadingDialog;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Utility;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.net.HttpURLConnection;\r\nimport java.util.ArrayList;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\npublic class ShopRegistrationFragment extends Fragment {\r\n\r\n    private final static int UPLOAD_IMAGE = 123;\r\n    private final static int CAPTURE_IMAGE = 456;\r\n    int counter = 0;\r\n    Button requestforPin;\r\n    Button requestAgain, done_btn;\r\n    String mobileNumber;\r\n    NavController navController;\r\n    RelativeLayout RL;\r\n    ImageView iv_back, iv_editImage, iv_user_image;\r\n    TextView tv_shop_name, store_name_link_one, store_name_link_two, insertDigitreflection, your_number, countDown, termOfUse;\r\n    EditText et_shop_name, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, otp_one, otp_two, otp_three, userShopname;\r\n    boolean isEditable;\r\n    Spinner spinner_operator;\r\n    String regex = \"^[a-z0-9\\\\s|A-Z0-9\\\\s|a-zA-Z\\\\s]+$\"; //regex for shop name must be in alphanumeric format...\r\n    StringBuilder mobileNumberReflection;\r\n    ArrayList<String> mobileOpt = new ArrayList<>();\r\n    ShopRegistrationViewModel shopRegistrationViewModel;\r\n    boolean isD1, isD2, isD3, isD4, isD5, isD6, isD7, isD8, isD9, isD10, isD11, isOTP_one, isOTP_two, isOTP_three;\r\n    Dialog dialogImage;\r\n    Uri imageUri;\r\n    String filePath = \"\", otp, mN;\r\n\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_shop_registration, container, false);\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        navController = Navigation.findNavController(view);\r\n\r\n        initViews(view);\r\n        shopRegistrationViewModel = new ViewModelProvider(this).get(ShopRegistrationViewModel.class);\r\n        // Toast.makeText(getActivity(), \"number\" +  TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getRegisteredNumber(), Toast.LENGTH_SHORT).show();\r\n\r\n    /*    Intent intent = getActivity().getIntent();\r\n        boolean congrats = intent.getBooleanExtra(\"congrats_dialog_to_show\", false);\r\n        Toast.makeText(getActivity(), \"\" + congrats, Toast.LENGTH_SHORT).show();\r\n*/\r\n\r\n        userShopname.setText(TelloPreferenceManager.getInstance(getActivity()).getFirstName());\r\n\r\n\r\n        mN = String.valueOf(TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getRegisteredNumber());\r\n\r\n        d1.setText(String.valueOf(mN.charAt(0)));\r\n        d2.setText(String.valueOf(mN.charAt(1)));\r\n        d3.setText(String.valueOf(mN.charAt(2)));\r\n        d4.setText(String.valueOf(mN.charAt(3)));\r\n        d5.setText(String.valueOf(mN.charAt(4)));\r\n        d6.setText(String.valueOf(mN.charAt(5)));\r\n        d7.setText(String.valueOf(mN.charAt(6)));\r\n        d8.setText(String.valueOf(mN.charAt(7)));\r\n        d9.setText(String.valueOf(mN.charAt(8)));\r\n        d10.setText(String.valueOf(mN.charAt(9)));\r\n        d11.setText(String.valueOf(mN.charAt(10)));\r\n        mobileNumberReflection = new StringBuilder(\"92 \" + mN.charAt(1) + mN.charAt(2) + mN.charAt(3) + \" \" + mN.charAt(4) + mN.charAt(5) + mN.charAt(6) + \" \" + mN.charAt(7) + mN.charAt(8) + mN.charAt(9) + mN.charAt(10));\r\n        // mobileNumberReflection = new StringBuilder(\"92 xxx xxx xxxx\");\r\n\r\n\r\n        //region requestforpin\r\n        requestforPin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (checkValidation()) {\r\n                    RL.setVisibility(View.VISIBLE);\r\n                    requestforPin.setVisibility(View.GONE);\r\n                    requestAgain.setBackgroundDrawable(getResources().getDrawable(R.drawable.edit_text_bg_color));\r\n                    requestAgain.setTextColor(Color.BLACK);\r\n                    requestAgain.setClickable(false);\r\n                    startCountDown();\r\n                    counter++;\r\n                    TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).saveShopURI(store_name_link_one.getText().toString() + store_name_link_two.getText().toString());\r\n\r\n                    //this will collect all digits from number fields...\r\n                    mobileNumber = d1.getText().toString() + d2.getText().toString() + d3.getText().toString() + d4.getText().toString() + d5.getText().toString() + d6.getText().toString() + d7.getText().toString() + d8.getText().toString() + d9.getText().toString() + d10.getText().toString() + d11.getText().toString();\r\n\r\n                    ShopRegister shopRegister = new ShopRegister();\r\n                    shopRegister.setProfileId(Constant.PROFILE_ID); //for testing shop regoistration\r\n                    shopRegister.setShopURl(store_name_link_one.getText().toString().trim() + \"tello.pk\");\r\n                    shopRegister.setRegisterPhone(mobileNumber.toString().trim());\r\n                    // shopRegister.setRegisterPhone(\"03330347473\");\r\n                    shopRegister.setEmail(\"sharjeel@gmail.com\");\r\n                    shopRegister.setShopCategoryId(\"1\");\r\n                    shopRegister.setShopDescription(\"shopTesting\");\r\n                    shopRegister.setShopName(et_shop_name.getText().toString());\r\n\r\n                    shopRegistrationViewModel.postShopRegister(shopRegister);\r\n                    shopRegistrationViewModel.getShopResponse().observe(getViewLifecycleOwner(), new Observer<ShopRegisterResponse>() {\r\n                        @Override\r\n                        public void onChanged(ShopRegisterResponse shopRegisterResponse) {\r\n                            if (shopRegisterResponse != null) {\r\n                                if (\"-6\".equals(shopRegisterResponse.getStatus())) {\r\n                                    Toast.makeText(getActivity(), \"\" + shopRegisterResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                } else {\r\n                                    Toast.makeText(getActivity(), \"\" +/* shopRegisterResponse.getStatusDetail()*/ \"OTP send successfully...\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            } else {\r\n                                Toast.makeText(getActivity(), \"Not Found...\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n                Utility.hideKeyboard(getActivity(), v);\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region done_btn\r\n        LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n        done_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (checkOTP()) {\r\n                    loadingDialog.showDialog();\r\n                    otp = otp_one.getText().toString().trim() + otp_two.getText().toString().trim() + otp_three.getText().toString().trim();\r\n                    shopRegistrationViewModel.verifyOTP(otp, getActivity());\r\n                    shopRegistrationViewModel.getVerifyOtp().observe(getViewLifecycleOwner(), new Observer<VerifyOtpResponse>() {\r\n                        @Override\r\n                        public void onChanged(VerifyOtpResponse verifyOtpResponse) {\r\n                            if (verifyOtpResponse != null) {\r\n                                if (verifyOtpResponse.getStatus().equals(\"0\")) {\r\n                                    Toast.makeText(getActivity(), \"OTP verified...\", Toast.LENGTH_SHORT).show();\r\n                                    //getActivity().startActivity(new Intent(getActivity(), ShopLandingActivity.class));\r\n                                    loadingDialog.dismissDialog();\r\n                                    navController.navigate(R.id.shopSettingFragment);\r\n                                } else if (verifyOtpResponse.getStatus().equals(\"-1\")) {\r\n                                    loadingDialog.dismissDialog();\r\n                                    Toast.makeText(getActivity(), verifyOtpResponse.getStatusDetail(), Toast.LENGTH_SHORT).show();\r\n                                    navController.navigate(R.id.shopSettingFragment);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    // getActivity().startActivity(new Intent(getActivity(), ShopLandingActivity.class));\r\n                    // navController.navigate(R.id.shopSettingFragment);\r\n                }\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region requestAgain\r\n        requestAgain.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (counter < 2) {\r\n                    // here we call resend opt\r\n                    requestAgain.setBackgroundDrawable(getResources().getDrawable(R.drawable.edit_text_bg_color));\r\n                    requestAgain.setTextColor(Color.BLACK);\r\n                    requestAgain.setClickable(false);\r\n                    startCountDown();\r\n                    counter++;\r\n                    shopRegistrationViewModel.resendOTP(getActivity());\r\n                    shopRegistrationViewModel.getresendOtp().observe(getActivity(), new Observer<VerifyOtpResponse>() {\r\n                        @Override\r\n                        public void onChanged(VerifyOtpResponse verifyOtpResponse) {\r\n                            if (verifyOtpResponse != null) {\r\n\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    requestAgain.setBackgroundDrawable(getResources().getDrawable(R.drawable.edit_text_bg_dark_selected));\r\n                    requestAgain.setTextColor(Color.WHITE);\r\n                    requestAgain.setClickable(true);\r\n                    requestAgain.setText(\"Request For Call\");\r\n                }\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region backbutton\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                getActivity().finish();\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region shopNameAnimation\r\n        et_shop_name.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                tv_shop_name.animate().alpha(1.0f);\r\n                store_name_link_one.setText(et_shop_name.getText().toString().replace(\" \", \"-\") + \".\");\r\n\r\n                if (TextUtils.isEmpty(et_shop_name.getText().toString())) {\r\n                    tv_shop_name.animate().alpha(0.0f);\r\n                    store_name_link_one.animate().alpha(1);\r\n                    store_name_link_one.setText(\"your-shop-name.\");\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region mobileNumber\r\n        insertDigitreflection.setText(mobileNumberReflection);\r\n\r\n        d1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n                if (!TextUtils.isEmpty(d1.getText().toString())) {\r\n                    d1.clearFocus();\r\n                    d2.requestFocus();\r\n                    d2.setCursorVisible(true);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n\r\n        });\r\n\r\n        d1.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD2) {\r\n                        isD2 = false;\r\n                    } else {\r\n                        d1.clearFocus();\r\n                        d11.requestFocus();\r\n                        d11.setCursorVisible(true);\r\n                        if (d11.getText().length() == 0) {\r\n                            d11.setSelection(0);\r\n                        } else {\r\n                            d11.setSelection(1);\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n        d2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d2.getText().toString())) {\r\n                    d2.clearFocus();\r\n                    d3.requestFocus();\r\n                    d3.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d2.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(3, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d2.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(3, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d2.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD3) {\r\n                        isD3 = false;\r\n                    } else {\r\n                        d2.clearFocus();\r\n                        d1.requestFocus();\r\n                        d1.setCursorVisible(true);\r\n                        if (d1.getText().length() == 0) {\r\n                            d1.setSelection(0);\r\n                        } else {\r\n                            d1.setSelection(1);\r\n                        }\r\n                        isD2 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d3.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d3.getText().toString())) {\r\n                    d3.clearFocus();\r\n                    d4.requestFocus();\r\n                    d4.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d3.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(4, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d3.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(4, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d3.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD4) {\r\n                        isD4 = false;\r\n                    } else {\r\n                        d3.clearFocus();\r\n                        d2.requestFocus();\r\n                        d2.setCursorVisible(true);\r\n                        if (d2.getText().length() == 0) {\r\n                            d2.setSelection(0);\r\n                        } else {\r\n                            d2.setSelection(1);\r\n                        }\r\n                        isD3 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d4.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d4.getText().toString())) {\r\n                    d4.clearFocus();\r\n                    d5.requestFocus();\r\n                    d5.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d4.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(5, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d4.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(5, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d4.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD5) {\r\n                        isD5 = false;\r\n                    } else {\r\n                        d4.clearFocus();\r\n                        d3.requestFocus();\r\n                        d3.setCursorVisible(true);\r\n                        if (d3.getText().length() == 0) {\r\n                            d3.setSelection(0);\r\n                        } else {\r\n                            d3.setSelection(1);\r\n                        }\r\n                        isD4 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d5.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d5.getText().toString())) {\r\n                    d5.clearFocus();\r\n                    d6.requestFocus();\r\n                    d6.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d5.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(7, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d5.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(7, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d5.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD6) {\r\n                        isD6 = false;\r\n                    } else {\r\n                        d5.clearFocus();\r\n                        d4.requestFocus();\r\n                        d4.setCursorVisible(true);\r\n                        if (d4.getText().length() == 0) {\r\n                            d4.setSelection(0);\r\n                        } else {\r\n                            d4.setSelection(1);\r\n                        }\r\n                        isD5 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d6.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d6.getText().toString())) {\r\n                    d6.clearFocus();\r\n                    d7.requestFocus();\r\n                    d7.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d6.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(8, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d6.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(8, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d6.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD7) {\r\n                        isD7 = false;\r\n                    } else {\r\n                        d6.clearFocus();\r\n                        d5.requestFocus();\r\n                        d5.setCursorVisible(true);\r\n                        if (d5.getText().length() == 0) {\r\n                            d5.setSelection(0);\r\n                        } else {\r\n                            d5.setSelection(1);\r\n                        }\r\n                        isD6 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d7.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d7.getText().toString())) {\r\n                    d7.clearFocus();\r\n                    d8.requestFocus();\r\n                    d8.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d7.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(9, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d7.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(9, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d7.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD8) {\r\n                        isD8 = false;\r\n                    } else {\r\n                        d7.clearFocus();\r\n                        d6.requestFocus();\r\n                        d6.setCursorVisible(true);\r\n                        if (d6.getText().length() == 0) {\r\n                            d6.setSelection(0);\r\n                        } else {\r\n                            d6.setSelection(1);\r\n                        }\r\n                        isD7 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d8.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d8.getText().toString())) {\r\n                    d8.clearFocus();\r\n                    d9.requestFocus();\r\n                    d9.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d8.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(11, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d8.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(11, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d8.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD9) {\r\n                        isD9 = false;\r\n                    } else {\r\n                        d8.clearFocus();\r\n                        d7.requestFocus();\r\n                        d7.setCursorVisible(true);\r\n                        if (d7.getText().length() == 0) {\r\n                            d7.setSelection(0);\r\n                        } else {\r\n                            d7.setSelection(1);\r\n                        }\r\n                        isD8 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n        d9.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d9.getText().toString())) {\r\n                    d9.clearFocus();\r\n                    d10.requestFocus();\r\n                    d10.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d9.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(12, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d9.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(12, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d9.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD10) {\r\n                        isD10 = false;\r\n                    } else {\r\n                        d9.clearFocus();\r\n                        d8.requestFocus();\r\n                        d8.setCursorVisible(true);\r\n                        if (d8.getText().length() == 0) {\r\n                            d8.setSelection(0);\r\n                        } else {\r\n                            d8.setSelection(1);\r\n                        }\r\n                        isD9 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        d10.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d10.getText().toString())) {\r\n                    d10.clearFocus();\r\n                    d11.requestFocus();\r\n                    d11.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d10.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(13, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d10.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(13, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d10.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isD11) {\r\n                        isD11 = false;\r\n                    } else {\r\n                        d10.clearFocus();\r\n                        d9.requestFocus();\r\n                        d9.setCursorVisible(true);\r\n                        if (d9.getText().length() == 0) {\r\n                            d9.setSelection(0);\r\n                        } else {\r\n                            d9.setSelection(1);\r\n                        }\r\n                        isD10 = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        d11.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(d11.getText().toString())) {\r\n                    d11.clearFocus();\r\n                    d1.requestFocus();\r\n                    d1.setCursorVisible(true);\r\n                }\r\n\r\n                if (TextUtils.isEmpty(d11.getText().toString())) { //add single space on zero index\r\n                    mobileNumberReflection.setCharAt(14, 'x');\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                } else { // add number on zero index\r\n                    String s1 = d11.getText().toString();\r\n                    char c = s1.charAt(0);//returns h\r\n                    mobileNumberReflection.setCharAt(14, c);\r\n                    insertDigitreflection.setText(mobileNumberReflection);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        d11.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    d11.clearFocus();\r\n                    d10.requestFocus();\r\n                    d10.setCursorVisible(true);\r\n                    if (d10.getText().length() == 0) {\r\n                        d10.setSelection(0);\r\n                    } else {\r\n                        d10.setSelection(1);\r\n                    }\r\n                    isD11 = true;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        //endregion\r\n\r\n        //region OTP\r\n        otp_one.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(otp_one.getText().toString())) {\r\n                    otp_one.clearFocus();\r\n                    otp_two.requestFocus();\r\n                    otp_two.setCursorVisible(true);\r\n                }\r\n\r\n                if (!TextUtils.isEmpty(otp_one.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_two.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_three.getText().toString())) {\r\n\r\n                    done_btn.setTextColor(Color.WHITE);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn));\r\n                    Utility.hideKeyboard(getActivity(), view);\r\n\r\n                } else {\r\n                    done_btn.setTextColor(Color.BLACK);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn_light));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        otp_one.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isOTP_two) {\r\n                        isOTP_two = false;\r\n                    } else {\r\n                        otp_one.clearFocus();\r\n                        otp_three.requestFocus();\r\n                        otp_three.setCursorVisible(true);\r\n                        if (otp_three.getText().length() == 0) {\r\n                            otp_three.setSelection(0);\r\n                        } else {\r\n                            otp_three.setSelection(1);\r\n                        }\r\n                        isOTP_one = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        otp_two.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(otp_two.getText().toString())) {\r\n                    otp_two.clearFocus();\r\n                    otp_three.requestFocus();\r\n                    otp_three.setCursorVisible(true);\r\n                }\r\n\r\n                if (!TextUtils.isEmpty(otp_one.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_two.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_three.getText().toString())) {\r\n\r\n                    Utility.hideKeyboard(getActivity(), view);\r\n                    done_btn.setTextColor(Color.WHITE);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn));\r\n\r\n                } else {\r\n                    done_btn.setTextColor(Color.BLACK);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn_light));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        otp_two.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isOTP_three) {\r\n                        isOTP_three = false;\r\n                    } else {\r\n                        otp_two.clearFocus();\r\n                        otp_one.requestFocus();\r\n                        otp_one.setCursorVisible(true);\r\n                        if (otp_one.getText().length() == 0) {\r\n                            otp_one.setSelection(0);\r\n                        } else {\r\n                            otp_one.setSelection(1);\r\n                        }\r\n                        isOTP_two = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        otp_three.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (!TextUtils.isEmpty(otp_three.getText().toString())) {\r\n                    otp_three.clearFocus();\r\n                    otp_one.requestFocus();\r\n                    otp_one.setCursorVisible(true);\r\n                }\r\n\r\n                if (!TextUtils.isEmpty(otp_one.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_two.getText().toString()) &&\r\n                        !TextUtils.isEmpty(otp_three.getText().toString())) {\r\n\r\n\r\n                    done_btn.setTextColor(Color.WHITE);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn));\r\n                    Utility.hideKeyboard(getActivity(), view);\r\n\r\n                } else {\r\n                    done_btn.setTextColor(Color.BLACK);\r\n                    done_btn.setBackgroundDrawable(getResources().getDrawable(R.drawable.rounded_btn_light));\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        otp_three.setOnKeyListener(new View.OnKeyListener() {\r\n            @Override\r\n            public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n                if (keyCode == KeyEvent.KEYCODE_DEL) {\r\n                    if (isOTP_one) {\r\n                        isOTP_one = false;\r\n                    } else {\r\n                        otp_three.clearFocus();\r\n                        otp_two.requestFocus();\r\n                        otp_two.setCursorVisible(true);\r\n                        if (otp_two.getText().length() == 0) {\r\n                            otp_two.setSelection(0);\r\n                        } else {\r\n                            otp_two.setSelection(1);\r\n                        }\r\n                        isOTP_three = true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region updateUserName_Image\r\n        iv_editImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //here we call api for set user name and image ...\r\n                if (TextUtils.isEmpty(userShopname.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"User name can not be empty...\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();\r\n                    updateUserAndImage.setFirstName(userShopname.getText().toString());\r\n                    updateUserAndImage.setMiddleName(\" \");\r\n                    updateUserAndImage.setLastName(\" \");\r\n                    updateUserAndImage.setProfileId(Constant.PROFILE_ID);\r\n                    updateUserAndImage.setProfilePic(TextUtils.isEmpty(filePath) ? \"\" : filePath);\r\n                    shopRegistrationViewModel.getUpdateUserImageResponse().removeObservers(getViewLifecycleOwner()); //need to remove observer here to stop multiple call of apis\r\n                    LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n                    loadingDialog.showDialog();\r\n                    shopRegistrationViewModel.userImageandName(updateUserAndImage, getActivity());\r\n                    shopRegistrationViewModel.getUpdateUserImageResponse().observe(getViewLifecycleOwner(), new Observer<UpdateUserAndImageResponse>() {\r\n                        @Override\r\n                        public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {\r\n                            if (updateUserAndImageResponse != null) {\r\n                                // Toast.makeText(SettingProfileEditingActivity.this, updateUserAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT);\r\n                                loadingDialog.dismissDialog();\r\n                            } else {\r\n                                loadingDialog.dismissDialog();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n     /*           LoadingDialog loadingDialog = new LoadingDialog(getActivity());\r\n                UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();\r\n                if (TextUtils.isEmpty(userShopname.getText().toString())) {\r\n                    Toast.makeText(getActivity(), \"Shop Owner Name Required...\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                updateUserAndImage.setFirstName(userShopname.getText().toString());\r\n                updateUserAndImage.setMiddleName(\" \");\r\n                updateUserAndImage.setLastName(\" \");\r\n                updateUserAndImage.setProfileId(Constant.PROFILE_ID);\r\n                updateUserAndImage.setProfilePic(filePath);\r\n                loadingDialog.showDialog();\r\n                shopRegistrationViewModel.getUpdateUserImageResponse().removeObservers(getActivity()); //need to remove observer here to stop multiple call of apis\r\n                shopRegistrationViewModel.userImageandName(updateUserAndImage);\r\n                shopRegistrationViewModel.getUpdateUserImageResponse().observe(getActivity(), new Observer<UpdateUserAndImageResponse>() {\r\n                    @Override\r\n                    public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {\r\n                        if (updateUserAndImageResponse != null) {\r\n                            loadingDialog.dismissDialog();\r\n                            Toast.makeText(getActivity(), \"\" + updateUserAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT);\r\n                        } else {\r\n                            loadingDialog.dismissDialog();\r\n                        }\r\n                    }\r\n                });*/\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        //region mobileOperatorsetOnSpinner\r\n        mobileOpt.add(\"Select\");\r\n        mobileOpt.add(\"Ufone\");\r\n        mobileOpt.add(\"Telenor\");\r\n        mobileOpt.add(\"Jazz\");\r\n        ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, mobileOpt);\r\n        spinnerArrayAdapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item); // The drop down vieww\r\n        spinner_operator.setAdapter(spinnerArrayAdapter);\r\n        //endregion\r\n\r\n        //region Storage_Permissions\r\n        iv_user_image.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                checkPermissions();\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        Utility.hideKeyboard(getActivity(), view);\r\n    }\r\n\r\n    private void checkPermissions() {\r\n        dialogImage = new Dialog(getActivity());\r\n        dialogImage.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialogImage.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialogImage.setContentView(R.layout.dialog_upload_capture);\r\n\r\n        Button upload = dialogImage.findViewById(R.id.uploadImage);\r\n        Button capture = dialogImage.findViewById(R.id.captureImage);\r\n\r\n        upload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.READ_EXTERNAL_STORAGE) +\r\n                        ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.CAMERA) +\r\n                        ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        != PackageManager.PERMISSION_GRANTED) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.READ_EXTERNAL_STORAGE) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.CAMERA) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                        builder.setTitle(\"Grant those permissions...\");\r\n                        builder.setMessage(\"Camera and External Storage Permission Required...\");\r\n                        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                requestPermissions(new String[]{\r\n                                        Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                        Manifest.permission.CAMERA,\r\n                                        Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                                }, 1);\r\n\r\n                            }\r\n                        });\r\n\r\n                        builder.setNegativeButton(\"Cancel\", null);\r\n                        AlertDialog alertDialog = builder.create();\r\n                        alertDialog.show();\r\n                    } else { //ye lines for the very first time chalein gy jab app start hongy\r\n                        requestPermissions(new String[]{\r\n                                Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                Manifest.permission.CAMERA,\r\n                                Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                        }, 1);\r\n                    }\r\n                } else {\r\n                    dialogImage.dismiss();\r\n                    openGallery();\r\n                }\r\n            }\r\n        });\r\n        capture.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.READ_EXTERNAL_STORAGE) +\r\n                        ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.CAMERA) +\r\n                        ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        != PackageManager.PERMISSION_GRANTED) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.READ_EXTERNAL_STORAGE) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.CAMERA) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                    ) {\r\n\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                        builder.setTitle(\"Grant those permissions...\");\r\n                        builder.setMessage(\"Camera External Storage Permission Required...\");\r\n                        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                requestPermissions(new String[]{\r\n                                        Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                        Manifest.permission.CAMERA,\r\n                                        Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                                }, 2);\r\n\r\n                            }\r\n                        });\r\n\r\n                        builder.setNegativeButton(\"Cancel\", null);\r\n                        AlertDialog alertDialog = builder.create();\r\n                        alertDialog.show();\r\n                    } else { //ye lines for the very first time chalein gy jab app start hongy\r\n                        requestPermissions(new String[]{\r\n                                Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                Manifest.permission.CAMERA,\r\n                                Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                        }, 2);\r\n                    }\r\n                } else {\r\n                    dialogImage.dismiss();\r\n                    openCamera();\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialogImage.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        window.setAttributes(wlp);\r\n        dialogImage.show();\r\n    }\r\n\r\n    private boolean checkOTP() {\r\n        if (TextUtils.isEmpty(otp_one.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"OTP required\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(otp_two.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"OTP required\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(otp_three.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"OTP required\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private void startCountDown() {\r\n\r\n        new CountDownTimer(60000, 1000) {\r\n\r\n            public void onTick(long millisUntilFinished) {\r\n                countDown.setText(\"in 00 : \" + millisUntilFinished / 1000);\r\n                //here you can have your logic to set text to edittext\r\n            }\r\n\r\n            public void onFinish() {\r\n                try {\r\n                    countDown.setText(\"done!\");\r\n                    requestAgain.setBackgroundDrawable(getResources().getDrawable(R.drawable.edit_text_bg_dark_selected));\r\n                    requestAgain.setTextColor(Color.WHITE);\r\n                    requestAgain.setClickable(true);\r\n                } catch (Exception ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n\r\n        }.start();\r\n\r\n//03350221182\r\n    }\r\n\r\n    public void initViews(View view) {\r\n        requestforPin = view.findViewById(R.id.requestforPin);\r\n        requestAgain = view.findViewById(R.id.requestAgain);\r\n        done_btn = view.findViewById(R.id.done_btn);\r\n        RL = view.findViewById(R.id.RL);\r\n        iv_back = view.findViewById(R.id.iv_back);\r\n        store_name_link_one = view.findViewById(R.id.store_name_link_one);\r\n        store_name_link_two = view.findViewById(R.id.store_name_link_two);\r\n        insertDigitreflection = view.findViewById(R.id.insertDigitreflection);\r\n        tv_shop_name = view.findViewById(R.id.tv_shop_name);\r\n        et_shop_name = view.findViewById(R.id.et_shop_name);\r\n        your_number = view.findViewById(R.id.your_number);\r\n        countDown = view.findViewById(R.id.countDown);\r\n        otp_one = view.findViewById(R.id.otp_one);\r\n        otp_two = view.findViewById(R.id.otp_two);\r\n        otp_three = view.findViewById(R.id.otp_three);\r\n        iv_editImage = view.findViewById(R.id.iv_editImage);\r\n        userShopname = view.findViewById(R.id.userShopname);\r\n        spinner_operator = view.findViewById(R.id.spinner_operator);\r\n        iv_user_image = view.findViewById(R.id.iv_user_image);\r\n        termOfUse = view.findViewById(R.id.toc);\r\n        termOfUse.setPaintFlags(termOfUse.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n\r\n        d1 = view.findViewById(R.id.d1);\r\n        d2 = view.findViewById(R.id.d2);\r\n        d3 = view.findViewById(R.id.d3);\r\n        d4 = view.findViewById(R.id.d4);\r\n        d5 = view.findViewById(R.id.d5);\r\n        d6 = view.findViewById(R.id.d6);\r\n        d7 = view.findViewById(R.id.d7);\r\n        d8 = view.findViewById(R.id.d8);\r\n        d9 = view.findViewById(R.id.d9);\r\n        d10 = view.findViewById(R.id.d10);\r\n        d11 = view.findViewById(R.id.d11);\r\n\r\n\r\n    }\r\n\r\n    public boolean checkValidation() {\r\n        if (TextUtils.isEmpty(et_shop_name.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Shop Name is required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n\r\n        if (et_shop_name.getText().length() > 25) {\r\n            Toast.makeText(getActivity(), \"Shop Name should not be exceed 25 characters...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n\r\n        Pattern pattern = Pattern.compile(regex);\r\n        Matcher matcher = pattern.matcher(et_shop_name.getText().toString());\r\n\r\n        if (!TextUtils.isEmpty(et_shop_name.getText().toString()) && matcher.matches() == false) {\r\n            Toast.makeText(getActivity(), \"Shop Name must be in alphanumeric format...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d1.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d2.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d3.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d4.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d5.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d6.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d7.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d8.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d9.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d10.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        if (TextUtils.isEmpty(d11.getText().toString())) {\r\n            Toast.makeText(getActivity(), \"Phone Number Required...\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private void openGallery() {\r\n        Intent gallery = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n        startActivityForResult(gallery, UPLOAD_IMAGE);\r\n    }\r\n\r\n    private void openCamera() {\r\n        Intent camera_intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        startActivityForResult(camera_intent, CAPTURE_IMAGE);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case 1: //pick and set image from gallery\r\n                if (grantResults.length > 0 && grantResults[0] + grantResults[1] == PackageManager.PERMISSION_GRANTED) {\r\n                    dialogImage.dismiss();\r\n                    openGallery();\r\n                }\r\n                break;\r\n            case 2: //capture image and set from camera\r\n                if (grantResults.length > 0 && grantResults[0] + grantResults[1] == PackageManager.PERMISSION_GRANTED) {\r\n                    dialogImage.dismiss();\r\n                    openCamera();\r\n                }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK && requestCode == UPLOAD_IMAGE) { //Upload image from gallery\r\n            imageUri = data.getData();\r\n            iv_user_image.setImageURI(imageUri);\r\n            filePath = getPath(getActivity(), imageUri);\r\n            Log.i(\"TAG\", \"onActivityResult: Gallery Upload Path\" + filePath);\r\n\r\n            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                Uri selectedImage = data.getData();\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                iv_user_image.setImageBitmap(resized);\r\n            }\r\n\r\n\r\n        } else if (resultCode == RESULT_OK && requestCode == CAPTURE_IMAGE) {\r\n\r\n            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                Uri selectedImage = data.getData();\r\n                iv_user_image.setImageURI(selectedImage);\r\n                filePath = getRealPathFromURI(selectedImage);\r\n                Log.i(\"TAG\", \"onActivityResult: Capture Capture Path\" + filePath);\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                iv_user_image.setImageBitmap(resized);\r\n            } else { //other than marshmallow\r\n                Bitmap photo = (Bitmap) data.getExtras().get(\"data\");\r\n                iv_user_image.setImageBitmap(photo);\r\n                imageUri = getImageUri(getActivity(), photo);\r\n                filePath = getRealPathFromURI(imageUri);\r\n                Log.i(\"TAG\", \"onActivityResult: Capture Path : \" + filePath);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //This method return file path when we choose image from gallery\r\n    public static String getPath(Context context, Uri uri) {\r\n        String result = null;\r\n        String[] proj = {MediaStore.Images.Media.DATA};\r\n        Cursor cursor = context.getContentResolver().query(uri, proj, null, null, null);\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                int column_index = cursor.getColumnIndexOrThrow(proj[0]);\r\n                result = cursor.getString(column_index);\r\n            }\r\n            cursor.close();\r\n        }\r\n        if (result == null) {\r\n            result = \"Not found\";\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //this method is used to get image uri , after capturing image from camera\r\n    public Uri getImageUri(Context inContext, Bitmap inImage) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n    //this method is used to get image path when user capture image from camera\r\n    public String getRealPathFromURI(Uri uri) {\r\n        String path = \"\";\r\n        if (getActivity().getContentResolver() != null) {\r\n            Cursor cursor = getActivity().getContentResolver().query(uri, null, null, null, null);\r\n            if (cursor != null) {\r\n                cursor.moveToFirst();\r\n                int idx = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\r\n                path = cursor.getString(idx);\r\n                cursor.close();\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shopregistration/ShopRegistrationFragment.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/shopregistration/ShopRegistrationFragment.java	(date 1628252605336)
@@ -26,11 +26,13 @@
 import android.view.ViewGroup;
 import android.view.Window;
 import android.view.WindowManager;
+import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
+import android.widget.ScrollView;
 import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -46,6 +48,8 @@
 import androidx.navigation.NavController;
 import androidx.navigation.Navigation;
 
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.request.RequestOptions;
 import com.tilismtech.tellotalk_shopping_sdk.R;
 import com.tilismtech.tellotalk_shopping_sdk.TelloApplication;
 import com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;
@@ -82,6 +86,7 @@
     RelativeLayout RL;
     ImageView iv_back, iv_editImage, iv_user_image;
     TextView tv_shop_name, store_name_link_one, store_name_link_two, insertDigitreflection, your_number, countDown, termOfUse;
+    ScrollView scrollView;
     EditText et_shop_name, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, otp_one, otp_two, otp_three, userShopname;
     boolean isEditable;
     Spinner spinner_operator;
@@ -92,7 +97,9 @@
     boolean isD1, isD2, isD3, isD4, isD5, isD6, isD7, isD8, isD9, isD10, isD11, isOTP_one, isOTP_two, isOTP_three;
     Dialog dialogImage;
     Uri imageUri;
-    String filePath = "", otp, mN;
+    String filePath = "", otp, mN, operator;
+    boolean toggle;
+    LoadingDialog loadingDialog;
 
 
     @Override
@@ -114,6 +121,7 @@
 
         initViews(view);
         shopRegistrationViewModel = new ViewModelProvider(this).get(ShopRegistrationViewModel.class);
+        loadingDialog = new LoadingDialog(getActivity());
         // Toast.makeText(getActivity(), "number" +  TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getRegisteredNumber(), Toast.LENGTH_SHORT).show();
 
     /*    Intent intent = getActivity().getIntent();
@@ -191,7 +199,7 @@
         //endregion
 
         //region done_btn
-        LoadingDialog loadingDialog = new LoadingDialog(getActivity());
+
         done_btn.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -1050,57 +1058,97 @@
         iv_editImage.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                //here we call api for set user name and image ...
-                if (TextUtils.isEmpty(userShopname.getText().toString())) {
-                    Toast.makeText(getActivity(), "User name can not be empty...", Toast.LENGTH_SHORT).show();
-                } else {
+
+                if (toggle) {//disable editing and send toward server...
+
+                    if (TextUtils.isEmpty(userShopname.getText().toString())) {
+                        Toast.makeText(getActivity(), "User name can not be empty...", Toast.LENGTH_SHORT).show();
+                        return;
+                    }
+                    loadingDialog.showDialog();
                     UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();
                     updateUserAndImage.setFirstName(userShopname.getText().toString());
                     updateUserAndImage.setMiddleName(" ");
                     updateUserAndImage.setLastName(" ");
                     updateUserAndImage.setProfileId(Constant.PROFILE_ID);
                     updateUserAndImage.setProfilePic(TextUtils.isEmpty(filePath) ? "" : filePath);
-                    shopRegistrationViewModel.getUpdateUserImageResponse().removeObservers(getViewLifecycleOwner()); //need to remove observer here to stop multiple call of apis
-                    LoadingDialog loadingDialog = new LoadingDialog(getActivity());
-                    loadingDialog.showDialog();
-                    shopRegistrationViewModel.userImageandName(updateUserAndImage, getActivity());
-                    shopRegistrationViewModel.getUpdateUserImageResponse().observe(getViewLifecycleOwner(), new Observer<UpdateUserAndImageResponse>() {
-                        @Override
-                        public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
-                            if (updateUserAndImageResponse != null) {
-                                // Toast.makeText(SettingProfileEditingActivity.this, updateUserAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT);
-                                loadingDialog.dismissDialog();
-                            } else {
-                                loadingDialog.dismissDialog();
-                            }
-                        }
-                    });
+
+                    if (TextUtils.isEmpty(filePath)) { //run when only name is given........
+
+                        //  shopRegistrationViewModel.getUserName().removeObservers(getViewLifecycleOwner());
+                        shopRegistrationViewModel.userName(updateUserAndImage, getActivity());
+                        shopRegistrationViewModel.getUserName().observe(getViewLifecycleOwner(), new Observer<UpdateUserAndImageResponse>() {
+                            @Override
+                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
+                                if (updateUserAndImageResponse != null) {
+                                    Toast.makeText(getActivity(), "Profile updated successfully", Toast.LENGTH_SHORT).show();
+                                    shopRegistrationViewModel.getUserName().removeObservers(getViewLifecycleOwner());
+                                    loadingDialog.dismissDialog();
+                                    // loadingDialog.dismissDialog();
+                                } else {
+
+                                }
+                            }
+
+                        });
+                    } else { // run when image and name both are given
+
+
+                        shopRegistrationViewModel.userImageandName(updateUserAndImage, getActivity());
+                        shopRegistrationViewModel.getUpdateUserImageResponse().observe(getViewLifecycleOwner(), new Observer<UpdateUserAndImageResponse>() {
+                            @Override
+                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
+                                if (updateUserAndImageResponse != null) {
+                                    Toast.makeText(getActivity(), "Profile updated successfully", Toast.LENGTH_SHORT).show();
+                                    shopRegistrationViewModel.getUserName().removeObservers(getViewLifecycleOwner());
+                                    loadingDialog.dismissDialog();
+                                    // loadingDialog.dismissDialog();
+                                } else {
+
+                                }
+                            }
+                        });
+                    }
+
+
+                    userShopname.setEnabled(false);
+                    iv_user_image.setEnabled(false);
+                    toggle = false;
+                    iv_editImage.setImageDrawable(getResources().getDrawable(R.drawable.ic_edit_three));
+                } else { //enable editing...
+                    userShopname.setEnabled(true);
+                    toggle = true;
+                    iv_editImage.setImageDrawable(getResources().getDrawable(R.drawable.ic_edit));
+                    iv_user_image.setEnabled(true);
                 }
-     /*           LoadingDialog loadingDialog = new LoadingDialog(getActivity());
-                UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();
-                if (TextUtils.isEmpty(userShopname.getText().toString())) {
-                    Toast.makeText(getActivity(), "Shop Owner Name Required...", Toast.LENGTH_SHORT).show();
+
+      /*          if (TextUtils.isEmpty(userShopname.getText().toString())) {
+                    Toast.makeText(getActivity(), "User name can not be empty...", Toast.LENGTH_SHORT).show();
                     return;
-                }
-                updateUserAndImage.setFirstName(userShopname.getText().toString());
-                updateUserAndImage.setMiddleName(" ");
-                updateUserAndImage.setLastName(" ");
-                updateUserAndImage.setProfileId(Constant.PROFILE_ID);
-                updateUserAndImage.setProfilePic(filePath);
-                loadingDialog.showDialog();
-                shopRegistrationViewModel.getUpdateUserImageResponse().removeObservers(getActivity()); //need to remove observer here to stop multiple call of apis
-                shopRegistrationViewModel.userImageandName(updateUserAndImage);
-                shopRegistrationViewModel.getUpdateUserImageResponse().observe(getActivity(), new Observer<UpdateUserAndImageResponse>() {
-                    @Override
-                    public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
-                        if (updateUserAndImageResponse != null) {
-                            loadingDialog.dismissDialog();
-                            Toast.makeText(getActivity(), "" + updateUserAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT);
-                        } else {
-                            loadingDialog.dismissDialog();
-                        }
-                    }
-                });*/
+                } else {
+                    UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();
+                    updateUserAndImage.setFirstName(userShopname.getText().toString());
+                    updateUserAndImage.setMiddleName(" ");
+                    updateUserAndImage.setLastName(" ");
+                    updateUserAndImage.setProfileId(Constant.PROFILE_ID);
+                    updateUserAndImage.setProfilePic(TextUtils.isEmpty(filePath) ? "" : filePath);
+                    shopRegistrationViewModel.getUpdateUserImageResponse().removeObservers(getViewLifecycleOwner()); //need to remove observer here to stop multiple call of apis
+                    LoadingDialog loadingDialog = new LoadingDialog(getActivity());
+                    loadingDialog.showDialog();
+                    shopRegistrationViewModel.userImageandName(updateUserAndImage, getActivity());
+                    shopRegistrationViewModel.getUpdateUserImageResponse().observe(getViewLifecycleOwner(), new Observer<UpdateUserAndImageResponse>() {
+                        @Override
+                        public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
+                            if (updateUserAndImageResponse != null) {
+                                // Toast.makeText(SettingProfileEditingActivity.this, updateUserAndImageResponse.getStatusDetail(), Toast.LENGTH_SHORT);
+                                loadingDialog.dismissDialog();
+                            } else {
+                                loadingDialog.dismissDialog();
+                            }
+                        }
+                    });
+                }*/
+
             }
         });
         //endregion
@@ -1113,6 +1161,23 @@
         ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(getActivity(), R.layout.spinner_text, mobileOpt);
         spinnerArrayAdapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item); // The drop down vieww
         spinner_operator.setAdapter(spinnerArrayAdapter);
+        spinner_operator.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+            @Override
+            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+                if (parent.getId() == spinner_operator.getId()) {
+                    if (parent.getItemIdAtPosition(position) == 0) {
+                        return;
+                    }
+
+                    operator = (String) spinner_operator.getItemAtPosition(position);
+                }
+            }
+
+            @Override
+            public void onNothingSelected(AdapterView<?> parent) {
+
+            }
+        });
         //endregion
 
         //region Storage_Permissions
@@ -1125,6 +1190,7 @@
         //endregion
 
         Utility.hideKeyboard(getActivity(), view);
+
     }
 
     private void checkPermissions() {
@@ -1294,10 +1360,14 @@
         otp_three = view.findViewById(R.id.otp_three);
         iv_editImage = view.findViewById(R.id.iv_editImage);
         userShopname = view.findViewById(R.id.userShopname);
+        userShopname.setEnabled(false);
         spinner_operator = view.findViewById(R.id.spinner_operator);
         iv_user_image = view.findViewById(R.id.iv_user_image);
         termOfUse = view.findViewById(R.id.toc);
         termOfUse.setPaintFlags(termOfUse.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
+        scrollView = view.findViewById(R.id.scrollView);
+        scrollView.requestFocus();
+        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN); //this line will hide keyboard when screen open first time
 
         d1 = view.findViewById(R.id.d1);
         d2 = view.findViewById(R.id.d2);
@@ -1335,6 +1405,11 @@
             return false;
         }
 
+        if (TextUtils.isEmpty(operator)) {
+            Toast.makeText(getActivity(), "Please select operator...", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
         if (TextUtils.isEmpty(d1.getText().toString())) {
             Toast.makeText(getActivity(), "Phone Number Required...", Toast.LENGTH_SHORT).show();
             return false;
@@ -1428,6 +1503,12 @@
             imageUri = data.getData();
             iv_user_image.setImageURI(imageUri);
             filePath = getPath(getActivity(), imageUri);
+
+            Glide.with(getActivity())
+                    .load(filePath)
+                    .apply(RequestOptions.circleCropTransform())
+                    .into(iv_user_image);
+
             Log.i("TAG", "onActivityResult: Gallery Upload Path" + filePath);
 
             if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
@@ -1446,7 +1527,7 @@
         } else if (resultCode == RESULT_OK && requestCode == CAPTURE_IMAGE) {
 
             if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
-                Uri selectedImage = data.getData();
+       /*         Uri selectedImage = data.getData();
                 iv_user_image.setImageURI(selectedImage);
                 filePath = getRealPathFromURI(selectedImage);
                 Log.i("TAG", "onActivityResult: Capture Capture Path" + filePath);
@@ -1457,13 +1538,32 @@
                     e.printStackTrace();
                 }
                 Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);
-                iv_user_image.setImageBitmap(resized);
+                iv_user_image.setImageBitmap(resized);*/
+
+                Bitmap photo = (Bitmap) data.getExtras().get("data");
+                iv_user_image.setImageBitmap(photo);
+                imageUri = getImageUri(getActivity(), photo);
+                filePath = getRealPathFromURI(imageUri);
+                Log.i("TAG", "onActivityResult: Capture Path : " + filePath);
+
+                Glide.with(getActivity())
+                        .load(filePath)
+                        .apply(RequestOptions.circleCropTransform())
+                        .into(iv_user_image);
+
+
             } else { //other than marshmallow
                 Bitmap photo = (Bitmap) data.getExtras().get("data");
                 iv_user_image.setImageBitmap(photo);
                 imageUri = getImageUri(getActivity(), photo);
                 filePath = getRealPathFromURI(imageUri);
                 Log.i("TAG", "onActivityResult: Capture Path : " + filePath);
+
+                Glide.with(getActivity())
+                        .load(filePath)
+                        .apply(RequestOptions.circleCropTransform())
+                        .into(iv_user_image);
+
             }
         }
 
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Constant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.utils;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.TelloApplication;\r\nimport com.tilismtech.tellotalk_shopping_sdk.managers.TelloPreferenceManager;\r\n\r\npublic class Constant {\r\n\r\n   //  public static String BASE_URL = \"https://www.tilismtechservices.com/ShoppingSDK_staging/\";\r\n    public static String BASE_URL = \"http://172.16.10.53/abc/\"; //ye waley url sy images upload honey ky baad show nahy hoty\r\n\r\n    public static String PROFILE_ID = TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getProfileId();\r\n    public static String CONTACT_NUMBER = TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getRegisteredNumber();\r\n\r\n    public String getProfileId() {\r\n        return PROFILE_ID;\r\n    }\r\n\r\n    public void setProfileId(String profileId) {\r\n        PROFILE_ID = profileId;\r\n    }\r\n\r\n    public String getContactNumber() {\r\n        return CONTACT_NUMBER;\r\n    }\r\n\r\n    public void setContactNumber(String contactNumber) {\r\n        CONTACT_NUMBER = contactNumber;\r\n    }\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Constant.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Constant.java	(date 1628494179675)
@@ -5,8 +5,8 @@
 
 public class Constant {
 
-   //  public static String BASE_URL = "https://www.tilismtechservices.com/ShoppingSDK_staging/";
-    public static String BASE_URL = "http://172.16.10.53/abc/"; //ye waley url sy images upload honey ky baad show nahy hoty
+    // public static String BASE_URL = "https://www.tilismtechservices.com/ShoppingSDK_staging/";
+    public static String BASE_URL = "http://172.16.10.52/abc/"; //ye waley url sy images upload honey ky baad show nahy hoty
 
     public static String PROFILE_ID = TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getProfileId();
     public static String CONTACT_NUMBER = TelloPreferenceManager.getInstance(TelloApplication.getInstance().getContext()).getRegisteredNumber();
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/settingprofileediting/SettingProfileEditingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_seller.settingprofileediting;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\n\r\nimport android.Manifest;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.StrictMode;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.GetShopDetail;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.ShopBasicSetting;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.requestbody.UpdateUserAndImage;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetShopDetailResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.UpdateUserAndImageResponse;\r\nimport com.tilismtech.tellotalk_shopping_sdk.receiver.NetworkReceiver;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.shopregistration.ShopRegistrationViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_seller.storesetting.StoreSettingViewModel;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.Constant;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.LoadingDialog;\r\nimport com.tilismtech.tellotalk_shopping_sdk.utils.NoInternetDetection;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.math.RoundingMode;\r\nimport java.text.DecimalFormat;\r\n\r\npublic class SettingProfileEditingActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    RelativeLayout personalInfoRL, storeSettingRL, bankRL;\r\n    NavHostFragment navHostFragment;\r\n    NavController navController;\r\n    View horizontalLine1, horizontalLine2, horizontalLine3;\r\n    TextView tv_storesettings, tv_bank, tv_personal, rating_number, tv_edit;\r\n    com.google.android.material.tabs.TabLayout tab1;\r\n    ImageView iv_imageedit, iv_profile;\r\n    ShopRegistrationViewModel shopRegistrationViewModel;\r\n    StoreSettingViewModel storeSettingViewModel;\r\n    Dialog dialogImage;\r\n    private final static int UPLOAD_IMAGE = 123;\r\n    private final static int CAPTURE_IMAGE = 456;\r\n    String filePath = \"\";\r\n    Uri imageUri;\r\n    EditText shopOwnername;\r\n    NetworkReceiver networkReceiver;\r\n    LoadingDialog loadingDialog1;\r\n    boolean toggle;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_setting_profile_editing);\r\n        initViews();\r\n        StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();\r\n        StrictMode.setVmPolicy(builder.build());\r\n\r\n    }\r\n\r\n    public void initViews() {\r\n        navHostFragment = (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.nav_host_fragment);\r\n        navController = navHostFragment.getNavController();\r\n        loadingDialog1 = new LoadingDialog(SettingProfileEditingActivity.this);\r\n\r\n        personalInfoRL = findViewById(R.id.personalInfoRL);\r\n        storeSettingRL = findViewById(R.id.storeSettingRL);\r\n        bankRL = findViewById(R.id.bankRL);\r\n        shopOwnername = findViewById(R.id.user_name);\r\n        rating_number = findViewById(R.id.rating_number);\r\n        tv_edit = findViewById(R.id.tv_edit);\r\n\r\n        NoInternetDetection loadingDialog = new NoInternetDetection(this);\r\n        networkReceiver = new NetworkReceiver(loadingDialog);\r\n        IntentFilter intentFilter = new IntentFilter();\r\n        intentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);\r\n        registerReceiver(networkReceiver, intentFilter);\r\n\r\n\r\n        shopRegistrationViewModel = new ViewModelProvider(this).get(ShopRegistrationViewModel.class);\r\n        storeSettingViewModel = new ViewModelProvider(this).get(StoreSettingViewModel.class);\r\n\r\n        horizontalLine1 = findViewById(R.id.horizontalLine1);\r\n        horizontalLine2 = findViewById(R.id.horizontalLine2);\r\n        horizontalLine3 = findViewById(R.id.horizontalLine3);\r\n\r\n        tv_storesettings = findViewById(R.id.tv_storesettings);\r\n        tv_bank = findViewById(R.id.tv_bank);\r\n        tv_personal = findViewById(R.id.tv_personal);\r\n\r\n        personalInfoRL.setOnClickListener(this);\r\n        storeSettingRL.setOnClickListener(this);\r\n        bankRL.setOnClickListener(this);\r\n\r\n        horizontalLine1.setOnClickListener(this);\r\n        horizontalLine2.setOnClickListener(this);\r\n        horizontalLine3.setOnClickListener(this);\r\n\r\n        tv_storesettings.setOnClickListener(this);\r\n        storeSettingRL.setOnClickListener(this);\r\n        bankRL.setOnClickListener(this);\r\n        iv_imageedit = findViewById(R.id.iv_edit);\r\n\r\n        tv_edit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (toggle) {\r\n                    tv_edit.setVisibility(View.VISIBLE);\r\n                    iv_imageedit.setVisibility(View.GONE);\r\n                    toggle = false;\r\n                } else {\r\n                    tv_edit.setVisibility(View.GONE);\r\n                    iv_imageedit.setVisibility(View.VISIBLE);\r\n                    toggle = true;\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n        iv_imageedit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(SettingProfileEditingActivity.this, \"Profile updated successfully...\", Toast.LENGTH_SHORT);\r\n                if (TextUtils.isEmpty(shopOwnername.getText().toString())) {\r\n                    Toast.makeText(SettingProfileEditingActivity.this, \"User name can not be empty...\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n\r\n\r\n                    UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();\r\n                    updateUserAndImage.setFirstName(shopOwnername.getText().toString());\r\n                    updateUserAndImage.setMiddleName(\" \");\r\n                    updateUserAndImage.setLastName(\" \");\r\n                    updateUserAndImage.setProfileId(Constant.PROFILE_ID);\r\n                    updateUserAndImage.setProfilePic(TextUtils.isEmpty(filePath) ? \"\" : filePath);\r\n                    iv_imageedit.setVisibility(View.GONE);\r\n                    tv_edit.setVisibility(View.VISIBLE);\r\n                    toggle = true;\r\n\r\n\r\n                    if (TextUtils.isEmpty(filePath)) { //run when only name is given........\r\n\r\n                        shopRegistrationViewModel.userName(updateUserAndImage, SettingProfileEditingActivity.this);\r\n                        shopRegistrationViewModel.getUserName().observe(SettingProfileEditingActivity.this, new Observer<UpdateUserAndImageResponse>() {\r\n                            @Override\r\n                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {\r\n                                if (updateUserAndImageResponse != null) {\r\n                                    Toast.makeText(SettingProfileEditingActivity.this, \"Profile updated successfully...\", Toast.LENGTH_SHORT);\r\n                                } else {\r\n\r\n                                }\r\n                                Toast.makeText(SettingProfileEditingActivity.this, \"Profile updated successfully...\", Toast.LENGTH_SHORT);\r\n                            }\r\n\r\n                        });\r\n                    } else {\r\n\r\n\r\n                        shopRegistrationViewModel.userImageandName(updateUserAndImage, SettingProfileEditingActivity.this);\r\n                        shopRegistrationViewModel.getUpdateUserImageResponse().observe(SettingProfileEditingActivity.this, new Observer<UpdateUserAndImageResponse>() {\r\n                            @Override\r\n                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {\r\n                                if (updateUserAndImageResponse != null) {\r\n\r\n                                    Toast.makeText(SettingProfileEditingActivity.this, \"Profile updated successfully...\", Toast.LENGTH_SHORT);\r\n\r\n                                } else {\r\n\r\n                                }\r\n                                Toast.makeText(SettingProfileEditingActivity.this, \"Profile updated successfully...\", Toast.LENGTH_SHORT);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        iv_profile = findViewById(R.id.iv_profile);\r\n        iv_profile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                checkPermissions();\r\n            }\r\n        });\r\n\r\n        tab1 = findViewById(R.id.tab1);\r\n        tab1.getTabAt(0).select();\r\n        tab1.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n\r\n                switch (tab.getPosition()) {\r\n                    case 0:\r\n                        navController.navigate(R.id.storeSettingFragment);\r\n                        break;\r\n                    case 1:\r\n                        navController.navigate(R.id.bankSettingFragment);\r\n                        break;\r\n                }\r\n              /*  if (tab.getPosition() == 0) {\r\n                    navController.navigate(R.id.storeSettingFragment);\r\n                } else if (tab.getPosition() == 1) {\r\n                    navController.navigate(R.id.bankSettingFragment);\r\n                }*/\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n\r\n        findViewById(R.id.iv_back).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        GetShopDetail getShopDetail = new GetShopDetail();\r\n        getShopDetail.setProfileId(Constant.PROFILE_ID);\r\n        storeSettingViewModel.postShopDetail(getShopDetail, SettingProfileEditingActivity.this);\r\n        storeSettingViewModel.getShopDetail().observe(SettingProfileEditingActivity.this, new Observer<GetShopDetailResponse>() {\r\n            @Override\r\n            public void onChanged(GetShopDetailResponse getShopDetailResponse) {\r\n                if (getShopDetailResponse != null) {\r\n                    // Toast.makeText(getActivity(), \"\" + getShopDetailResponse.getStatusDetail() + getShopDetailResponse.getData().getRequestList().getBranchAddress().size(), Toast.LENGTH_SHORT).show();\r\n\r\n                    shopOwnername.setText(getShopDetailResponse.getData().getRequestList().getShopOwnerName());\r\n\r\n                    if (shopOwnername.getText().toString().equals(\" \")) {\r\n                        shopOwnername.setHint(\"Your Name Required...\");\r\n                    }\r\n\r\n                    if(!getShopDetailResponse.getData().getRequestList().getShopRating().equals(\"\")) {\r\n                        DecimalFormat df = new DecimalFormat(\"#.#\");\r\n                        df.setRoundingMode(RoundingMode.CEILING);\r\n                        rating_number.setText(df.format(Double.parseDouble(getShopDetailResponse.getData().getRequestList().getShopRating())));\r\n                    }else\r\n                        rating_number.setText(\"No Rating\");\r\n\r\n                    RequestOptions myOptions = new RequestOptions()\r\n                            .override(100, 100);\r\n\r\n                    Glide.with(SettingProfileEditingActivity.this)\r\n                            .asBitmap()\r\n                            .apply(myOptions)\r\n                            .placeholder(R.drawable.ic_avatar)\r\n                            .load(getShopDetailResponse.getData().getRequestList().getShopOwnerImage())\r\n                            .into(iv_profile);\r\n\r\n                  /*  Glide.with(SettingProfileEditingActivity.this).\r\n                            load(getShopDetailResponse.getData().getRequestList().getShopOwnerImage()).\r\n                            thumbnail(0.05f).\r\n                            placeholder(R.drawable.ic_avatar)\r\n                            .into(iv_profile);*/\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void checkPermissions() {\r\n        dialogImage = new Dialog(SettingProfileEditingActivity.this);\r\n        dialogImage.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialogImage.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialogImage.setContentView(R.layout.dialog_upload_capture);\r\n\r\n        Button upload = dialogImage.findViewById(R.id.uploadImage);\r\n        Button capture = dialogImage.findViewById(R.id.captureImage);\r\n\r\n        upload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) +\r\n                        ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.CAMERA) +\r\n                        ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        != PackageManager.PERMISSION_GRANTED) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.CAMERA) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(SettingProfileEditingActivity.this);\r\n                        builder.setTitle(\"Grant those permissions...\");\r\n                        builder.setMessage(\"Camera and External Storage Permission Required...\");\r\n                        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                            @RequiresApi(api = Build.VERSION_CODES.M)\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                requestPermissions(new String[]{\r\n                                        Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                        Manifest.permission.CAMERA,\r\n                                        Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                                }, 1);\r\n\r\n                            }\r\n                        });\r\n\r\n                        builder.setNegativeButton(\"Cancel\", null);\r\n                        AlertDialog alertDialog = builder.create();\r\n                        alertDialog.show();\r\n                    } else { //ye lines for the very first time chalein gy jab app start hongy\r\n                        ActivityCompat.requestPermissions(SettingProfileEditingActivity.this, new String[]{\r\n                                Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                Manifest.permission.CAMERA,\r\n                                Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                        }, 1);\r\n                    }\r\n                } else {\r\n                    dialogImage.dismiss();\r\n                    openGallery();\r\n                }\r\n            }\r\n        });\r\n        capture.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) +\r\n                        ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.CAMERA) +\r\n                        ContextCompat.checkSelfPermission(SettingProfileEditingActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                        != PackageManager.PERMISSION_GRANTED) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.CAMERA) ||\r\n                            ActivityCompat.shouldShowRequestPermissionRationale(SettingProfileEditingActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                    ) {\r\n\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(SettingProfileEditingActivity.this);\r\n                        builder.setTitle(\"Grant those permissions...\");\r\n                        builder.setMessage(\"Camera External Storage Permission Required...\");\r\n                        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                ActivityCompat.requestPermissions(SettingProfileEditingActivity.this, new String[]{\r\n                                        Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                        Manifest.permission.CAMERA,\r\n                                        Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                                }, 2);\r\n\r\n                            }\r\n                        });\r\n\r\n                        builder.setNegativeButton(\"Cancel\", null);\r\n                        AlertDialog alertDialog = builder.create();\r\n                        alertDialog.show();\r\n                    } else { //ye lines for the very first time chalein gy jab app start hongy\r\n                        ActivityCompat.requestPermissions(SettingProfileEditingActivity.this, new String[]{\r\n                                Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                Manifest.permission.CAMERA,\r\n                                Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                        }, 2);\r\n                    }\r\n                } else {\r\n                    dialogImage.dismiss();\r\n                    openCamera();\r\n                }\r\n            }\r\n        });\r\n\r\n        Window window = dialogImage.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n\r\n        window.setAttributes(wlp);\r\n        dialogImage.show();\r\n    }\r\n\r\n    private void openGallery() {\r\n        Intent gallery = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n        startActivityForResult(gallery, UPLOAD_IMAGE);\r\n    }\r\n\r\n    private void openCamera() {\r\n        Intent camera_intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        startActivityForResult(camera_intent, CAPTURE_IMAGE);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case 1: //pick and set image from gallery\r\n                if (grantResults.length > 0 && grantResults[0] + grantResults[1] == PackageManager.PERMISSION_GRANTED) {\r\n                    dialogImage.dismiss();\r\n                    openGallery();\r\n                }\r\n                break;\r\n            case 2: //capture image and set from camera\r\n                if (grantResults.length > 0 && grantResults[0] + grantResults[1] == PackageManager.PERMISSION_GRANTED) {\r\n                    dialogImage.dismiss();\r\n                    openCamera();\r\n                }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK && requestCode == UPLOAD_IMAGE) { //Upload image from gallery\r\n            imageUri = data.getData();\r\n            iv_profile.setImageURI(imageUri);\r\n            filePath = getPath(SettingProfileEditingActivity.this, imageUri);\r\n            Log.i(\"TAG\", \"onActivityResult: Gallery Upload Path\" + filePath);\r\n\r\n            //  if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n            Uri selectedImage = data.getData();\r\n            Bitmap bitmap = null;\r\n            try {\r\n                bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), selectedImage);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n            iv_profile.setImageBitmap(resized);\r\n            // }\r\n\r\n\r\n        } else if (resultCode == RESULT_OK && requestCode == CAPTURE_IMAGE) {\r\n\r\n            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {\r\n                Uri selectedImage = data.getData();\r\n                iv_profile.setImageURI(selectedImage);\r\n                filePath = getRealPathFromURI(selectedImage);\r\n                Log.i(\"TAG\", \"onActivityResult: Capture Capture Path\" + filePath);\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), selectedImage);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);\r\n                iv_profile.setImageBitmap(resized);\r\n            } else { //other than marshmallow\r\n                Bitmap photo = (Bitmap) data.getExtras().get(\"data\");\r\n                iv_profile.setImageBitmap(photo);\r\n                imageUri = getImageUri(SettingProfileEditingActivity.this, photo);\r\n                filePath = getRealPathFromURI(imageUri);\r\n                Log.i(\"TAG\", \"onActivityResult: Capture Path : \" + filePath);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.personalInfoRL) {\r\n            // navController.navigate(R.id.editingProfileFragment);\r\n\r\n            tv_personal.setTextColor(Color.parseColor(\"#50D4BF\"));\r\n            tv_storesettings.setTextColor(Color.parseColor(\"#000000\"));\r\n            tv_bank.setTextColor(Color.parseColor(\"#000000\"));\r\n\r\n            horizontalLine2.setVisibility(View.GONE);\r\n            horizontalLine1.setVisibility(View.VISIBLE);\r\n            horizontalLine3.setVisibility(View.GONE);\r\n\r\n        } else if (v.getId() == R.id.storeSettingRL) {\r\n            navController.navigate(R.id.storeSettingFragment);\r\n            Toast.makeText(this, \"clicked...\", Toast.LENGTH_SHORT).show();\r\n\r\n            tv_personal.setTextColor(Color.parseColor(\"#000000\"));\r\n            tv_storesettings.setTextColor(Color.parseColor(\"#50D4BF\"));\r\n            tv_bank.setTextColor(Color.parseColor(\"#000000\"));\r\n\r\n            horizontalLine2.setVisibility(View.VISIBLE);\r\n            horizontalLine1.setVisibility(View.GONE);\r\n            horizontalLine3.setVisibility(View.GONE);\r\n\r\n        } else if (v.getId() == R.id.bankRL) {\r\n            navController.navigate(R.id.bankSettingFragment);\r\n\r\n            tv_personal.setTextColor(Color.parseColor(\"#000000\"));\r\n            tv_storesettings.setTextColor(Color.parseColor(\"#000000\"));\r\n            tv_bank.setTextColor(Color.parseColor(\"#50D4BF\"));\r\n\r\n            horizontalLine2.setVisibility(View.GONE);\r\n            horizontalLine1.setVisibility(View.GONE);\r\n            horizontalLine3.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    //This method return file path when we choose image from gallery\r\n    public static String getPath(Context context, Uri uri) {\r\n        String result = null;\r\n        String[] proj = {MediaStore.Images.Media.DATA};\r\n        Cursor cursor = context.getContentResolver().query(uri, proj, null, null, null);\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                int column_index = cursor.getColumnIndexOrThrow(proj[0]);\r\n                result = cursor.getString(column_index);\r\n            }\r\n            cursor.close();\r\n        }\r\n        if (result == null) {\r\n            result = \"Not found\";\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //this method is used to get image uri , after capturing image from camera\r\n    public Uri getImageUri(Context inContext, Bitmap inImage) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n    //this method is used to get image path when user capture image from camera\r\n    public String getRealPathFromURI(Uri uri) {\r\n        String path = \"\";\r\n        if (getContentResolver() != null) {\r\n            Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n            if (cursor != null) {\r\n                cursor.moveToFirst();\r\n                int idx = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\r\n                path = cursor.getString(idx);\r\n                cursor.close();\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        finish();\r\n    }\r\n\r\n}
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/settingprofileediting/SettingProfileEditingActivity.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_seller/settingprofileediting/SettingProfileEditingActivity.java	(date 1628241162798)
@@ -107,6 +107,7 @@
         rating_number = findViewById(R.id.rating_number);
         tv_edit = findViewById(R.id.tv_edit);
 
+
         NoInternetDetection loadingDialog = new NoInternetDetection(this);
         networkReceiver = new NetworkReceiver(loadingDialog);
         IntentFilter intentFilter = new IntentFilter();
@@ -138,16 +139,68 @@
         bankRL.setOnClickListener(this);
         iv_imageedit = findViewById(R.id.iv_edit);
 
+        shopOwnername.setEnabled(false);
+
         tv_edit.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 if (toggle) {
+                    // tv_edit.setVisibility(View.VISIBLE);
+                    //iv_imageedit.setVisibility(View.GONE);
+                    tv_edit.setText("Edit Profile");
+
+                    UpdateUserAndImage updateUserAndImage = new UpdateUserAndImage();
+                    updateUserAndImage.setFirstName(shopOwnername.getText().toString());
+                    updateUserAndImage.setMiddleName(" ");
+                    updateUserAndImage.setLastName(" ");
+                    updateUserAndImage.setProfileId(Constant.PROFILE_ID);
+                    updateUserAndImage.setProfilePic(TextUtils.isEmpty(filePath) ? "" : filePath);
+                    iv_imageedit.setVisibility(View.GONE);
                     tv_edit.setVisibility(View.VISIBLE);
-                    iv_imageedit.setVisibility(View.GONE);
+                    toggle = true;
+
+
+                    if (TextUtils.isEmpty(filePath)) { //run when only name is given........
+
+                        shopRegistrationViewModel.userName(updateUserAndImage, SettingProfileEditingActivity.this);
+                        shopRegistrationViewModel.getUserName().observe(SettingProfileEditingActivity.this, new Observer<UpdateUserAndImageResponse>() {
+                            @Override
+                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
+                                if (updateUserAndImageResponse != null) {
+                                    Toast.makeText(SettingProfileEditingActivity.this, "Profile updated successfully...", Toast.LENGTH_SHORT);
+                                } else {
+
+                                }
+                                Toast.makeText(SettingProfileEditingActivity.this, "Profile updated successfully...", Toast.LENGTH_SHORT);
+                            }
+
+                        });
+                    } else {
+
+
+                        shopRegistrationViewModel.userImageandName(updateUserAndImage, SettingProfileEditingActivity.this);
+                        shopRegistrationViewModel.getUpdateUserImageResponse().observe(SettingProfileEditingActivity.this, new Observer<UpdateUserAndImageResponse>() {
+                            @Override
+                            public void onChanged(UpdateUserAndImageResponse updateUserAndImageResponse) {
+                                if (updateUserAndImageResponse != null) {
+
+                                    Toast.makeText(SettingProfileEditingActivity.this, "Profile updated successfully...", Toast.LENGTH_SHORT);
+
+                                } else {
+
+                                }
+                                Toast.makeText(SettingProfileEditingActivity.this, "Profile updated successfully...", Toast.LENGTH_SHORT);
+                            }
+                        });
+                    }
+
+                    shopOwnername.setEnabled(false);
                     toggle = false;
                 } else {
-                    tv_edit.setVisibility(View.GONE);
-                    iv_imageedit.setVisibility(View.VISIBLE);
+                    // tv_edit.setVisibility(View.GONE);
+                    tv_edit.setText("Save Profile");
+                    shopOwnername.setEnabled(true);
+                    // iv_imageedit.setVisibility(View.VISIBLE);
                     toggle = true;
                 }
 
@@ -276,11 +329,11 @@
                         shopOwnername.setHint("Your Name Required...");
                     }
 
-                    if(!getShopDetailResponse.getData().getRequestList().getShopRating().equals("")) {
+                    if (!getShopDetailResponse.getData().getRequestList().getShopRating().equals("")) {
                         DecimalFormat df = new DecimalFormat("#.#");
                         df.setRoundingMode(RoundingMode.CEILING);
                         rating_number.setText(df.format(Double.parseDouble(getShopDetailResponse.getData().getRequestList().getShopRating())));
-                    }else
+                    } else
                         rating_number.setText("No Rating");
 
                     RequestOptions myOptions = new RequestOptions()
@@ -464,9 +517,9 @@
         } else if (resultCode == RESULT_OK && requestCode == CAPTURE_IMAGE) {
 
             if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
-                Uri selectedImage = data.getData();
+            /*    Uri selectedImage = data.getData();
                 iv_profile.setImageURI(selectedImage);
-                filePath = getRealPathFromURI(selectedImage);
+                filePath = getPath(SettingProfileEditingActivity.this,selectedImage);
                 Log.i("TAG", "onActivityResult: Capture Capture Path" + filePath);
                 Bitmap bitmap = null;
                 try {
@@ -475,7 +528,12 @@
                     e.printStackTrace();
                 }
                 Bitmap resized = Bitmap.createScaledBitmap(bitmap, 250, 250, true);
-                iv_profile.setImageBitmap(resized);
+                iv_profile.setImageBitmap(resized);*/
+                Bitmap photo = (Bitmap) data.getExtras().get("data");
+                iv_profile.setImageBitmap(photo);
+                imageUri = getImageUri(SettingProfileEditingActivity.this, photo);
+                filePath = getRealPathFromURI(imageUri);
+                Log.i("TAG", "onActivityResult: Capture Path : " + filePath);
             } else { //other than marshmallow
                 Bitmap photo = (Bitmap) data.getExtras().get("data");
                 iv_profile.setImageBitmap(photo);
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Utility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.utils;\r\n\r\nimport android.content.Context;\r\nimport android.net.ConnectivityManager;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\nimport static android.content.Context.INPUT_METHOD_SERVICE;\r\nimport static androidx.core.content.ContextCompat.getSystemService;\r\n\r\npublic class Utility {\r\n\r\n    public static void hideKeyboard(Context myCtx,View view){\r\n        InputMethodManager inputMethodManager = (InputMethodManager) myCtx.getSystemService(INPUT_METHOD_SERVICE);\r\n        inputMethodManager.hideSoftInputFromWindow(view.getApplicationWindowToken(),0);\r\n    }\r\n\r\n    public static String parseDateToddMMyyyy(String time) {\r\n        String inputPattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\r\n        String outputPattern = \"dd-MMM-yyyy h:mm a\";\r\n        SimpleDateFormat inputFormat = new SimpleDateFormat(inputPattern);\r\n        SimpleDateFormat outputFormat = new SimpleDateFormat(outputPattern);\r\n\r\n        Date date = null;\r\n        String str = null;\r\n\r\n        try {\r\n            date = inputFormat.parse(time);\r\n            str = outputFormat.format(date);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public static boolean isNetworkAvailable(Context context) {\r\n        ConnectivityManager connectivityManager = ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE));\r\n        return connectivityManager.getActiveNetworkInfo() != null && connectivityManager.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Utility.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/utils/Utility.java	(date 1628245265915)
@@ -1,14 +1,31 @@
 package com.tilismtech.tellotalk_shopping_sdk.utils;
 
+import android.content.ContentResolver;
+import android.content.ContentValues;
 import android.content.Context;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.media.MediaScannerConnection;
 import android.net.ConnectivityManager;
+import android.net.Uri;
+import android.os.Environment;
+import android.provider.MediaStore;
+import android.util.Log;
 import android.view.View;
 import android.view.WindowManager;
+import android.view.animation.AlphaAnimation;
 import android.view.inputmethod.InputMethodManager;
+import android.widget.LinearLayout;
+import android.widget.Toast;
 
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.Objects;
+import java.util.Random;
 
 import static android.content.Context.INPUT_METHOD_SERVICE;
 import static androidx.core.content.ContextCompat.getSystemService;
@@ -43,5 +60,79 @@
         return connectivityManager.getActiveNetworkInfo() != null && connectivityManager.getActiveNetworkInfo().isConnected();
     }
 
+    //for android Q and above version devices
+    public static void CaptureScreenShot(Bitmap bitmap, LinearLayout flash , Context context) {
+        OutputStream fos;
+
+        try {
+            ContentResolver contentResolver = context.getContentResolver();
+            ContentValues contentValues = new ContentValues();
+            contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, "IMAGE_" + ".jpg");
+            contentValues.put(MediaStore.MediaColumns.MIME_TYPE, "image/jpeg");
+            contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + File.separator + "TelloShopping");
+            Uri imageUri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues);
+
+            fos = (OutputStream) contentResolver.openOutputStream(Objects.requireNonNull(imageUri));
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);
+            Objects.requireNonNull(fos);
+
+            Toast.makeText(context, "Screen Shot Captured...", Toast.LENGTH_SHORT).show();
+
+            flash.setVisibility(View.VISIBLE);
+            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);
+            animation1.setDuration(500);
+            //  animation1.setStartOffset(5000);
+            animation1.setFillAfter(true);
+            flash.startAnimation(animation1);
+
+        } catch (Exception ex) {
+            Toast.makeText(context, "Some thing went wrong try again...", Toast.LENGTH_SHORT).show();
+        }
+    }
+
+    //for below android Q version devices
+    public static void captureScreenShot(Bitmap bitmap, LinearLayout flash,Context context) {
+        String root = Environment.getExternalStorageDirectory().toString();
+        File myDir = new File(root + "/TelloShopping");
+        myDir.mkdirs();
+        Random generator = new Random();
+        int n = 10000;
+        n = generator.nextInt(n);
+        String fname = "Image-" + n + ".jpg";
+        File file = new File(myDir, fname);
+        Log.i("TAG", "" + file);
+        if (file.exists())
+            file.delete();
+        try {
+            FileOutputStream out = new FileOutputStream(file);
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);
+            out.flush();
+            out.close();
+            Toast.makeText(context, "Screen Shot Captured...", Toast.LENGTH_SHORT).show();
+
+            flash.setVisibility(View.VISIBLE);
+            AlphaAnimation animation1 = new AlphaAnimation(1.0f, 0.0f);
+            animation1.setDuration(500);
+            //  animation1.setStartOffset(5000);
+            animation1.setFillAfter(true);
+            flash.startAnimation(animation1);
+
+            //this code refresh gallery
+            MediaScannerConnection.scanFile(context, new String[]{file.getPath()}, null,
+                    new MediaScannerConnection.OnScanCompletedListener() {
+                        @Override
+                        public void onScanCompleted(String path, Uri uri) {
+                            Log.i("TAG", "Scanned " + path);
+                        }
+                    });
+
+            context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(file.getAbsolutePath()))));
+
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
 
 }
Index: shoppingsdk/src/main/res/layout/activity_client_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/darker_gray\"\r\n    android:orientation=\"vertical\"\r\n    tools:openDrawer=\"end\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/body\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@android:color/white\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.appcompat.widget.Toolbar\r\n                android:id=\"@+id/toolbar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"?actionBarSize\"\r\n                android:background=\"#E7EDF0\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/drawerOpenClose\"\r\n                android:layout_width=\"24dp\"\r\n                android:layout_height=\"24dp\"\r\n                android:layout_gravity=\"start|center\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:src=\"@drawable/hamberg_icon\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <androidx.fragment.app.FragmentContainerView\r\n            android:id=\"@+id/nav_host_fragment\"\r\n            android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:defaultNavHost=\"true\"\r\n            app:navGraph=\"@navigation/nav_graph_client\" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        app:headerLayout=\"@layout/navigation_client_header\"\r\n        app:menu=\"@menu/menu_client_categories\" />\r\n\r\n</androidx.drawerlayout.widget.DrawerLayout>
===================================================================
--- shoppingsdk/src/main/res/layout/activity_client_home.xml	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/res/layout/activity_client_home.xml	(date 1627898739013)
@@ -53,6 +53,6 @@
         android:layout_height="match_parent"
         android:layout_gravity="start"
         app:headerLayout="@layout/navigation_client_header"
-        app:menu="@menu/menu_client_categories" />
+        />
 
 </androidx.drawerlayout.widget.DrawerLayout>
\ No newline at end of file
Index: shoppingsdk/src/main/res/drawable/four_corner_rounded_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <corners android:radius=\"20dp\" />\r\n    <stroke android:width=\"1dp\" android:color=\"@android:color/white\"/>\r\n</shape>
===================================================================
--- shoppingsdk/src/main/res/drawable/four_corner_rounded_image.xml	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/res/drawable/four_corner_rounded_image.xml	(date 1628244007468)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <corners android:radius="20dp" />
-    <stroke android:width="1dp" android:color="@android:color/white"/>
+    <corners android:radius="360dp" />
+    <stroke android:width="1dp" android:color="@android:color/black"/>
 </shape>
\ No newline at end of file
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/adapters/orderListadapters/CancelledAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.adapters.orderListadapters;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.Filter;\r\nimport android.widget.Filterable;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.CustomSpinnerAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.ReceivedItemPojo;\r\nimport com.tilismtech.tellotalk_shopping_sdk.pojos.responsebody.GetOrderByStatusResponse;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CancelledAdapter extends RecyclerView.Adapter<CancelledAdapter.CancelledItemViewHolder> implements Filterable {\r\n\r\n    List<GetOrderByStatusResponse.Request> cancelledItems;\r\n    Context myCtx;\r\n    Button done;\r\n    OnOrderClickListener onOrderClickListener;\r\n    List<GetOrderByStatusResponse.Request> cancelledItemsFull;\r\n\r\n\r\n    public CancelledAdapter(List<GetOrderByStatusResponse.Request> receivedItemPojos, Context myCtx, OnOrderClickListener onOrderClickListener) {\r\n        this.cancelledItems = receivedItemPojos;\r\n        this.myCtx = myCtx;\r\n        this.onOrderClickListener = onOrderClickListener;\r\n        if (cancelledItems != null) {\r\n            this.cancelledItemsFull = new ArrayList<>(cancelledItems);\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public CancelledItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.rv_orderlist_cancelled_items, parent, false);\r\n        return new CancelledItemViewHolder(v, this.onOrderClickListener);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull CancelledItemViewHolder holder, int position) {\r\n        GetOrderByStatusResponse.Request receivedItemPojo = cancelledItems.get(position);\r\n\r\n        String str = receivedItemPojo.getOrderno();\r\n        String[] arrOfStr = str.split(\"-\");\r\n\r\n        holder.orderNumber.setText(\"Order # \" + arrOfStr[3]);\r\n        holder.customerName.setText(receivedItemPojo.getFirstname() + \" \" + receivedItemPojo.getMiddlename() + \"\\n\" + receivedItemPojo.getMobile());\r\n        holder.address.setText(receivedItemPojo.getCompleteAddress());\r\n        holder.date.setText(receivedItemPojo.getOrderdate());\r\n        holder.rupees.setText(\"Rs : \" + receivedItemPojo.getGrandtotal());\r\n\r\n        if (receivedItemPojo.getRiderName() != null && receivedItemPojo.getRiderContact() != null) {\r\n            holder.addRiderInfo1.setVisibility(View.VISIBLE);\r\n            holder.addRiderInfo.setVisibility(View.GONE);\r\n            holder.edit_rider_info.setVisibility(View.VISIBLE);\r\n            holder.addRiderInfo1.setText(receivedItemPojo.getRiderName() + \" / \" + receivedItemPojo.getRiderContact());\r\n        } else {\r\n            holder.addRiderInfo1.setVisibility(View.GONE);\r\n            holder.addRiderInfo.setVisibility(View.VISIBLE);\r\n            holder.edit_rider_info.setVisibility(View.GONE);\r\n        }\r\n\r\n        holder.quantity.setText(\"Qty .\" + receivedItemPojo.getQuantity());\r\n\r\n        holder.iv_locate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(myCtx, \"\" + receivedItemPojo.getReason(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        if (cancelledItems != null) {\r\n            return cancelledItems.size();\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Filter getFilter() {\r\n        return cancelledItemFilter;\r\n    }\r\n\r\n    public Filter cancelledItemFilter = new Filter() {\r\n        @Override\r\n        protected FilterResults performFiltering(CharSequence constraint) {\r\n            List<GetOrderByStatusResponse.Request> filterList = new ArrayList<>();\r\n\r\n            if (constraint == null || constraint.length() == 0) {\r\n                filterList.addAll(cancelledItemsFull);\r\n            } else {\r\n                String filterPattern = constraint.toString().toLowerCase().trim();\r\n                for (GetOrderByStatusResponse.Request item : cancelledItemsFull) {\r\n                    if (String.valueOf(item.getOrderno()).toLowerCase().contains(filterPattern)) {\r\n                        filterList.add(item);\r\n                    }\r\n                }\r\n            }\r\n\r\n            FilterResults filterResults = new FilterResults();\r\n            filterResults.values = filterList;\r\n            return filterResults;\r\n        }\r\n\r\n        @Override\r\n        protected void publishResults(CharSequence constraint, FilterResults results) {\r\n            if(cancelledItems != null) {\r\n                cancelledItems.clear();\r\n                cancelledItems.addAll((List) results.values);\r\n                notifyDataSetChanged();\r\n            }\r\n        }\r\n    };\r\n\r\n    public class CancelledItemViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\r\n\r\n        private TextView orderNumber, customerName, address, quantity, date, rupees, addRiderInfo, viewFull, orderStatus, addRiderInfo1;\r\n        private Spinner spinner_moveto;\r\n        OnOrderClickListener onOrderClickListener;\r\n        ImageView edit_rider_info;\r\n        ImageView iv_locate;\r\n\r\n\r\n        public CancelledItemViewHolder(@NonNull View itemView, OnOrderClickListener onOrderClickListener) {\r\n            super(itemView);\r\n\r\n            iv_locate = itemView.findViewById(R.id.iv_locate);\r\n            orderNumber = itemView.findViewById(R.id.orderNumber);\r\n            customerName = itemView.findViewById(R.id.customerName);\r\n            address = itemView.findViewById(R.id.address);\r\n            quantity = itemView.findViewById(R.id.quantity);\r\n            date = itemView.findViewById(R.id.date);\r\n            rupees = itemView.findViewById(R.id.rupees);\r\n            addRiderInfo = itemView.findViewById(R.id.addRiderInfo);\r\n            viewFull = itemView.findViewById(R.id.viewFull);\r\n            orderStatus = itemView.findViewById(R.id.orderStatus);\r\n            spinner_moveto = itemView.findViewById(R.id.spinner_moveto);\r\n            addRiderInfo1 = itemView.findViewById(R.id.addRiderInfo1);\r\n            edit_rider_info = itemView.findViewById(R.id.edit_rider_info);\r\n\r\n            this.onOrderClickListener = onOrderClickListener;\r\n            viewFull.setOnClickListener(this);\r\n            addRiderInfo.setOnClickListener(this);\r\n            orderStatus.setOnClickListener(this);\r\n            addRiderInfo1.setOnClickListener(this);\r\n            edit_rider_info.setOnClickListener(this);\r\n            itemView.setOnClickListener(this);\r\n\r\n            CustomSpinnerAdapter adapter = new CustomSpinnerAdapter(myCtx, R.layout.spinner_text, myCtx.getResources().getStringArray(R.array.cancel));\r\n            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            spinner_moveto.setAdapter(adapter);\r\n\r\n            /*ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(myCtx, R.layout.spinner_text, myCtx.getResources().getStringArray(R.array.cancel));\r\n            spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); // The drop down vieww\r\n            spinner_moveto.setAdapter(spinnerArrayAdapter);*/\r\n\r\n            spinner_moveto.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n                @Override\r\n                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                    if (parent.getId() == spinner_moveto.getId()) {\r\n                        if (parent.getItemAtPosition(position).equals(\"Accept\")) {\r\n                            onOrderClickListener.OnStatusChange(2, cancelledItems.get(getAdapterPosition()).getOrderid());\r\n                        } else if (parent.getItemAtPosition(position).equals(\"Dispatch\")) {\r\n                            onOrderClickListener.OnStatusChange(3, cancelledItems.get(getAdapterPosition()).getOrderid());\r\n                        } else if (parent.getItemAtPosition(position).equals(\"Deliver\")) {\r\n                            onOrderClickListener.OnStatusChange(4, cancelledItems.get(getAdapterPosition()).getOrderid());\r\n                        } else if (parent.getItemAtPosition(position).equals(\"Paid\")) {\r\n                            onOrderClickListener.OnStatusChange(5, cancelledItems.get(getAdapterPosition()).getOrderid());\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View v) {\r\n            if (v.getId() == R.id.viewFull) {\r\n                onOrderClickListener.OnViewFullOrderListener(cancelledItems.get(getAdapterPosition()).getOrderid());\r\n            } else if (v.getId() == R.id.addRiderInfo) {\r\n                onOrderClickListener.OnRiderInfoUpdateListener(cancelledItems.get(getAdapterPosition()).getOrderid());\r\n            } else if (v.getId() == R.id.orderStatus) {\r\n               // onOrderClickListener.OnStatusChange(5, cancelledItems.get(getAdapterPosition()).getOrderid());\r\n            } else if (v.getId() == R.id.edit_rider_info) {\r\n                onOrderClickListener.OnRiderInfoUpdateListener(cancelledItems.get(getAdapterPosition()).getOrderid(),cancelledItems.get(getAdapterPosition()));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public interface OnOrderClickListener {\r\n        void OnViewFullOrderListener(int position);\r\n\r\n        void OnRiderInfoUpdateListener(int position);\r\n\r\n        void OnRiderInfoUpdateListener(int position, GetOrderByStatusResponse.Request request);\r\n\r\n        void OnStatusChange(int status, int OrderID);\r\n    }\r\n\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/adapters/orderListadapters/CancelledAdapter.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/adapters/orderListadapters/CancelledAdapter.java	(date 1627897816509)
@@ -81,7 +81,7 @@
 
         holder.quantity.setText("Qty ." + receivedItemPojo.getQuantity());
 
-        holder.iv_locate.setOnClickListener(new View.OnClickListener() {
+        holder.reaForCancellation.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 Toast.makeText(myCtx, "" + receivedItemPojo.getReason(), Toast.LENGTH_SHORT).show();
@@ -141,6 +141,7 @@
         OnOrderClickListener onOrderClickListener;
         ImageView edit_rider_info;
         ImageView iv_locate;
+        Button reaForCancellation ;
 
 
         public CancelledItemViewHolder(@NonNull View itemView, OnOrderClickListener onOrderClickListener) {
@@ -159,6 +160,7 @@
             spinner_moveto = itemView.findViewById(R.id.spinner_moveto);
             addRiderInfo1 = itemView.findViewById(R.id.addRiderInfo1);
             edit_rider_info = itemView.findViewById(R.id.edit_rider_info);
+            reaForCancellation = itemView.findViewById(R.id.reaForCancellation);
 
             this.onOrderClickListener = onOrderClickListener;
             viewFull.setOnClickListener(this);
Index: shoppingsdk/src/main/res/layout/rv_orderlist_cancelled_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"6dp\"\r\n    android:elevation=\"8dp\"\r\n    android:foreground=\"@drawable/bg_roundrect_ripple_light_border\"\r\n    app:cardCornerRadius=\"23dp\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"8dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/orderNumber\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:text=\"Order # AAB - 110\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"12sp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/orderStatus\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:text=\"Cancelled\"\r\n            android:textColor=\"#D00C0C\"\r\n            android:textSize=\"15sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:visibility=\"gone\"\r\n            android:id=\"@+id/orderCancel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_toLeftOf=\"@+id/orderStatus\"\r\n            android:layout_marginEnd=\"55dp\"\r\n            android:text=\"Cancel\"\r\n            android:textColor=\"#DC1A19\"\r\n            android:textSize=\"15sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/customerName\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/orderNumber\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:text=\"Shahbaz Jamote \\n+923332263631\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"13sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/address\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/customerName\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:text=\"Unit 304 3rd Unit Floor\\nParsa Tower,PECHS sharah e faisal \"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"12sp\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_locate\"\r\n            android:layout_width=\"24dp\"\r\n            android:layout_height=\"24dp\"\r\n            android:paddingBottom=\"3dp\"\r\n            android:src=\"@drawable/ic_address\"\r\n            android:layout_toLeftOf=\"@+id/lldetail\"\r\n            android:layout_alignBottom=\"@+id/address\"\r\n            android:layout_toRightOf=\"@+id/address\"/>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_above=\"@+id/viewFull\"\r\n            android:layout_below=\"@+id/orderNumber\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:gravity=\"end|center\"\r\n            android:orientation=\"vertical\"\r\n            >\r\n\r\n            <TextView\r\n                android:id=\"@+id/quantity\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/customerName\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:text=\"Items : 5\"\r\n                android:textColor=\"@android:color/black\"\r\n                android:textSize=\"12sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/customerName\"\r\n                android:layout_marginTop=\"2dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:text=\" 5 jan , 2021 / 3:54 P.M \"\r\n                android:textColor=\"@android:color/black\"\r\n                android:textSize=\"12sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/rupees\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/customerName\"\r\n                android:layout_marginTop=\"2dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:text=\"Rs : 750\"\r\n                android:textColor=\"@android:color/black\"\r\n                android:textSize=\"15sp\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <TextView\r\n            android:id=\"@+id/addRiderInfo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/address\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:text=\"+ Add Rider Info\"\r\n            android:textColor=\"#226EE8\"\r\n            android:textSize=\"12sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/addRiderInfo1\"\r\n            android:visibility=\"gone\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/address\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:text=\"sharjeel / 0333-0347473\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"12sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/edit_rider_info\"\r\n            android:visibility=\"gone\"\r\n            android:layout_width=\"13dp\"\r\n            android:layout_height=\"13dp\"\r\n            android:layout_below=\"@+id/address\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_toRightOf=\"@+id/addRiderInfo1\"\r\n            android:layout_marginStart=\"5dp\"\r\n            android:src=\"@drawable/ic_edit_three\"/>\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinner_moveto\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/address\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_toLeftOf=\"@+id/viewFull\"\r\n            android:background=\"@drawable/bg_spinner_order_status\"\r\n            android:paddingEnd=\"30dp\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/viewFull\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/address\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:text=\"View Full\"\r\n            android:textColor=\"#226EE8\"\r\n            android:textSize=\"12sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </RelativeLayout>\r\n</androidx.cardview.widget.CardView>
===================================================================
--- shoppingsdk/src/main/res/layout/rv_orderlist_cancelled_items.xml	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/res/layout/rv_orderlist_cancelled_items.xml	(date 1627897967128)
@@ -24,6 +24,18 @@
             android:textColor="@android:color/black"
             android:textSize="12sp" />
 
+        <Button
+            android:id="@+id/reaForCancellation"
+            android:layout_width="wrap_content"
+            android:layout_height="25dp"
+            android:layout_marginEnd="10dp"
+            android:background="@drawable/rounded_img"
+            android:text="Reason"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:layout_toLeftOf="@+id/orderStatus"
+            android:textAllCaps="false" />
+
         <TextView
             android:id="@+id/orderStatus"
             android:layout_width="wrap_content"
@@ -31,23 +43,24 @@
             android:layout_alignParentTop="true"
             android:layout_alignParentEnd="true"
             android:layout_marginEnd="10dp"
+            android:layout_marginTop="2dp"
             android:text="Cancelled"
             android:textColor="#D00C0C"
             android:textSize="15sp"
             android:textStyle="bold" />
 
         <TextView
-            android:visibility="gone"
             android:id="@+id/orderCancel"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_alignParentTop="true"
-            android:layout_toLeftOf="@+id/orderStatus"
             android:layout_marginEnd="55dp"
+            android:layout_toLeftOf="@+id/orderStatus"
             android:text="Cancel"
             android:textColor="#DC1A19"
             android:textSize="15sp"
-            android:textStyle="bold" />
+            android:textStyle="bold"
+            android:visibility="gone" />
 
         <TextView
             android:id="@+id/customerName"
@@ -78,11 +91,11 @@
             android:id="@+id/iv_locate"
             android:layout_width="24dp"
             android:layout_height="24dp"
-            android:paddingBottom="3dp"
-            android:src="@drawable/ic_address"
-            android:layout_toLeftOf="@+id/lldetail"
             android:layout_alignBottom="@+id/address"
-            android:layout_toRightOf="@+id/address"/>
+            android:layout_toLeftOf="@+id/lldetail"
+            android:layout_toRightOf="@+id/address"
+            android:paddingBottom="3dp"
+            android:src="@drawable/ic_address" />
 
         <LinearLayout
             android:layout_width="wrap_content"
@@ -91,8 +104,7 @@
             android:layout_below="@+id/orderNumber"
             android:layout_alignParentEnd="true"
             android:gravity="end|center"
-            android:orientation="vertical"
-            >
+            android:orientation="vertical">
 
             <TextView
                 android:id="@+id/quantity"
@@ -145,7 +157,6 @@
 
         <TextView
             android:id="@+id/addRiderInfo1"
-            android:visibility="gone"
             android:layout_width="100dp"
             android:layout_height="wrap_content"
             android:layout_below="@+id/address"
@@ -156,18 +167,19 @@
             android:text="sharjeel / 0333-0347473"
             android:textColor="@android:color/black"
             android:textSize="12sp"
-            android:textStyle="bold" />
+            android:textStyle="bold"
+            android:visibility="gone" />
 
         <ImageView
             android:id="@+id/edit_rider_info"
-            android:visibility="gone"
             android:layout_width="13dp"
             android:layout_height="13dp"
             android:layout_below="@+id/address"
+            android:layout_marginStart="5dp"
             android:layout_marginTop="16dp"
             android:layout_toRightOf="@+id/addRiderInfo1"
-            android:layout_marginStart="5dp"
-            android:src="@drawable/ic_edit_three"/>
+            android:src="@drawable/ic_edit_three"
+            android:visibility="gone" />
 
         <Spinner
             android:id="@+id/spinner_moveto"
Index: shoppingsdk/src/main/res/layout/dialog_edit_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/transparent\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/outerRL\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"60dp\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:alpha=\"0.5\"\r\n        android:orientation=\"horizontal\" />\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@+id/outerRL\"\r\n        android:background=\"@drawable/top_rounded_corners_40dp\"\r\n        android:paddingTop=\"10dp\">\r\n\r\n        <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:paddingTop=\"12dp\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/switch_opt\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:weightSum=\"3\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_deleteProduct\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.7\"\r\n                    android:gravity=\"center\"\r\n                    android:text=\"Delete Product\"\r\n                    android:textColor=\"@android:color/holo_red_dark\"\r\n                    android:textSize=\"12sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_editProduct\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:gravity=\"center\"\r\n                    android:text=\"Edit Product\"\r\n                    android:textColor=\"@android:color/black\"\r\n                    android:textSize=\"22sp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <Switch\r\n                    android:id=\"@+id/edit_switch\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_toRightOf=\"@+id/tv_editProduct\"\r\n                    android:layout_weight=\"1\" />\r\n\r\n            </LinearLayout>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/PN\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@+id/switch_opt\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:paddingTop=\"5dp\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/productName\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@null\"\r\n                    android:gravity=\"center|left\"\r\n                    android:hint=\"Product Name\"\r\n                    android:inputType=\"text\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"25dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n            <!--    <EditText\r\n                    android:id=\"@+id/productName\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:layout_below=\"@+id/switch_opt\"\r\n                    android:layout_marginStart=\"10dp\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:layout_marginEnd=\"10dp\"\r\n                    android:background=\"@drawable/edit_text_bg_color\"\r\n                    android:hint=\"Product Title\"\r\n                    android:paddingLeft=\"15dp\"\r\n                    android:text=\"\"\r\n                    android:visibility=\"gone\"\r\n                    android:textSize=\"14sp\"\r\n                    android:textStyle=\"bold\" />-->\r\n\r\n            <EditText\r\n                android:id=\"@+id/productCategory\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@+id/PN\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:enabled=\"false\"\r\n                android:paddingLeft=\"15dp\"\r\n                android:text=\"\"\r\n                android:textSize=\"14sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/categorySelection\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@id/productCategory\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <FrameLayout\r\n                    android:id=\"@+id/LL1\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/tabbar\"\r\n                    android:background=\"@drawable/edit_text_bg_color\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <Spinner\r\n                        android:id=\"@+id/parentSpinner\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@drawable/bg_spinner\"\r\n                        android:text=\"Khan-store.tello.com\"\r\n                        android:textSize=\"14sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"10dp\"\r\n                        android:paddingTop=\"3dp\"\r\n                        android:text=\"Select Industry : \"\r\n                        android:textSize=\"12sp\" />\r\n\r\n                </FrameLayout>\r\n\r\n                <FrameLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/tabbar\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:background=\"@drawable/edit_text_bg_color\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <Spinner\r\n                        android:id=\"@+id/childSpinner\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@drawable/bg_spinner\"\r\n                        android:text=\"Khan-store.tello.com\"\r\n                        android:textSize=\"14sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"10dp\"\r\n                        android:paddingTop=\"3dp\"\r\n                        android:text=\"Select Category : \"\r\n                        android:textSize=\"12sp\" />\r\n\r\n\r\n                </FrameLayout>\r\n\r\n            </LinearLayout>\r\n\r\n            <HorizontalScrollView\r\n                android:id=\"@+id/hor\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/categorySelection\"\r\n                android:layout_marginStart=\"12dp\"\r\n                android:fillViewport=\"true\">\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/LLimages\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/edittext2\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingTop=\"5dp\"\r\n                    android:paddingBottom=\"5dp\">\r\n\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/chooseMultipleProducts\"\r\n                        android:layout_width=\"100dp\"\r\n                        android:layout_height=\"100dp\"\r\n                        android:background=\"@drawable/edit_text_bg_color\"\r\n                        android:padding=\"40dp\"\r\n                        android:src=\"@drawable/ic_baseline_add_circle_outline\" />\r\n\r\n\r\n                </LinearLayout>\r\n            </HorizontalScrollView>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/youtube\"\r\n                android:layout_marginStart=\"10dp\"\r\n\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:paddingTop=\"5dp\"\r\n                android:layout_below=\"@+id/hor\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:hint=\"Youtube Video Product Url\"\r\n                    android:gravity=\"center|left\"\r\n                    android:id=\"@+id/et_VideoUrl\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"25dp\"\r\n                    android:textSize=\"14sp\"\r\n                    android:background=\"@null\"\r\n                    android:inputType=\"text\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/OP\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@+id/youtube\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:paddingTop=\"5dp\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/originalPrice\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@null\"\r\n                    android:gravity=\"center|left\"\r\n                    android:hint=\"Original Price\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"25dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--   <EditText\r\n                   android:id=\"@+id/originalPrice\"\r\n                   android:layout_width=\"match_parent\"\r\n                   android:layout_height=\"50dp\"\r\n                   android:layout_below=\"@+id/hor\"\r\n                   android:layout_marginStart=\"10dp\"\r\n                   android:layout_marginEnd=\"10dp\"\r\n                   android:background=\"@drawable/edit_text_bg_color\"\r\n                   android:hint=\"Original Price\"\r\n                   android:inputType=\"number\"\r\n                   android:paddingLeft=\"15dp\"\r\n                   android:text=\"\"\r\n                   android:textSize=\"14sp\"\r\n                   android:textStyle=\"bold\" />-->\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/DP\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@+id/OP\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"7dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:paddingTop=\"5dp\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/discountedPrice\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@null\"\r\n                    android:gravity=\"center|left\"\r\n                    android:hint=\"Discounted Price\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"25dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!-- <EditText\r\n                 android:id=\"@+id/discountedPrice\"\r\n                 android:layout_width=\"match_parent\"\r\n                 android:layout_height=\"50dp\"\r\n                 android:layout_below=\"@+id/OP\"\r\n                 android:layout_marginStart=\"10dp\"\r\n                 android:layout_marginTop=\"10dp\"\r\n                 android:layout_marginEnd=\"10dp\"\r\n                 android:background=\"@drawable/edit_text_bg_color\"\r\n                 android:hint=\"Discounted Price\"\r\n                 android:inputType=\"number\"\r\n                 android:paddingLeft=\"15dp\"\r\n                 android:text=\"\"\r\n                 android:textSize=\"14sp\"\r\n                 android:textStyle=\"bold\" />-->\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/SKU\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@+id/DP\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"7dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:paddingTop=\"5dp\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/skucodeoptional\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@null\"\r\n                    android:gravity=\"center|left\"\r\n                    android:hint=\"Product Qty\"\r\n                    android:inputType=\"numberDecimal\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"25dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--          <EditText\r\n                          android:id=\"@+id/skucodeoptional\"\r\n                          android:layout_width=\"match_parent\"\r\n                          android:layout_height=\"50dp\"\r\n                          android:layout_below=\"@+id/DP\"\r\n                          android:layout_marginStart=\"10dp\"\r\n                          android:layout_marginTop=\"10dp\"\r\n                          android:layout_marginEnd=\"10dp\"\r\n                          android:background=\"@drawable/edit_text_bg_color\"\r\n                          android:hint=\"SKU Code (optional)\"\r\n                          android:paddingLeft=\"15dp\"\r\n                          android:textSize=\"14sp\"\r\n                          android:textStyle=\"bold\" />-->\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/DESC\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/SKU\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:layout_marginTop=\"7dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/edit_text_bg_color\"\r\n                android:paddingTop=\"5dp\"\r\n                app:endIconMode=\"none\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/product_description\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@null\"\r\n                    android:gravity=\"center|left\"\r\n                    android:hint=\"Description\"\r\n                    android:inputType=\"textMultiLine\"\r\n                    android:text=\"\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:paddingBottom=\"22dp\"\r\n                    android:textSize=\"14sp\" />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n            <!--     <EditText\r\n                     android:id=\"@+id/product_description\"\r\n                     android:layout_width=\"match_parent\"\r\n                     android:layout_height=\"wrap_content\"\r\n                     android:layout_below=\"@+id/SKU\"\r\n                     android:layout_marginStart=\"10dp\"\r\n                     android:layout_marginTop=\"10dp\"\r\n                     android:layout_marginEnd=\"10dp\"\r\n                     android:background=\"@drawable/edit_text_bg_color\"\r\n                     android:gravity=\"left|top\"\r\n                     android:hint=\"Description\"\r\n                     android:paddingLeft=\"15dp\"\r\n                     android:paddingTop=\"15dp\"\r\n                     android:paddingRight=\"15dp\"\r\n                     android:paddingBottom=\"20dp\"\r\n                     android:text=\"\"\r\n                     android:textSize=\"14sp\"\r\n                     android:textStyle=\"bold\" />-->\r\n\r\n            <Button\r\n                android:id=\"@+id/post_product_btn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/DESC\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:background=\"@drawable/rounded_btn\"\r\n                android:paddingLeft=\"50dp\"\r\n                android:paddingRight=\"50dp\"\r\n                android:text=\"Update Product\"\r\n                android:textColor=\"@android:color/white\" />\r\n\r\n\r\n        </RelativeLayout>\r\n    </ScrollView>\r\n\r\n</RelativeLayout>\r\n\r\n
===================================================================
--- shoppingsdk/src/main/res/layout/dialog_edit_product.xml	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/res/layout/dialog_edit_product.xml	(date 1628235331780)
@@ -269,7 +269,7 @@
                     android:background="@null"
                     android:gravity="center|left"
                     android:hint="Original Price"
-                    android:inputType="numberDecimal"
+                    android:inputType="number"
                     android:paddingLeft="10dp"
                     android:paddingBottom="25dp"
                     android:textSize="14sp" />
@@ -310,7 +310,7 @@
                     android:background="@null"
                     android:gravity="center|left"
                     android:hint="Discounted Price"
-                    android:inputType="numberDecimal"
+                    android:inputType="number"
                     android:paddingLeft="10dp"
                     android:paddingBottom="25dp"
                     android:textSize="14sp" />
@@ -352,7 +352,7 @@
                     android:background="@null"
                     android:gravity="center|left"
                     android:hint="Product Qty"
-                    android:inputType="numberDecimal"
+                    android:inputType="number"
                     android:paddingLeft="10dp"
                     android:paddingBottom="25dp"
                     android:textSize="14sp" />
Index: shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/adapter/ShopSubCategoryAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tilismtech.tellotalk_shopping_sdk.ui_client.adapter;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.tilismtech.tellotalk_shopping_sdk.R;\r\nimport com.tilismtech.tellotalk_shopping_sdk.adapters.ColorChooserAdapter;\r\nimport com.tilismtech.tellotalk_shopping_sdk.ui_client.pojo.ShopItems;\r\n\r\nimport java.util.List;\r\n\r\npublic class ShopSubCategoryAdapter extends RecyclerView.Adapter<ShopSubCategoryAdapter.ShopSubCategoryVH>{\r\n\r\n    List<ShopItems> shopItemsList;\r\n    Context myCtx;\r\n\r\n\r\n    public ShopSubCategoryAdapter(List<ShopItems> shopItemsList , Context myCtx) {\r\n        this.shopItemsList = shopItemsList;\r\n        this.myCtx = myCtx;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ShopSubCategoryVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.shop_item_view, parent, false);\r\n        return new ShopSubCategoryVH(v);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ShopSubCategoryVH holder, int position) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return 0;\r\n    }\r\n\r\n    public class ShopSubCategoryVH extends RecyclerView.ViewHolder{\r\n        TextView productTitle , productDescription , productCategoryName , productOriginalPrice , productDiscountedPrice , inc , dec , productCount;\r\n\r\n        public ShopSubCategoryVH(@NonNull View itemView) {\r\n            super(itemView);\r\n            productTitle = itemView.findViewById(R.id.productTitle);\r\n            productDescription = itemView.findViewById(R.id.productDescription);\r\n        }\r\n\r\n    }\r\n}\r\n
===================================================================
--- shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/adapter/ShopSubCategoryAdapter.java	(revision f4218ea62c465dc5fb8c54818c57a6561cefe8fb)
+++ shoppingsdk/src/main/java/com/tilismtech/tellotalk_shopping_sdk/ui_client/adapters/ShopSubCategoryAdapter.java	(date 1627898398189)
@@ -1,4 +1,4 @@
-package com.tilismtech.tellotalk_shopping_sdk.ui_client.adapter;
+package com.tilismtech.tellotalk_shopping_sdk.ui_client.adapters;
 
 import android.content.Context;
 import android.view.LayoutInflater;
@@ -10,7 +10,6 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.tilismtech.tellotalk_shopping_sdk.R;
-import com.tilismtech.tellotalk_shopping_sdk.adapters.ColorChooserAdapter;
 import com.tilismtech.tellotalk_shopping_sdk.ui_client.pojo.ShopItems;
 
 import java.util.List;
